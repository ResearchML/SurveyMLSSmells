Repo,FileName,Hash,author,author_date,author_email,commiter,commiter_date,commiter_email,cloc,added,removed,message
bytedeco/javacpp,,,,,,,,,,,
,src/main/java/org/bytedeco/javacpp/annotation/StdBasicString.java,7918521232f04a47836626953ef782b2f2ab4df9,Alexey Rochev,2021-02-01T01:40:23Z,equeim@gmail.com,GitHub,2021-02-01T01:40:23Z,noreply@github.com,159,155,4," * Add `BasicStringAdapter` and corresponding `@StdBasicString`, `@StdU16String`, and `@StdU32String` annotations (pull #448)

Generator: add BasicStringAdapter

Add BasicStringAdapter, which is new version of StringAdapter
that can work with any basic_string<T>.

Also add `@StdU16String` and `@StdU32String` annotations
to use with `std::u16string` and `std::u32string`."
,src/main/java/org/bytedeco/javacpp/annotation/StdU16String.java,7918521232f04a47836626953ef782b2f2ab4df9,Alexey Rochev,2021-02-01T01:40:23Z,equeim@gmail.com,GitHub,2021-02-01T01:40:23Z,noreply@github.com,159,155,4," * Add `BasicStringAdapter` and corresponding `@StdBasicString`, `@StdU16String`, and `@StdU32String` annotations (pull #448)

Generator: add BasicStringAdapter

Add BasicStringAdapter, which is new version of StringAdapter
that can work with any basic_string<T>.

Also add `@StdU16String` and `@StdU32String` annotations
to use with `std::u16string` and `std::u32string`."
,src/main/java/org/bytedeco/javacpp/annotation/StdU32String.java,7918521232f04a47836626953ef782b2f2ab4df9,Alexey Rochev,2021-02-01T01:40:23Z,equeim@gmail.com,GitHub,2021-02-01T01:40:23Z,noreply@github.com,159,155,4," * Add `BasicStringAdapter` and corresponding `@StdBasicString`, `@StdU16String`, and `@StdU32String` annotations (pull #448)

Generator: add BasicStringAdapter

Add BasicStringAdapter, which is new version of StringAdapter
that can work with any basic_string<T>.

Also add `@StdU16String` and `@StdU32String` annotations
to use with `std::u16string` and `std::u32string`."
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,7918521232f04a47836626953ef782b2f2ab4df9,Alexey Rochev,2021-02-01T01:40:23Z,equeim@gmail.com,GitHub,2021-02-01T01:40:23Z,noreply@github.com,159,155,4," * Add `BasicStringAdapter` and corresponding `@StdBasicString`, `@StdU16String`, and `@StdU32String` annotations (pull #448)

Generator: add BasicStringAdapter

Add BasicStringAdapter, which is new version of StringAdapter
that can work with any basic_string<T>.

Also add `@StdU16String` and `@StdU32String` annotations
to use with `std::u16string` and `std::u32string`."
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,7918521232f04a47836626953ef782b2f2ab4df9,Alexey Rochev,2021-02-01T01:40:23Z,equeim@gmail.com,GitHub,2021-02-01T01:40:23Z,noreply@github.com,159,155,4," * Add `BasicStringAdapter` and corresponding `@StdBasicString`, `@StdU16String`, and `@StdU32String` annotations (pull #448)

Generator: add BasicStringAdapter

Add BasicStringAdapter, which is new version of StringAdapter
that can work with any basic_string<T>.

Also add `@StdU16String` and `@StdU32String` annotations
to use with `std::u16string` and `std::u32string`."
,src/test/resources/org/bytedeco/javacpp/AdapterTest.h,7918521232f04a47836626953ef782b2f2ab4df9,Alexey Rochev,2021-02-01T01:40:23Z,equeim@gmail.com,GitHub,2021-02-01T01:40:23Z,noreply@github.com,159,155,4," * Add `BasicStringAdapter` and corresponding `@StdBasicString`, `@StdU16String`, and `@StdU32String` annotations (pull #448)

Generator: add BasicStringAdapter

Add BasicStringAdapter, which is new version of StringAdapter
that can work with any basic_string<T>.

Also add `@StdU16String` and `@StdU32String` annotations
to use with `std::u16string` and `std::u32string`."
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,c493d8a676099875d0c9104c7c171c4e112cf02d,Samuel Audet,2021-01-27T03:25:39Z,samuel.audet@gmail.com,Samuel Audet,2021-01-27T03:25:39Z,samuel.audet@gmail.com,36,30,6," * Fix `Parser` failures on `try` blocks as function body, nested class templates, and aliases to namespaces starting with `::`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,c493d8a676099875d0c9104c7c171c4e112cf02d,Samuel Audet,2021-01-27T03:25:39Z,samuel.audet@gmail.com,Samuel Audet,2021-01-27T03:25:39Z,samuel.audet@gmail.com,36,30,6," * Fix `Parser` failures on `try` blocks as function body, nested class templates, and aliases to namespaces starting with `::`"
,src/main/java/org/bytedeco/javacpp/Loader.java,2ee94b8317ec8e5009950384e3114f546ab094b5,Samuel Audet,2021-01-04T06:14:12Z,samuel.audet@gmail.com,Samuel Audet,2021-01-04T06:14:12Z,samuel.audet@gmail.com,45,28,17," * Prevent `Loader` from failing to find, load, or link libraries multiple times"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,20f677c33e78be6de5885fbc4a8db95c73a9b08b,Samuel Audet,2021-01-03T01:12:44Z,samuel.audet@gmail.com,Samuel Audet,2021-01-03T01:12:44Z,samuel.audet@gmail.com,5,3,2, * Fix `Pointer.getPointer()` methods sometimes calling the wrong constructor (issue bytedeco/javacv#1556)
,src/main/java/org/bytedeco/javacpp/Pointer.java,07cd2523c409d78d59b1707ae0369362a71d35b5,Aman Gupta Karmani,2021-01-02T15:08:27Z,aman@tmm1.net,GitHub,2021-01-02T15:08:27Z,noreply@github.com,10,8,2, * Prevent Android from trying to load `PointerBufferPoolMXBean` by using it via reflection (pull #447)
,src/main/java/org/bytedeco/javacpp/Loader.java,139c4d5c48b57fb701d9d7eeb0c990283ef8201b,Samuel Audet,2020-12-10T02:58:00Z,samuel.audet@gmail.com,Samuel Audet,2020-12-10T02:58:00Z,samuel.audet@gmail.com,11,7,4, * Fix `Loader` not searching for libraries in more than one package
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,668066f88f3c07922fa77bba8702fc7c361bf282,Samuel Audet,2020-11-26T05:47:24Z,samuel.audet@gmail.com,Samuel Audet,2020-11-26T05:47:24Z,samuel.audet@gmail.com,3,2,1, * Prevent `Builder` from linking with `-framework JavaVM` when a path to the JVM library is found
,src/main/java/org/bytedeco/javacpp/tools/Declaration.java,e473740d311f642c5bb09bd67b644a8e72c2444b,Samuel Audet,2020-11-09T00:33:21Z,samuel.audet@gmail.com,Samuel Audet,2020-11-09T00:33:21Z,samuel.audet@gmail.com,23,17,6," * Let `Parser` output `Info.javaText` even for template declarations with no instances
 * Prevent `Tokenizer` from using `long` literals for unsigned integers of 16 bits or less"
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,e473740d311f642c5bb09bd67b644a8e72c2444b,Samuel Audet,2020-11-09T00:33:21Z,samuel.audet@gmail.com,Samuel Audet,2020-11-09T00:33:21Z,samuel.audet@gmail.com,23,17,6," * Let `Parser` output `Info.javaText` even for template declarations with no instances
 * Prevent `Tokenizer` from using `long` literals for unsigned integers of 16 bits or less"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,e473740d311f642c5bb09bd67b644a8e72c2444b,Samuel Audet,2020-11-09T00:33:21Z,samuel.audet@gmail.com,Samuel Audet,2020-11-09T00:33:21Z,samuel.audet@gmail.com,23,17,6," * Let `Parser` output `Info.javaText` even for template declarations with no instances
 * Prevent `Tokenizer` from using `long` literals for unsigned integers of 16 bits or less"
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,e473740d311f642c5bb09bd67b644a8e72c2444b,Samuel Audet,2020-11-09T00:33:21Z,samuel.audet@gmail.com,Samuel Audet,2020-11-09T00:33:21Z,samuel.audet@gmail.com,23,17,6," * Let `Parser` output `Info.javaText` even for template declarations with no instances
 * Prevent `Tokenizer` from using `long` literals for unsigned integers of 16 bits or less"
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,123ce0d6b5ba2d3288dfa46f3e615598ed585a73,Samuel Audet,2020-10-30T02:28:18Z,samuel.audet@gmail.com,Samuel Audet,2020-10-30T02:28:18Z,samuel.audet@gmail.com,19,19,0, * Ensure `Parser` considers `>=` and `<=` as single tokens to prevent failures
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,d7e6abe7c0160719aaa8dd27e0d837fdc1754fc2,Samuel Audet,2020-10-26T11:58:36Z,samuel.audet@gmail.com,Samuel Audet,2020-10-26T11:58:36Z,samuel.audet@gmail.com,7,7,0, * Make `Parser` use `Info.cppTypes` to override the type of `enum` values
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,b3835bd6b1ddf66e3edd9972f9083d2884559836,Samuel Audet,2020-10-14T07:34:06Z,samuel.audet@gmail.com,Samuel Audet,2020-10-14T07:34:06Z,samuel.audet@gmail.com,5,3,2, * Fix `Parser` not using the correct `Info.pointerTypes` for `const&` declarations
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,b3835bd6b1ddf66e3edd9972f9083d2884559836,Samuel Audet,2020-10-14T07:34:06Z,samuel.audet@gmail.com,Samuel Audet,2020-10-14T07:34:06Z,samuel.audet@gmail.com,5,3,2, * Fix `Parser` not using the correct `Info.pointerTypes` for `const&` declarations
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,7de40d1988dff6866035b97d4e2ca52c5f63cdfb,Samuel Audet,2020-09-30T04:12:02Z,samuel.audet@gmail.com,Samuel Audet,2020-09-30T04:12:02Z,samuel.audet@gmail.com,19,9,10, * Use pthreads in `Generator` to detach automatically native threads on exit for Linux and Mac as well
,src/main/java/org/bytedeco/javacpp/Loader.java,4933d924727ebbce51a442136a875ab623eb5907,Samuel Audet,2020-09-24T07:17:09Z,samuel.audet@gmail.com,Samuel Audet,2020-09-24T07:17:09Z,samuel.audet@gmail.com,28,20,8, * Let `Loader.load()` always succeed on optional libraries only available with extensions
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,45c46467e6a199c6ab67a5b4510797777ed00109,Samuel Audet,2020-09-12T09:19:39Z,samuel.audet@gmail.com,Samuel Audet,2020-09-12T09:19:39Z,samuel.audet@gmail.com,7,6,1, * Fix `Builder.addProperty()` incorrectly appending values together
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,e5dc8a6fa27bac3accef6e693a9061ea66746da3,Samuel Audet,2020-09-08T00:57:07Z,samuel.audet@gmail.com,Samuel Audet,2020-09-08T00:57:07Z,samuel.audet@gmail.com,6,5,1,Add missing config for GraalVM Native Image
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,e5dc8a6fa27bac3accef6e693a9061ea66746da3,Samuel Audet,2020-09-08T00:57:07Z,samuel.audet@gmail.com,Samuel Audet,2020-09-08T00:57:07Z,samuel.audet@gmail.com,6,5,1,Add missing config for GraalVM Native Image
,src/main/java/org/bytedeco/javacpp/Pointer.java,cc81ce726c5d15071e6f0dce0dad0913df9dee0a,Samuel Audet,2020-09-05T07:29:55Z,samuel.audet@gmail.com,Samuel Audet,2020-09-05T07:29:55Z,samuel.audet@gmail.com,22,17,5, * Fix `Parser` not producing `PointerPointer` parameters for `FunctionPointer` subclasses
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,cc81ce726c5d15071e6f0dce0dad0913df9dee0a,Samuel Audet,2020-09-05T07:29:55Z,samuel.audet@gmail.com,Samuel Audet,2020-09-05T07:29:55Z,samuel.audet@gmail.com,22,17,5, * Fix `Parser` not producing `PointerPointer` parameters for `FunctionPointer` subclasses
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,d074a67aa392cc265a6e158b1b3bc8cc74d061d1,Samuel Audet,2020-09-04T01:41:36Z,samuel.audet@gmail.com,Samuel Audet,2020-09-04T01:41:36Z,samuel.audet@gmail.com,5,5,0, * Let `Builder` copy even those `platform.executable` files without prefix or suffix
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,5d2fd286063bafbf0d89facc6d493dea3d3cc463,Samuel Audet,2020-08-31T02:32:12Z,samuel.audet@gmail.com,Samuel Audet,2020-08-31T02:32:12Z,samuel.audet@gmail.com,3,3,0, * Add missing declaration for `GetCurrentThreadId()` in `Generator` when `NO_WINDOWS_H` is defined
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,6db93987d4faef54b4ba0d0dfe0f9d3ba24df669,Samuel Audet,2020-08-26T07:05:45Z,samuel.audet@gmail.com,Samuel Audet,2020-08-26T07:05:45Z,samuel.audet@gmail.com,15,15,0, * Process `#undef` directives to allow redefining macros with `Parser` (issue bytedeco/javacpp-presets#935)
,src/main/java/org/bytedeco/javacpp/tools/Token.java,6db93987d4faef54b4ba0d0dfe0f9d3ba24df669,Samuel Audet,2020-08-26T07:05:45Z,samuel.audet@gmail.com,Samuel Audet,2020-08-26T07:05:45Z,samuel.audet@gmail.com,15,15,0, * Process `#undef` directives to allow redefining macros with `Parser` (issue bytedeco/javacpp-presets#935)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,90bcf09a7150460804feb322c1d98ab1f8822427,Samuel Audet,2020-08-20T11:32:30Z,samuel.audet@gmail.com,Samuel Audet,2020-08-20T11:32:30Z,samuel.audet@gmail.com,5,5,0," * Pick up in `Parser` methods specified with `override`, in addition to `virtual` (issue #419)"
,src/main/java/org/bytedeco/javacpp/tools/Token.java,90bcf09a7150460804feb322c1d98ab1f8822427,Samuel Audet,2020-08-20T11:32:30Z,samuel.audet@gmail.com,Samuel Audet,2020-08-20T11:32:30Z,samuel.audet@gmail.com,5,5,0," * Pick up in `Parser` methods specified with `override`, in addition to `virtual` (issue #419)"
,src/main/java/org/bytedeco/javacpp/tools/Context.java,d1941b50825ae0849cd853f3390b19d55ab9fc10,Samuel Audet,2020-08-20T02:55:09Z,samuel.audet@gmail.com,Samuel Audet,2020-08-20T02:55:09Z,samuel.audet@gmail.com,61,58,3, * Let `Parser` create a separate Java peer class when `Info.pointerTypes` is different for types prefixed with `const `
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,d1941b50825ae0849cd853f3390b19d55ab9fc10,Samuel Audet,2020-08-20T02:55:09Z,samuel.audet@gmail.com,Samuel Audet,2020-08-20T02:55:09Z,samuel.audet@gmail.com,61,58,3, * Let `Parser` create a separate Java peer class when `Info.pointerTypes` is different for types prefixed with `const `
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,d1941b50825ae0849cd853f3390b19d55ab9fc10,Samuel Audet,2020-08-20T02:55:09Z,samuel.audet@gmail.com,Samuel Audet,2020-08-20T02:55:09Z,samuel.audet@gmail.com,61,58,3, * Let `Parser` create a separate Java peer class when `Info.pointerTypes` is different for types prefixed with `const `
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,e3387ad28dc6dfca866d16cc555cb9bb03d37eee,Samuel Audet,2020-08-18T05:56:37Z,samuel.audet@gmail.com,Samuel Audet,2020-08-18T05:56:37Z,samuel.audet@gmail.com,5,5,0, * Fix `Generator` for `@Virtual` methods protected in subclasses by casting to superclass (issue #419)
,src/main/java/org/bytedeco/javacpp/tools/Info.java,51c0e833c1d2c6630ad791787ee8a0360a52fe5d,Samuel Audet,2020-08-16T11:13:57Z,samuel.audet@gmail.com,Samuel Audet,2020-08-16T11:13:57Z,samuel.audet@gmail.com,7,6,1, * Add missing values to `Info.Info(Info)` and fix incorrect `Info.skipDefaults(boolean)` (issue #420)
,src/main/java/org/bytedeco/javacpp/Pointer.java,341f65cf6159f2297c80233fd3769f1879cd2c70,Matteo Di Giovinazzo,2020-08-06T08:20:52Z,58744725+digiovinazzo@users.noreply.github.com,GitHub,2020-08-06T08:20:52Z,noreply@github.com,74,73,1, * Add `PointerBufferPoolMXBean` to track allocations and deallocations of `Pointer` (pull #413)
,src/main/java/org/bytedeco/javacpp/tools/PointerBufferPoolMXBean.java,341f65cf6159f2297c80233fd3769f1879cd2c70,Matteo Di Giovinazzo,2020-08-06T08:20:52Z,58744725+digiovinazzo@users.noreply.github.com,GitHub,2020-08-06T08:20:52Z,noreply@github.com,74,73,1, * Add `PointerBufferPoolMXBean` to track allocations and deallocations of `Pointer` (pull #413)
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,52951ca6a089d4daf5616c838199caddcf86792b,Samuel Audet,2020-08-02T01:49:17Z,samuel.audet@gmail.com,Samuel Audet,2020-08-02T01:49:17Z,samuel.audet@gmail.com,53,31,22, * Change the `@Platform(executable=...` property to an array and allow bundling multiple files per class
,src/main/java/org/bytedeco/javacpp/Loader.java,52951ca6a089d4daf5616c838199caddcf86792b,Samuel Audet,2020-08-02T01:49:17Z,samuel.audet@gmail.com,Samuel Audet,2020-08-02T01:49:17Z,samuel.audet@gmail.com,53,31,22, * Change the `@Platform(executable=...` property to an array and allow bundling multiple files per class
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,52951ca6a089d4daf5616c838199caddcf86792b,Samuel Audet,2020-08-02T01:49:17Z,samuel.audet@gmail.com,Samuel Audet,2020-08-02T01:49:17Z,samuel.audet@gmail.com,53,31,22, * Change the `@Platform(executable=...` property to an array and allow bundling multiple files per class
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,52951ca6a089d4daf5616c838199caddcf86792b,Samuel Audet,2020-08-02T01:49:17Z,samuel.audet@gmail.com,Samuel Audet,2020-08-02T01:49:17Z,samuel.audet@gmail.com,53,31,22, * Change the `@Platform(executable=...` property to an array and allow bundling multiple files per class
,src/main/java/org/bytedeco/javacpp/Pointer.java,a59010d3c3b5881a9ef9eb4ebb1373a198652751,Samuel Audet,2020-07-29T02:08:33Z,samuel.audet@gmail.com,Samuel Audet,2020-07-29T02:08:33Z,samuel.audet@gmail.com,11,6,5, * Prevent `Builder` unnecessarily linking with `-framework JavaVM` to fix GraalVM Native Image on Mac (issue #417)
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,a59010d3c3b5881a9ef9eb4ebb1373a198652751,Samuel Audet,2020-07-29T02:08:33Z,samuel.audet@gmail.com,Samuel Audet,2020-07-29T02:08:33Z,samuel.audet@gmail.com,11,6,5, * Prevent `Builder` unnecessarily linking with `-framework JavaVM` to fix GraalVM Native Image on Mac (issue #417)
,src/main/java/org/bytedeco/javacpp/BoolPointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/BooleanPointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/BytePointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/CharPointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/IntPointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/LongPointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/Pointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/test/java/org/bytedeco/javacpp/PointerTest.java,d7f731874c1b5b330c5a1c84697f72bffd83fd02,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,Samuel Audet,2020-07-20T11:41:23Z,samuel.audet@gmail.com,83,76,7, * Add `Pointer.getPointer()` methods as shortcuts for `new P(p).position(p.position + i)` (issue #155)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,8a0b08d2c1870fee666af6af6dc7334bac77a26f,Samuel Audet,2020-07-12T03:08:58Z,samuel.audet@gmail.com,Samuel Audet,2020-07-12T03:08:58Z,samuel.audet@gmail.com,46,31,15, * Fix `Generator` for cases when a `FunctionPointer` returns another `FunctionPointer`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,57574c2dafbc846b5cec2a968894424246a9e882,Samuel Audet,2020-06-23T12:00:39Z,samuel.audet@gmail.com,Samuel Audet,2020-06-23T12:00:39Z,samuel.audet@gmail.com,26,25,1, * Fix `Parser` failure with `auto` keyword of C++11 used for trailing return type
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,57574c2dafbc846b5cec2a968894424246a9e882,Samuel Audet,2020-06-23T12:00:39Z,samuel.audet@gmail.com,Samuel Audet,2020-06-23T12:00:39Z,samuel.audet@gmail.com,26,25,1, * Fix `Parser` failure with `auto` keyword of C++11 used for trailing return type
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,7d7c90ad221edf19f26fcd85a603aa71e3973248,Samuel Audet,2020-06-22T03:43:19Z,samuel.audet@gmail.com,Samuel Audet,2020-06-22T03:43:19Z,samuel.audet@gmail.com,3,2,1, * Fix `Parser` failure with `auto` keyword of C++11 used as placeholder type specifier (issue #407)
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,e2b39ad0f695b4542ec8361276406736b49e46a1,Samuel Audet,2020-06-20T23:32:27Z,samuel.audet@gmail.com,Samuel Audet,2020-06-20T23:32:27Z,samuel.audet@gmail.com,126,79,47,Fix loading issues with GraalVM Native Image
,src/main/java/org/bytedeco/javacpp/Loader.java,e2b39ad0f695b4542ec8361276406736b49e46a1,Samuel Audet,2020-06-20T23:32:27Z,samuel.audet@gmail.com,Samuel Audet,2020-06-20T23:32:27Z,samuel.audet@gmail.com,126,79,47,Fix loading issues with GraalVM Native Image
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,e2b39ad0f695b4542ec8361276406736b49e46a1,Samuel Audet,2020-06-20T23:32:27Z,samuel.audet@gmail.com,Samuel Audet,2020-06-20T23:32:27Z,samuel.audet@gmail.com,126,79,47,Fix loading issues with GraalVM Native Image
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,e2b39ad0f695b4542ec8361276406736b49e46a1,Samuel Audet,2020-06-20T23:32:27Z,samuel.audet@gmail.com,Samuel Audet,2020-06-20T23:32:27Z,samuel.audet@gmail.com,126,79,47,Fix loading issues with GraalVM Native Image
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,3a2adba276894d6ff4f7cfb91d3b318fc30f8447,Samuel Audet,2020-06-09T06:36:51Z,samuel.audet@gmail.com,Samuel Audet,2020-06-09T06:36:51Z,samuel.audet@gmail.com,169,160,9, * Add `Builder.configDirectory` option to let `Generator` output files that GraalVM needs for AOT compilation (issue eclipse/deeplearning4j#7362)
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,3a2adba276894d6ff4f7cfb91d3b318fc30f8447,Samuel Audet,2020-06-09T06:36:51Z,samuel.audet@gmail.com,Samuel Audet,2020-06-09T06:36:51Z,samuel.audet@gmail.com,169,160,9, * Add `Builder.configDirectory` option to let `Generator` output files that GraalVM needs for AOT compilation (issue eclipse/deeplearning4j#7362)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,3a2adba276894d6ff4f7cfb91d3b318fc30f8447,Samuel Audet,2020-06-09T06:36:51Z,samuel.audet@gmail.com,Samuel Audet,2020-06-09T06:36:51Z,samuel.audet@gmail.com,169,160,9, * Add `Builder.configDirectory` option to let `Generator` output files that GraalVM needs for AOT compilation (issue eclipse/deeplearning4j#7362)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,6d84ea788f7bb5b5fe8395387cd941460be8b091,Samuel Audet,2020-06-05T02:13:55Z,samuel.audet@gmail.com,Samuel Audet,2020-06-05T02:13:55Z,samuel.audet@gmail.com,12,9,3, * Fix `Parser` error on `template<>` containing non-type parameters without names (issue bytedeco/javacpp-presets#889)
,src/main/java/org/bytedeco/javacpp/Loader.java,c4115299e21eaf46cc1814742d1cfdb1b75117b1,Samuel Audet,2020-06-05T01:54:00Z,samuel.audet@gmail.com,Samuel Audet,2020-06-05T01:54:00Z,samuel.audet@gmail.com,18,10,8,"Make `Loader.Detector.getPlatform()` return ""org.bytedeco.javacpp.platform"" when set"
,src/main/java/org/bytedeco/javacpp/presets/javacpp.java,524c8ec9f08c84f4fbb0bd843d5b6a5ee3f7ddd8,Samuel Audet,2020-06-04T02:44:58Z,samuel.audet@gmail.com,Samuel Audet,2020-06-04T02:44:58Z,samuel.audet@gmail.com,3,2,1, * Bundle also the `vcruntime140_1.dll` and `msvcp140_1.dll` redist files from Visual Studio
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,13aa059017861adaaf2a8f22ca6fdc38ffd3e63f,Krzysztof Gonciarz,2020-06-03T11:10:27Z,krzysztof.gonciarz@gmail.com,GitHub,2020-06-03T11:10:27Z,noreply@github.com,73,44,29," * Fix `Builder` for different ""java.home"" path returned by latest JDKs from Oracle (pull #400)"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,a970348e497fd363f4b14d32aa21ffc811dde472,Samuel Audet,2020-05-25T01:24:24Z,samuel.audet@gmail.com,Samuel Audet,2020-05-25T01:24:24Z,samuel.audet@gmail.com,192,133,59, * Refactor `Builder` a little to work around issues with Gradle
,src/main/java/org/bytedeco/javacpp/tools/CommandExecutor.java,a970348e497fd363f4b14d32aa21ffc811dde472,Samuel Audet,2020-05-25T01:24:24Z,samuel.audet@gmail.com,Samuel Audet,2020-05-25T01:24:24Z,samuel.audet@gmail.com,192,133,59, * Refactor `Builder` a little to work around issues with Gradle
,src/main/java/org/bytedeco/javacpp/indexer/HyperslabIndex.java,9762f144f338c8e9b7584fb75c9728a078c6e916,Matteo Di Giovinazzo,2020-05-19T12:37:46Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-19T12:37:46Z,noreply@github.com,127,83,44,Add sizes to Index and update in HyperslabIndex to use in Indexer (pull #395)
,src/main/java/org/bytedeco/javacpp/indexer/Index.java,9762f144f338c8e9b7584fb75c9728a078c6e916,Matteo Di Giovinazzo,2020-05-19T12:37:46Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-19T12:37:46Z,noreply@github.com,127,83,44,Add sizes to Index and update in HyperslabIndex to use in Indexer (pull #395)
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,9762f144f338c8e9b7584fb75c9728a078c6e916,Matteo Di Giovinazzo,2020-05-19T12:37:46Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-19T12:37:46Z,noreply@github.com,127,83,44,Add sizes to Index and update in HyperslabIndex to use in Indexer (pull #395)
,src/main/java/org/bytedeco/javacpp/indexer/OneIndex.java,9762f144f338c8e9b7584fb75c9728a078c6e916,Matteo Di Giovinazzo,2020-05-19T12:37:46Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-19T12:37:46Z,noreply@github.com,127,83,44,Add sizes to Index and update in HyperslabIndex to use in Indexer (pull #395)
,src/main/java/org/bytedeco/javacpp/indexer/StrideIndex.java,9762f144f338c8e9b7584fb75c9728a078c6e916,Matteo Di Giovinazzo,2020-05-19T12:37:46Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-19T12:37:46Z,noreply@github.com,127,83,44,Add sizes to Index and update in HyperslabIndex to use in Indexer (pull #395)
,src/main/java/org/bytedeco/javacpp/indexer/DoubleRawIndexer.java,d78b84da0b9e8a854413f1b396f89a093798e906,Matteo Di Giovinazzo,2020-05-15T01:55:45Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-15T01:55:45Z,noreply@github.com,144,124,20,Fix indexer regression causing StackOverflowException (pull #396)
,src/main/java/org/bytedeco/javacpp/indexer/UByteRawIndexer.java,d78b84da0b9e8a854413f1b396f89a093798e906,Matteo Di Giovinazzo,2020-05-15T01:55:45Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-15T01:55:45Z,noreply@github.com,144,124,20,Fix indexer regression causing StackOverflowException (pull #396)
,src/main/java/org/bytedeco/javacpp/indexer/UIntRawIndexer.java,d78b84da0b9e8a854413f1b396f89a093798e906,Matteo Di Giovinazzo,2020-05-15T01:55:45Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-15T01:55:45Z,noreply@github.com,144,124,20,Fix indexer regression causing StackOverflowException (pull #396)
,src/main/java/org/bytedeco/javacpp/indexer/UShortRawIndexer.java,d78b84da0b9e8a854413f1b396f89a093798e906,Matteo Di Giovinazzo,2020-05-15T01:55:45Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-15T01:55:45Z,noreply@github.com,144,124,20,Fix indexer regression causing StackOverflowException (pull #396)
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,d78b84da0b9e8a854413f1b396f89a093798e906,Matteo Di Giovinazzo,2020-05-15T01:55:45Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-15T01:55:45Z,noreply@github.com,144,124,20,Fix indexer regression causing StackOverflowException (pull #396)
,src/main/java/org/bytedeco/javacpp/Loader.java,d7c1b0e228933def3a9dcc823a153540d62531eb,Samuel Audet,2020-05-11T00:14:11Z,samuel.audet@gmail.com,Samuel Audet,2020-05-11T00:14:11Z,samuel.audet@gmail.com,4,3,1, * Log as warnings `SecurityException` thrown on `Loader.getCacheDir()` instead of swallowing them
,src/main/java/org/bytedeco/javacpp/presets/javacpp.java,ce60746456ed7b639b05e70850cbd3878e67181c,Samuel Audet,2020-05-10T02:56:43Z,samuel.audet@gmail.com,Samuel Audet,2020-05-10T02:56:43Z,samuel.audet@gmail.com,2,1,1,Fix build with Visual Studio 2019
,src/main/java/org/bytedeco/javacpp/Pointer.java,6aee52e4573dd31f1bff27a5b029adc072a27ca2,Samuel Audet,2020-05-05T03:22:37Z,samuel.audet@gmail.com,Samuel Audet,2020-05-05T03:22:37Z,samuel.audet@gmail.com,3,2,1," * Fix memory leak that occurs with ""org.bytedeco.javacpp.nopointergc"" (issue bytedeco/javacpp-presets#878)"
,src/main/java/org/bytedeco/javacpp/Loader.java,6a854c7c0112ce50857fce259f7dc4c5c17da637,Samuel Audet,2020-05-04T06:13:03Z,samuel.audet@gmail.com,Samuel Audet,2020-05-04T06:13:03Z,samuel.audet@gmail.com,37,29,8, * Take into account `platform.library.path` when extracting libraries of executables on `Loader.load()` (issue bytedeco/javacv#1410)
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16ArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16BufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16Indexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16RawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/BooleanArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/BooleanBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/BooleanIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/BooleanRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ByteRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/CharArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/CharBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/CharRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/FloatArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/FloatBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/FloatRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/HalfArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/HalfBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/HalfIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/HalfRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/HyperslabIndex.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/Index.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/IntArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/IntBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/IntRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/LongArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/LongBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/LongRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/OneIndex.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ShortArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ShortBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ShortRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/StrideIndex.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UByteArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UByteBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UByteRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UIntArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UIntBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UIntIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UIntRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ULongArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ULongBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ULongIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/ULongRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UShortArrayIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UShortBufferIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/indexer/UShortRawIndexer.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/test/java/org/bytedeco/javacpp/indexer/HyperslabIndexTest.java,f9e19e0b675604d38ee34042da72f4baff25cae8,Matteo Di Giovinazzo,2020-05-02T23:43:36Z,482618+matteodg@users.noreply.github.com,GitHub,2020-05-02T23:43:36Z,noreply@github.com,2197,1699,498," * Add `HyperslabIndex` class with `offsets`, `strides`, `counts`, and `blocks` parameters (pull #392)"
,src/main/java/org/bytedeco/javacpp/Loader.java,7e7f33d2f09e4ee06d1a97f700433e130953b591,Samuel Audet,2020-04-28T03:30:09Z,samuel.audet@gmail.com,Samuel Audet,2020-04-28T03:30:09Z,samuel.audet@gmail.com,4,3,1,* Take into account `platform.library.path` when extracting executables on `Loader.load()` (issue bytedeco/javacv#1410)
,src/main/java/org/bytedeco/javacpp/Loader.java,8663b9f3a06e03f6e848d5bdd71f482a30cfe998,Samuel Audet,2020-04-21T08:49:46Z,samuel.audet@gmail.com,Samuel Audet,2020-04-21T08:49:46Z,samuel.audet@gmail.com,65,34,31, * Move init code for `Loader.getPlatform()` to `Detector` to avoid warning messages (issue #393)
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16ArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16BufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16Indexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16RawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/BooleanArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/BooleanBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/BooleanIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/BooleanRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ByteRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/CharArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/CharBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/CharRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/DoubleArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/DoubleBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/DoubleRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/FloatArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/FloatBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/FloatRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/HalfArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/HalfBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/HalfIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/HalfRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/IntArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/IntBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/IntRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/LongArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/LongBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/LongRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ShortArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ShortBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ShortRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UByteArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UByteBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UByteRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UIntArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UIntBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UIntIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UIntRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ULongArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ULongBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ULongIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/ULongRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UShortArrayIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UShortBufferIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/UShortRawIndexer.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,01b234a98c0b67f482e43200c856327ea5ea639b,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,Samuel Audet,2020-04-18T14:20:29Z,samuel.audet@gmail.com,1746,949,797, * Add `Indexer.Index` nested class to allow overriding how the index is calculated (issue #391)
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,0d39184d680ff18f24a7288fb97fc4bbeaa4dad3,Matteo Di Giovinazzo,2020-04-14T01:07:35Z,482618+matteodg@users.noreply.github.com,GitHub,2020-04-14T01:07:35Z,noreply@github.com,49,39,10," * Deprecate but also fix `Indexer.rows()`, `cols()`, `width()`, `height()`, and `channels()` (pull #390)"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,0d39184d680ff18f24a7288fb97fc4bbeaa4dad3,Matteo Di Giovinazzo,2020-04-14T01:07:35Z,482618+matteodg@users.noreply.github.com,GitHub,2020-04-14T01:07:35Z,noreply@github.com,49,39,10," * Deprecate but also fix `Indexer.rows()`, `cols()`, `width()`, `height()`, and `channels()` (pull #390)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,9747f39478d3b6f17bfc821237f2213d894b28da,Samuel Audet,2020-04-05T07:14:03Z,samuel.audet@gmail.com,Samuel Audet,2020-04-05T07:14:03Z,samuel.audet@gmail.com,8,5,3, * Fix `Parser` producing invalid wrappers for basic containers like `std::set<std::pair<...> >`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,a2fcb16e4d4d18463aef2a7c60e94495f29f33b2,Samuel Audet,2020-03-31T02:31:03Z,samuel.audet@gmail.com,Samuel Audet,2020-03-31T02:31:03Z,samuel.audet@gmail.com,27,26,1, * Add `Generator` support for `enum` classes with `boolean` values (issue #388)
,src/test/java/org/bytedeco/javacpp/EnumTest.java,a2fcb16e4d4d18463aef2a7c60e94495f29f33b2,Samuel Audet,2020-03-31T02:31:03Z,samuel.audet@gmail.com,Samuel Audet,2020-03-31T02:31:03Z,samuel.audet@gmail.com,27,26,1, * Add `Generator` support for `enum` classes with `boolean` values (issue #388)
,src/test/resources/org/bytedeco/javacpp/EnumTest.h,a2fcb16e4d4d18463aef2a7c60e94495f29f33b2,Samuel Audet,2020-03-31T02:31:03Z,samuel.audet@gmail.com,Samuel Audet,2020-03-31T02:31:03Z,samuel.audet@gmail.com,27,26,1, * Add `Generator` support for `enum` classes with `boolean` values (issue #388)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,01c727843883bf65c784345d94a390864335bdd8,Samuel Audet,2020-03-30T08:22:04Z,samuel.audet@gmail.com,Samuel Audet,2020-03-30T08:22:04Z,samuel.audet@gmail.com,7,6,1," * Fix `Parser` outputting invalid Java code for `enum` of `boolean`, `byte`, and `short` types (issue #388)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,40560d7a3ddae99a805268ffb39e5e00b1a17f5c,Samuel Audet,2020-03-29T08:52:04Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T08:52:04Z,samuel.audet@gmail.com,4,4,0, * Pick up in `Generator` the `@Namespace` annotation from paired method too for global getters and setters (issue #387)
,src/it/osgi/src/main/java/org/bytedeco/javacpp/test/osgi/JavaCPPOsgiTest.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/BoolPointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/BooleanPointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/BytePointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/CharPointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/IntPointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/Loader.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/LongPointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/Pointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/annotation/package-info.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/indexer/package-info.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/package-info.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/presets/javacpp.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/tools/package-info.java,abe3cf003b8edfca0802e9869028cf5065c02874,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,Samuel Audet,2020-03-29T07:46:52Z,samuel.audet@gmail.com,1975,1917,58, * Add presets for `jnijavacpp` and `javacpp-platform` artifact to fix issues at load time (issue bytedeco/javacv#1305)
,src/main/java/org/bytedeco/javacpp/Loader.java,184acc335a79dfaa98ddcc6bce6f81f0e8675aeb,Frank Liu,2020-03-26T10:14:28Z,frankfliu2000@gmail.com,GitHub,2020-03-26T10:14:28Z,noreply@github.com,6,4,2, * Prevent potential `NullPointerException` in `Loader.checkVersion()` (pull #385)
,src/main/java/org/bytedeco/javacpp/BytePointer.java,57124c2106cb41e3d6c423cc2ffb9b52d0de63f5,Frank Liu,2020-03-26T10:13:49Z,frankfliu2000@gmail.com,GitHub,2020-03-26T10:13:49Z,noreply@github.com,73,73,0, * Allow using `Charset` to avoid `UnsupportedEncodingException` from `BytePointer` (pull #384)
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,57124c2106cb41e3d6c423cc2ffb9b52d0de63f5,Frank Liu,2020-03-26T10:13:49Z,frankfliu2000@gmail.com,GitHub,2020-03-26T10:13:49Z,noreply@github.com,73,73,0, * Allow using `Charset` to avoid `UnsupportedEncodingException` from `BytePointer` (pull #384)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,edc2220548fa03113ac11fcd9a42efbf4c8ea7b0,Samuel Audet,2020-03-21T12:23:45Z,samuel.audet@gmail.com,Samuel Audet,2020-03-21T12:23:45Z,samuel.audet@gmail.com,12,6,6,Work around issue with the __cplusplus macro of Visual Studio
,src/main/java/org/bytedeco/javacpp/Pointer.java,c70162b793a61fcca8935433b7f964edbc4847c0,Samuel Audet,2020-03-18T11:55:14Z,samuel.audet@gmail.com,Samuel Audet,2020-03-18T11:55:14Z,samuel.audet@gmail.com,5,5,0," * Add static `Pointer.isNull(Pointer p)` helper method, for convenience"
,src/main/java/org/bytedeco/javacpp/annotation/StdMove.java,af214238cd5c6f58b5e2051f8621f78d98eb1bd9,Samuel Audet,2020-03-16T04:11:40Z,samuel.audet@gmail.com,Samuel Audet,2020-03-16T04:11:40Z,samuel.audet@gmail.com,128,118,10, * Add `MoveAdapter` and corresponding `@StdMove` annotation to support objects that require `std::move` from C++11
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,af214238cd5c6f58b5e2051f8621f78d98eb1bd9,Samuel Audet,2020-03-16T04:11:40Z,samuel.audet@gmail.com,Samuel Audet,2020-03-16T04:11:40Z,samuel.audet@gmail.com,128,118,10, * Add `MoveAdapter` and corresponding `@StdMove` annotation to support objects that require `std::move` from C++11
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,af214238cd5c6f58b5e2051f8621f78d98eb1bd9,Samuel Audet,2020-03-16T04:11:40Z,samuel.audet@gmail.com,Samuel Audet,2020-03-16T04:11:40Z,samuel.audet@gmail.com,128,118,10, * Add `MoveAdapter` and corresponding `@StdMove` annotation to support objects that require `std::move` from C++11
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,af214238cd5c6f58b5e2051f8621f78d98eb1bd9,Samuel Audet,2020-03-16T04:11:40Z,samuel.audet@gmail.com,Samuel Audet,2020-03-16T04:11:40Z,samuel.audet@gmail.com,128,118,10, * Add `MoveAdapter` and corresponding `@StdMove` annotation to support objects that require `std::move` from C++11
,src/test/resources/org/bytedeco/javacpp/AdapterTest.h,af214238cd5c6f58b5e2051f8621f78d98eb1bd9,Samuel Audet,2020-03-16T04:11:40Z,samuel.audet@gmail.com,Samuel Audet,2020-03-16T04:11:40Z,samuel.audet@gmail.com,128,118,10, * Add `MoveAdapter` and corresponding `@StdMove` annotation to support objects that require `std::move` from C++11
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,881ce8e7629488dbb1a9ee4433c13a5b76c231f1,Samuel Audet,2020-03-12T01:13:11Z,samuel.audet@gmail.com,Samuel Audet,2020-03-12T01:13:11Z,samuel.audet@gmail.com,12,7,5, * Always use `File.pathSeparator` when passing multiple paths via the `BUILD_PATH` environment variable
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,eee519ae15a381052f6cff73c3d69983bc794ce3,Samuel Audet,2020-02-28T04:08:32Z,samuel.audet@gmail.com,Samuel Audet,2020-02-28T04:08:32Z,samuel.audet@gmail.com,1,0,1, * Fix `Parser` not picking up `Info` for declarations with `decltype()` specifier
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,55e3bdcef7742022844cb3ea0b0a69a6ebb3224a,Samuel Audet,2020-02-25T04:16:50Z,samuel.audet@gmail.com,Samuel Audet,2020-02-25T04:16:50Z,samuel.audet@gmail.com,34,22,12, * Fix `Pointer` losing its owner when mistakenly ignoring deallocators for `const` values returned from adapters
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,55e3bdcef7742022844cb3ea0b0a69a6ebb3224a,Samuel Audet,2020-02-25T04:16:50Z,samuel.audet@gmail.com,Samuel Audet,2020-02-25T04:16:50Z,samuel.audet@gmail.com,34,22,12, * Fix `Pointer` losing its owner when mistakenly ignoring deallocators for `const` values returned from adapters
,src/test/resources/org/bytedeco/javacpp/AdapterTest.h,55e3bdcef7742022844cb3ea0b0a69a6ebb3224a,Samuel Audet,2020-02-25T04:16:50Z,samuel.audet@gmail.com,Samuel Audet,2020-02-25T04:16:50Z,samuel.audet@gmail.com,34,22,12, * Fix `Pointer` losing its owner when mistakenly ignoring deallocators for `const` values returned from adapters
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,e6ea81122f5c6c74722df3361964b294d970cee4,lchdev,2020-02-23T10:58:57Z,32506221+lchdev@users.noreply.github.com,GitHub,2020-02-23T10:58:56Z,noreply@github.com,3,2,1, * Remove unnecessary declared `Exception` from `Indexer.close()` signature (pull #382)
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,5711d537675346698dadbe28e6f328cfceb92a1b,Samuel Audet,2020-02-18T07:46:34Z,samuel.audet@gmail.com,Samuel Audet,2020-02-18T07:46:34Z,samuel.audet@gmail.com,19,11,8," * Make sure `Parser` recognizes base classes of `struct` as `public` by default
 * Fix `Parser` error on initializer lists containing C++11 style `{ ... }` for template instances
 * Change the default mapping of `jboolean` to `BooleanPointer` instead of `BoolPointer`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,5711d537675346698dadbe28e6f328cfceb92a1b,Samuel Audet,2020-02-18T07:46:34Z,samuel.audet@gmail.com,Samuel Audet,2020-02-18T07:46:34Z,samuel.audet@gmail.com,19,11,8," * Make sure `Parser` recognizes base classes of `struct` as `public` by default
 * Fix `Parser` error on initializer lists containing C++11 style `{ ... }` for template instances
 * Change the default mapping of `jboolean` to `BooleanPointer` instead of `BoolPointer`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,ccce6b38d0b6d52b8b347b3c65ed1df94d7440da,Samuel Audet,2020-02-15T15:30:20Z,samuel.audet@gmail.com,Samuel Audet,2020-02-15T15:30:20Z,samuel.audet@gmail.com,12,9,3," * Fix `Parser` error on function declarations with `...` varargs as single parameter
 * Make `Parser` skip over `&&`-qualified functions automatically since they cannot be supported"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,0521e94b18f2acdf3c3179037ecb2e038bc51a9d,Samuel Audet,2020-02-12T03:32:04Z,samuel.audet@gmail.com,Samuel Audet,2020-02-12T03:32:04Z,samuel.audet@gmail.com,3,2,1, * Fix `Parser` annotating pointer cast `operator` methods with incorrect `@Cast` (issue #379)
,src/main/java/org/bytedeco/javacpp/tools/Context.java,3583ded5cf4a646c1ea506aa7e975850db3da0e9,Samuel Audet,2020-02-03T21:52:59Z,samuel.audet@gmail.com,Samuel Audet,2020-02-03T21:52:59Z,samuel.audet@gmail.com,28,24,4," * Allow `Parser` to inherit constructors from template classes with `using`
 * Make `Parser` honor `Info.skip` for anonymous `struct` or `union` as well"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,3583ded5cf4a646c1ea506aa7e975850db3da0e9,Samuel Audet,2020-02-03T21:52:59Z,samuel.audet@gmail.com,Samuel Audet,2020-02-03T21:52:59Z,samuel.audet@gmail.com,28,24,4," * Allow `Parser` to inherit constructors from template classes with `using`
 * Make `Parser` honor `Info.skip` for anonymous `struct` or `union` as well"
,src/main/java/org/bytedeco/javacpp/BooleanPointer.java,2ab753794eacb3ce97a6d3fa5f426098e1a9d8d4,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,27,26,1, * Optimize `Pointer.sizeof()` method of subclasses for primitive types
,src/main/java/org/bytedeco/javacpp/BytePointer.java,2ab753794eacb3ce97a6d3fa5f426098e1a9d8d4,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,27,26,1, * Optimize `Pointer.sizeof()` method of subclasses for primitive types
,src/main/java/org/bytedeco/javacpp/CharPointer.java,2ab753794eacb3ce97a6d3fa5f426098e1a9d8d4,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,27,26,1, * Optimize `Pointer.sizeof()` method of subclasses for primitive types
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,2ab753794eacb3ce97a6d3fa5f426098e1a9d8d4,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,27,26,1, * Optimize `Pointer.sizeof()` method of subclasses for primitive types
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,2ab753794eacb3ce97a6d3fa5f426098e1a9d8d4,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,27,26,1, * Optimize `Pointer.sizeof()` method of subclasses for primitive types
,src/main/java/org/bytedeco/javacpp/IntPointer.java,2ab753794eacb3ce97a6d3fa5f426098e1a9d8d4,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,27,26,1, * Optimize `Pointer.sizeof()` method of subclasses for primitive types
,src/main/java/org/bytedeco/javacpp/LongPointer.java,2ab753794eacb3ce97a6d3fa5f426098e1a9d8d4,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,27,26,1, * Optimize `Pointer.sizeof()` method of subclasses for primitive types
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,2ab753794eacb3ce97a6d3fa5f426098e1a9d8d4,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,Samuel Audet,2020-02-03T10:26:39Z,samuel.audet@gmail.com,27,26,1, * Optimize `Pointer.sizeof()` method of subclasses for primitive types
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,538845233d908af37dd0154f9dc4330ab57d9a5b,Samuel Audet,2020-01-19T13:21:03Z,samuel.audet@gmail.com,Samuel Audet,2020-01-19T13:21:03Z,samuel.audet@gmail.com,48,27,21," * Let users override `Info.enumerate` on a per-`enum` basis and allow attributes after `enum class`
 * Fix `Parser` not considering identifiers as type names when placed directly after `friend` or in `template<>`
 * Check for defined `NO_WINDOWS_H` macro in `Generator` to skip `#include <windows.h>`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,538845233d908af37dd0154f9dc4330ab57d9a5b,Samuel Audet,2020-01-19T13:21:03Z,samuel.audet@gmail.com,Samuel Audet,2020-01-19T13:21:03Z,samuel.audet@gmail.com,48,27,21," * Let users override `Info.enumerate` on a per-`enum` basis and allow attributes after `enum class`
 * Fix `Parser` not considering identifiers as type names when placed directly after `friend` or in `template<>`
 * Check for defined `NO_WINDOWS_H` macro in `Generator` to skip `#include <windows.h>`"
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,b1f29bec7bed3c30a9ebe63f8fed1f83acace59c,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,816,644,172," * Provide `ULongIndexer`, treating array and buffer data as unsigned 64-bit integers, for convenience (issue #376)

Also consolidate some value getters and setters for `ByteIndexer`"
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,b1f29bec7bed3c30a9ebe63f8fed1f83acace59c,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,816,644,172," * Provide `ULongIndexer`, treating array and buffer data as unsigned 64-bit integers, for convenience (issue #376)

Also consolidate some value getters and setters for `ByteIndexer`"
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,b1f29bec7bed3c30a9ebe63f8fed1f83acace59c,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,816,644,172," * Provide `ULongIndexer`, treating array and buffer data as unsigned 64-bit integers, for convenience (issue #376)

Also consolidate some value getters and setters for `ByteIndexer`"
,src/main/java/org/bytedeco/javacpp/indexer/ByteRawIndexer.java,b1f29bec7bed3c30a9ebe63f8fed1f83acace59c,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,816,644,172," * Provide `ULongIndexer`, treating array and buffer data as unsigned 64-bit integers, for convenience (issue #376)

Also consolidate some value getters and setters for `ByteIndexer`"
,src/main/java/org/bytedeco/javacpp/indexer/ULongArrayIndexer.java,b1f29bec7bed3c30a9ebe63f8fed1f83acace59c,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,816,644,172," * Provide `ULongIndexer`, treating array and buffer data as unsigned 64-bit integers, for convenience (issue #376)

Also consolidate some value getters and setters for `ByteIndexer`"
,src/main/java/org/bytedeco/javacpp/indexer/ULongBufferIndexer.java,b1f29bec7bed3c30a9ebe63f8fed1f83acace59c,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,816,644,172," * Provide `ULongIndexer`, treating array and buffer data as unsigned 64-bit integers, for convenience (issue #376)

Also consolidate some value getters and setters for `ByteIndexer`"
,src/main/java/org/bytedeco/javacpp/indexer/ULongIndexer.java,b1f29bec7bed3c30a9ebe63f8fed1f83acace59c,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,816,644,172," * Provide `ULongIndexer`, treating array and buffer data as unsigned 64-bit integers, for convenience (issue #376)

Also consolidate some value getters and setters for `ByteIndexer`"
,src/main/java/org/bytedeco/javacpp/indexer/ULongRawIndexer.java,b1f29bec7bed3c30a9ebe63f8fed1f83acace59c,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,816,644,172," * Provide `ULongIndexer`, treating array and buffer data as unsigned 64-bit integers, for convenience (issue #376)

Also consolidate some value getters and setters for `ByteIndexer`"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,b1f29bec7bed3c30a9ebe63f8fed1f83acace59c,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,Samuel Audet,2020-01-03T12:41:29Z,samuel.audet@gmail.com,816,644,172," * Provide `ULongIndexer`, treating array and buffer data as unsigned 64-bit integers, for convenience (issue #376)

Also consolidate some value getters and setters for `ByteIndexer`"
,src/main/java/org/bytedeco/javacpp/indexer/UIntArrayIndexer.java,11e20d81c657a0155a43a6a90a482cd83d9d24b2,Samuel Audet,2020-01-02T01:52:38Z,samuel.audet@gmail.com,Samuel Audet,2020-01-02T01:52:38Z,samuel.audet@gmail.com,617,609,8," * Provide `UIntIndexer`, treating array and buffer data as unsigned 32-bit integers, for convenience (issue #376)"
,src/main/java/org/bytedeco/javacpp/indexer/UIntBufferIndexer.java,11e20d81c657a0155a43a6a90a482cd83d9d24b2,Samuel Audet,2020-01-02T01:52:38Z,samuel.audet@gmail.com,Samuel Audet,2020-01-02T01:52:38Z,samuel.audet@gmail.com,617,609,8," * Provide `UIntIndexer`, treating array and buffer data as unsigned 32-bit integers, for convenience (issue #376)"
,src/main/java/org/bytedeco/javacpp/indexer/UIntIndexer.java,11e20d81c657a0155a43a6a90a482cd83d9d24b2,Samuel Audet,2020-01-02T01:52:38Z,samuel.audet@gmail.com,Samuel Audet,2020-01-02T01:52:38Z,samuel.audet@gmail.com,617,609,8," * Provide `UIntIndexer`, treating array and buffer data as unsigned 32-bit integers, for convenience (issue #376)"
,src/main/java/org/bytedeco/javacpp/indexer/UIntRawIndexer.java,11e20d81c657a0155a43a6a90a482cd83d9d24b2,Samuel Audet,2020-01-02T01:52:38Z,samuel.audet@gmail.com,Samuel Audet,2020-01-02T01:52:38Z,samuel.audet@gmail.com,617,609,8," * Provide `UIntIndexer`, treating array and buffer data as unsigned 32-bit integers, for convenience (issue #376)"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,11e20d81c657a0155a43a6a90a482cd83d9d24b2,Samuel Audet,2020-01-02T01:52:38Z,samuel.audet@gmail.com,Samuel Audet,2020-01-02T01:52:38Z,samuel.audet@gmail.com,617,609,8," * Provide `UIntIndexer`, treating array and buffer data as unsigned 32-bit integers, for convenience (issue #376)"
,src/main/java/org/bytedeco/javacpp/tools/Context.java,c5669141929984771c3f49c63aa4044c8aa6b806,Samuel Audet,2019-12-30T01:44:12Z,samuel.audet@gmail.com,Samuel Audet,2019-12-30T01:44:12Z,samuel.audet@gmail.com,19,10,9, * Fix `Parser` not evaluating `using namespace` with respect to the current block (issue #370)
,src/main/java/org/bytedeco/javacpp/Loader.java,40d11bbffabbb58f2c8eec29480712fa35297ca5,HGuillemet,2019-12-24T12:50:47Z,hg@apteryx.fr,Samuel Audet,2019-12-24T12:50:47Z,samuel.audet@gmail.com,10,8,2, * Fix exception in `Loader` when running jlink image with JDK 13+ (pull #375)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,9c82d2109b4ad12f58c66417d1dcaab494b19764,Samuel Audet,2019-12-22T10:48:29Z,samuel.audet@gmail.com,Samuel Audet,2019-12-22T10:48:29Z,samuel.audet@gmail.com,5,3,2," * Fix errors with `@Virtual @Name(""operator ..."")` in `Generator` by using Java names for C++ (issue #362)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,1592fd7b29cf979ca1da7f3b4b852107479d6bcf,Alexey Rochev,2019-12-22T10:46:43Z,equeim@gmail.com,Samuel Audet,2019-12-22T10:46:43Z,samuel.audet@gmail.com,12,11,1," * Use in `Generator` C++11 `override` keyword for `@Virtual` functions (pull #373)

 * Apply in `Parser` missing `const` to parameters of `@Virtual` functions using adapters"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,1592fd7b29cf979ca1da7f3b4b852107479d6bcf,Alexey Rochev,2019-12-22T10:46:43Z,equeim@gmail.com,Samuel Audet,2019-12-22T10:46:43Z,samuel.audet@gmail.com,12,11,1," * Use in `Generator` C++11 `override` keyword for `@Virtual` functions (pull #373)

 * Apply in `Parser` missing `const` to parameters of `@Virtual` functions using adapters"
,src/main/java/org/bytedeco/javacpp/Loader.java,af0e5131174db1fd8c95261c9f6878cde3bab2c4,Samuel Audet,2019-12-17T07:44:21Z,samuel.audet@gmail.com,Samuel Audet,2019-12-17T07:44:21Z,samuel.audet@gmail.com,17,14,3, * Speed up `Loader.load()` by caching results returned from `Loader.findLibrary()` (issue #287)
,src/test/java/org/bytedeco/javacpp/BuilderTest.java,af0e5131174db1fd8c95261c9f6878cde3bab2c4,Samuel Audet,2019-12-17T07:44:21Z,samuel.audet@gmail.com,Samuel Audet,2019-12-17T07:44:21Z,samuel.audet@gmail.com,17,14,3, * Speed up `Loader.load()` by caching results returned from `Loader.findLibrary()` (issue #287)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,696a1b454b9f475e4545d361e220dcf20326cca4,Samuel Audet,2019-12-16T07:26:23Z,samuel.audet@gmail.com,Samuel Audet,2019-12-16T07:26:23Z,samuel.audet@gmail.com,32,24,8," * Pick up `Info` correctly in `Parser` also for anonymous function pointers with `const` parameters
 * Make `Parser` apply `Info.translate` in the case of enumerators as well"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,16109d3d0f81ad2d9968e732608569ab63435dd6,Samuel Audet,2019-12-11T09:34:32Z,samuel.audet@gmail.com,Samuel Audet,2019-12-11T09:34:32Z,samuel.audet@gmail.com,6,6,0, * Fix compiler failures in `Builder` with platform properties containing relative paths
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,32e52a1601fe7be31aaeae0455bc03fe969a3c71,louxiu,2019-12-08T03:42:49Z,lou.0211@gmail.com,Samuel Audet,2019-12-08T03:42:49Z,samuel.audet@gmail.com,6,5,1, * Let `Parser` rename types using `Info.javaNames` in addition to `valueTypes` and `pointerTypes` (pull #367)
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,9a5f5916730a8de348efdf5573c3ddeed0c1980f,Samuel Audet,2019-12-06T14:49:08Z,samuel.audet@gmail.com,Samuel Audet,2019-12-06T14:49:08Z,samuel.audet@gmail.com,131,103,28," * Include in the defaults of `InfoMap` mappings missing for the `std::array` and `jchar` types
 * Fix various `Parser` failures with attributes on constructors, empty macros, enum classes, friend classes, inherited constructors, and keywords in parameter names
 * Add to `Parser` support for C++11 attributes found within `[[` and `]]` brackets"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,9a5f5916730a8de348efdf5573c3ddeed0c1980f,Samuel Audet,2019-12-06T14:49:08Z,samuel.audet@gmail.com,Samuel Audet,2019-12-06T14:49:08Z,samuel.audet@gmail.com,131,103,28," * Include in the defaults of `InfoMap` mappings missing for the `std::array` and `jchar` types
 * Fix various `Parser` failures with attributes on constructors, empty macros, enum classes, friend classes, inherited constructors, and keywords in parameter names
 * Add to `Parser` support for C++11 attributes found within `[[` and `]]` brackets"
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,9a5f5916730a8de348efdf5573c3ddeed0c1980f,Samuel Audet,2019-12-06T14:49:08Z,samuel.audet@gmail.com,Samuel Audet,2019-12-06T14:49:08Z,samuel.audet@gmail.com,131,103,28," * Include in the defaults of `InfoMap` mappings missing for the `std::array` and `jchar` types
 * Fix various `Parser` failures with attributes on constructors, empty macros, enum classes, friend classes, inherited constructors, and keywords in parameter names
 * Add to `Parser` support for C++11 attributes found within `[[` and `]]` brackets"
,src/main/java/org/bytedeco/javacpp/Pointer.java,2141d20a1c7395771fbf51b2d81624d63588b97e,Samuel Audet,2019-11-29T08:18:29Z,samuel.audet@gmail.com,Samuel Audet,2019-11-29T08:18:29Z,samuel.audet@gmail.com,9,5,4,Fix call to `parseBytes()` to be relative to `Runtime.maxMemory()` also for `maxPhysicalBytes`
,src/main/java/org/bytedeco/javacpp/Pointer.java,4f7b55697bf19a534359f7623cbf67303f399d99,Samuel Audet,2019-11-29T03:13:28Z,samuel.audet@gmail.com,Samuel Audet,2019-11-29T03:13:28Z,samuel.audet@gmail.com,12,12,0,Add some Javadoc for the new `%` unit of the `Pointer` values `maxBytes` and `maxPhysicalBytes`
,src/main/java/org/bytedeco/javacpp/Pointer.java,cd09b7170d840dde98003f4bd613b0a4f8e3d32c,Maxime Michel,2019-11-29T02:56:16Z,maxime-michel@users.noreply.github.com,Samuel Audet,2019-11-29T02:56:16Z,samuel.audet@gmail.com,22,19,3, * Consider `Pointer` values `maxBytes` or `maxPhysicalBytes` suffixed with `%` as relative to `Runtime.maxMemory()` (pull #365)
,src/test/java/org/bytedeco/javacpp/PointerTest.java,cd09b7170d840dde98003f4bd613b0a4f8e3d32c,Maxime Michel,2019-11-29T02:56:16Z,maxime-michel@users.noreply.github.com,Samuel Audet,2019-11-29T02:56:16Z,samuel.audet@gmail.com,22,19,3, * Consider `Pointer` values `maxBytes` or `maxPhysicalBytes` suffixed with `%` as relative to `Runtime.maxMemory()` (pull #365)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,68625715a54e2040f997ac4aa7e7d4d1cd1da6ae,Samuel Audet,2019-11-27T09:35:10Z,samuel.audet@gmail.com,Samuel Audet,2019-11-27T09:35:10Z,samuel.audet@gmail.com,5,3,2, * Prevent `Parser` from considering `constexpr operator` declarations as `const` types
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,90279d1ca78bd7c02731607a81baeb9ca574b27e,Samuel Audet,2019-11-20T06:41:04Z,samuel.audet@gmail.com,Samuel Audet,2019-11-20T06:41:04Z,samuel.audet@gmail.com,22,15,7," * Fix on `Loader.load()` the default library name of classes without `@Properties(target=..., global=...)`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,3e5a0dfc5a9334d2c7dfda5f044082364abcdc9b,Samuel Audet,2019-11-15T07:21:37Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T07:21:37Z,samuel.audet@gmail.com,9,6,3, * Prevent `Parser` from outputting `asPointer()` cast methods with multiple inheritance (issue #360)
,src/it/osgi/src/main/c/calc.h,4e522b802378ef946cb953135946ccc02adb8039,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,359,327,32, * Add `CacheMojo` to help extract binaries and resources used by command line tools outside of the JVM
,src/it/osgi/src/main/java/org/bytedeco/javacpp/test/osgi/Calc.java,4e522b802378ef946cb953135946ccc02adb8039,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,359,327,32, * Add `CacheMojo` to help extract binaries and resources used by command line tools outside of the JVM
,src/main/java/org/bytedeco/javacpp/Loader.java,4e522b802378ef946cb953135946ccc02adb8039,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,359,327,32, * Add `CacheMojo` to help extract binaries and resources used by command line tools outside of the JVM
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,4e522b802378ef946cb953135946ccc02adb8039,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,359,327,32, * Add `CacheMojo` to help extract binaries and resources used by command line tools outside of the JVM
,src/main/java/org/bytedeco/javacpp/tools/CacheMojo.java,4e522b802378ef946cb953135946ccc02adb8039,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,359,327,32, * Add `CacheMojo` to help extract binaries and resources used by command line tools outside of the JVM
,src/main/java/org/bytedeco/javacpp/tools/ClassFilter.java,4e522b802378ef946cb953135946ccc02adb8039,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,359,327,32, * Add `CacheMojo` to help extract binaries and resources used by command line tools outside of the JVM
,src/main/java/org/bytedeco/javacpp/tools/ClassScanner.java,4e522b802378ef946cb953135946ccc02adb8039,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,359,327,32, * Add `CacheMojo` to help extract binaries and resources used by command line tools outside of the JVM
,src/main/java/org/bytedeco/javacpp/tools/Logger.java,4e522b802378ef946cb953135946ccc02adb8039,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,359,327,32, * Add `CacheMojo` to help extract binaries and resources used by command line tools outside of the JVM
,src/main/java/org/bytedeco/javacpp/tools/ParseMojo.java,4e522b802378ef946cb953135946ccc02adb8039,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,359,327,32, * Add `CacheMojo` to help extract binaries and resources used by command line tools outside of the JVM
,src/main/java/org/bytedeco/javacpp/tools/package-info.java,4e522b802378ef946cb953135946ccc02adb8039,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,Samuel Audet,2019-11-15T04:06:57Z,samuel.audet@gmail.com,359,327,32, * Add `CacheMojo` to help extract binaries and resources used by command line tools outside of the JVM
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,9239a178822dd939df3fe126f044bf8c29b3700a,Samuel Audet,2019-10-30T06:33:55Z,samuel.audet@gmail.com,Samuel Audet,2019-10-30T06:33:55Z,samuel.audet@gmail.com,202,201,1," * Provide `ByteIndexer` with value getters and setters for unsigned `byte` or `short`, `half`, `bfloat16`, and `boolean` types as well"
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,9239a178822dd939df3fe126f044bf8c29b3700a,Samuel Audet,2019-10-30T06:33:55Z,samuel.audet@gmail.com,Samuel Audet,2019-10-30T06:33:55Z,samuel.audet@gmail.com,202,201,1," * Provide `ByteIndexer` with value getters and setters for unsigned `byte` or `short`, `half`, `bfloat16`, and `boolean` types as well"
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,9239a178822dd939df3fe126f044bf8c29b3700a,Samuel Audet,2019-10-30T06:33:55Z,samuel.audet@gmail.com,Samuel Audet,2019-10-30T06:33:55Z,samuel.audet@gmail.com,202,201,1," * Provide `ByteIndexer` with value getters and setters for unsigned `byte` or `short`, `half`, `bfloat16`, and `boolean` types as well"
,src/main/java/org/bytedeco/javacpp/indexer/ByteRawIndexer.java,9239a178822dd939df3fe126f044bf8c29b3700a,Samuel Audet,2019-10-30T06:33:55Z,samuel.audet@gmail.com,Samuel Audet,2019-10-30T06:33:55Z,samuel.audet@gmail.com,202,201,1," * Provide `ByteIndexer` with value getters and setters for unsigned `byte` or `short`, `half`, `bfloat16`, and `boolean` types as well"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,9239a178822dd939df3fe126f044bf8c29b3700a,Samuel Audet,2019-10-30T06:33:55Z,samuel.audet@gmail.com,Samuel Audet,2019-10-30T06:33:55Z,samuel.audet@gmail.com,202,201,1," * Provide `ByteIndexer` with value getters and setters for unsigned `byte` or `short`, `half`, `bfloat16`, and `boolean` types as well"
,src/main/java/org/bytedeco/javacpp/PointerScope.java,8cc4144336792b9d9040d5e4eee236ca5688b6a2,Samuel Audet,2019-10-29T12:24:08Z,samuel.audet@gmail.com,Samuel Audet,2019-10-29T12:24:08Z,samuel.audet@gmail.com,31,27,4, * Introduce `PointerScope.extend()` to prevent deallocation on the next call to `close()`
,src/test/java/org/bytedeco/javacpp/PointerTest.java,8cc4144336792b9d9040d5e4eee236ca5688b6a2,Samuel Audet,2019-10-29T12:24:08Z,samuel.audet@gmail.com,Samuel Audet,2019-10-29T12:24:08Z,samuel.audet@gmail.com,31,27,4, * Introduce `PointerScope.extend()` to prevent deallocation on the next call to `close()`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,663aa55d4d69e32fbc0eda65fffb9501fb02d74f,GeekOffTheStreet,2019-10-24T04:27:42Z,joshuadavidson@gmail.com,Samuel Audet,2019-10-24T04:27:42Z,samuel.audet@gmail.com,3,2,1, * Make `Generator` avoid ambiguous conversion errors from `UniquePtrAdapter` to `std::unique_ptr` (pull #353)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,f901aa9025dc63f6e595c43479f98226c138bfb7,Samuel Audet,2019-10-23T06:58:03Z,samuel.audet@gmail.com,Samuel Audet,2019-10-23T06:58:03Z,samuel.audet@gmail.com,3,2,1, * Fix `Parser` using fully qualified names for `@Name` annotations of nested classes (issue #352)
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,e4b3812887310f4e0a0cde0ee7fd94fadde08a79,Samuel Audet,2019-10-10T05:25:39Z,samuel.audet@gmail.com,Samuel Audet,2019-10-10T05:25:39Z,samuel.audet@gmail.com,11,9,2, * Add `Parser` support for macro expansion of `__VA_ARGS__`
,src/main/java/org/bytedeco/javacpp/tools/ClassScanner.java,bdd18ef30b2a7a0b3fb0ac979b4a2c3c931214d5,Samuel Audet,2019-10-06T14:17:52Z,samuel.audet@gmail.com,Samuel Audet,2019-10-06T14:17:52Z,samuel.audet@gmail.com,6,3,3, * Fix `Builder` not processing all classes when given `.**` as input (issue bytedeco/javacv#1311)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,606ac566a6837bd971318834e88be343e8bd080f,Samuel Audet,2019-10-05T10:37:20Z,samuel.audet@gmail.com,Samuel Audet,2019-10-05T10:37:20Z,samuel.audet@gmail.com,32,16,16,Fix IndexerTest and PointerTest on 32-bit platforms (issue #347)
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,606ac566a6837bd971318834e88be343e8bd080f,Samuel Audet,2019-10-05T10:37:20Z,samuel.audet@gmail.com,Samuel Audet,2019-10-05T10:37:20Z,samuel.audet@gmail.com,32,16,16,Fix IndexerTest and PointerTest on 32-bit platforms (issue #347)
,src/test/java/org/bytedeco/javacpp/PointerTest.java,606ac566a6837bd971318834e88be343e8bd080f,Samuel Audet,2019-10-05T10:37:20Z,samuel.audet@gmail.com,Samuel Audet,2019-10-05T10:37:20Z,samuel.audet@gmail.com,32,16,16,Fix IndexerTest and PointerTest on 32-bit platforms (issue #347)
,src/main/java/org/bytedeco/javacpp/Pointer.java,f75ae1847e766e31cd5f14bc89db553297243eef,Samuel Audet,2019-10-04T08:04:10Z,samuel.audet@gmail.com,Samuel Audet,2019-10-04T08:04:10Z,samuel.audet@gmail.com,226,163,63, * Introduce reference counting in `Pointer` and retrofit `PointerScope` to use it
,src/main/java/org/bytedeco/javacpp/PointerScope.java,f75ae1847e766e31cd5f14bc89db553297243eef,Samuel Audet,2019-10-04T08:04:10Z,samuel.audet@gmail.com,Samuel Audet,2019-10-04T08:04:10Z,samuel.audet@gmail.com,226,163,63, * Introduce reference counting in `Pointer` and retrofit `PointerScope` to use it
,src/test/java/org/bytedeco/javacpp/PointerTest.java,f75ae1847e766e31cd5f14bc89db553297243eef,Samuel Audet,2019-10-04T08:04:10Z,samuel.audet@gmail.com,Samuel Audet,2019-10-04T08:04:10Z,samuel.audet@gmail.com,226,163,63, * Introduce reference counting in `Pointer` and retrofit `PointerScope` to use it
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,ff0af72140b8cb655f4776d320bfedccbde78460,Samuel Audet,2019-09-25T12:30:23Z,samuel.audet@gmail.com,Samuel Audet,2019-10-02T05:59:10Z,samuel.audet@gmail.com,21,15,6, * Fix `Parser` incorrectly inheriting default constructors multiple times with `using`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,1dc77de3b6ba54a1b225786e7aec28526501c0ae,Samuel Audet,2019-09-23T00:49:11Z,samuel.audet@gmail.com,Samuel Audet,2019-09-23T00:49:11Z,samuel.audet@gmail.com,10,6,4, * Allow in `Parser` fully qualified names as `Info.valueTypes` for enumerators as well
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,8194e47dcbbe84cfd4dc661ea551ccb469d2ac37,Michael McKenzie,2019-09-20T01:47:14Z,22035798+mkmckenz@users.noreply.github.com,Samuel Audet,2019-09-20T01:47:14Z,samuel.audet@gmail.com,15,14,1, * Perform template substitution in `Parser` also for default argument values (pull #343)
,src/main/java/org/bytedeco/javacpp/Pointer.java,dadb92fde9cb197a7f3f2e46730763e7f52722d1,Samuel Audet,2019-09-18T05:25:01Z,samuel.audet@gmail.com,Samuel Audet,2019-09-18T05:25:01Z,samuel.audet@gmail.com,79,69,10, * Introduce `PointerScope.forClasses` to limit the `Pointer` classes that can be attached to a given instance
,src/main/java/org/bytedeco/javacpp/PointerScope.java,dadb92fde9cb197a7f3f2e46730763e7f52722d1,Samuel Audet,2019-09-18T05:25:01Z,samuel.audet@gmail.com,Samuel Audet,2019-09-18T05:25:01Z,samuel.audet@gmail.com,79,69,10, * Introduce `PointerScope.forClasses` to limit the `Pointer` classes that can be attached to a given instance
,src/test/java/org/bytedeco/javacpp/PointerTest.java,dadb92fde9cb197a7f3f2e46730763e7f52722d1,Samuel Audet,2019-09-18T05:25:01Z,samuel.audet@gmail.com,Samuel Audet,2019-09-18T05:25:01Z,samuel.audet@gmail.com,79,69,10, * Introduce `PointerScope.forClasses` to limit the `Pointer` classes that can be attached to a given instance
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,946e28bee593aeaa80c0ced516ff6ac766ce6096,Samuel Audet,2019-09-12T06:19:37Z,samuel.audet@gmail.com,Samuel Audet,2019-09-12T06:19:37Z,samuel.audet@gmail.com,40,24,16, * Add support for custom `Allocator` to `VectorAdapter` and custom `Deleter` to `UniquePtrAdapter`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,946e28bee593aeaa80c0ced516ff6ac766ce6096,Samuel Audet,2019-09-12T06:19:37Z,samuel.audet@gmail.com,Samuel Audet,2019-09-12T06:19:37Z,samuel.audet@gmail.com,40,24,16, * Add support for custom `Allocator` to `VectorAdapter` and custom `Deleter` to `UniquePtrAdapter`
,src/it/osgi/src/main/c/calc.h,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/it/osgi/src/main/java/org/bytedeco/javacpp/test/osgi/Calc.java,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/it/osgi/src/main/java/org/bytedeco/javacpp/test/osgi/JavaCPPOsgiTest.java,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/main/java/org/bytedeco/javacpp/LoadEnabled.java,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/main/java/org/bytedeco/javacpp/Loader.java,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/main/java/org/bytedeco/javacpp/annotation/package-info.java,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/main/java/org/bytedeco/javacpp/indexer/package-info.java,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/main/java/org/bytedeco/javacpp/package-info.java,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/main/java/org/bytedeco/javacpp/tools/BuildEnabled.java,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/main/java/org/bytedeco/javacpp/tools/InfoMapper.java,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/main/java/org/bytedeco/javacpp/tools/package-info.java,a86fde7b4a4aff1e24f4bc081d55225c615745f1,Tim Ward,2019-09-06T11:50:35Z,timothyjward@apache.org,Samuel Audet,2019-09-06T11:50:35Z,samuel.audet@gmail.com,402,396,6, * Enable support for OSGi bundles (pull #332)
,src/main/java/org/bytedeco/javacpp/Loader.java,705df9a42d9f8258e1a4e32c7e5c31b4eaa66d00,Samuel Audet,2019-09-05T13:29:21Z,samuel.audet@gmail.com,Samuel Audet,2019-09-05T13:29:21Z,samuel.audet@gmail.com,13,9,4,Release version 1.5.1-1
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,500902386a28cd29ade6c319e8025d6cbf49a248,louxiu,2019-09-05T02:24:09Z,lou.0211@gmail.com,Samuel Audet,2019-09-05T02:24:09Z,samuel.audet@gmail.com,60,37,23, * Use the native thread ID as name on `AttachCurrentThread()` (pull #339)
,src/main/java/org/bytedeco/javacpp/Loader.java,c3946d20146763f484a85b73376fc7e6c05f2fe0,Samuel Audet,2019-08-09T10:11:17Z,samuel.audet@gmail.com,Samuel Audet,2019-08-09T10:11:17Z,samuel.audet@gmail.com,3,2,1," * Make sure we `canRead()`, `canWrite()`, and `canExecute()` what `Loader.getCacheDir()` returns"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,c25b57c51a7fdd7636e6a02dd05f564501ff282b,Samuel Audet,2019-08-05T00:06:13Z,samuel.audet@gmail.com,Samuel Audet,2019-08-05T00:06:13Z,samuel.audet@gmail.com,14,8,6,Add project.version to baseDirectory for maven-assembly-plugin
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,c25b57c51a7fdd7636e6a02dd05f564501ff282b,Samuel Audet,2019-08-05T00:06:13Z,samuel.audet@gmail.com,Samuel Audet,2019-08-05T00:06:13Z,samuel.audet@gmail.com,14,8,6,Add project.version to baseDirectory for maven-assembly-plugin
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,484d007b9a3ece3ed1caa8ea222e108704c5b791,Samuel Audet,2019-07-29T03:50:40Z,samuel.audet@gmail.com,Samuel Audet,2019-07-29T03:50:40Z,samuel.audet@gmail.com,17,16,1, * Prevent `Generator` from copying data unnecessarily when returning Java arrays from adapters (issue #317)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,8bebe93e1a669b07a108964eaa28d2c5f8e4bb84,Samuel Audet,2019-07-23T09:26:50Z,samuel.audet@gmail.com,Samuel Audet,2019-07-23T09:26:50Z,samuel.audet@gmail.com,14,8,6, * Fix `Parser` issues when casting `const` pointers or enumerating anonymous `enum` declarations
,src/main/java/org/bytedeco/javacpp/tools/Context.java,7b7ca8a9ffbe794dce8750e98e13da8d84169262,Samuel Audet,2019-07-23T05:10:59Z,samuel.audet@gmail.com,Samuel Audet,2019-07-23T05:10:59Z,samuel.audet@gmail.com,17,14,3," * Add `Info.objectify` to map global functions without using the `static` modifier, similarly to Scala companion objects"
,src/main/java/org/bytedeco/javacpp/tools/Info.java,7b7ca8a9ffbe794dce8750e98e13da8d84169262,Samuel Audet,2019-07-23T05:10:59Z,samuel.audet@gmail.com,Samuel Audet,2019-07-23T05:10:59Z,samuel.audet@gmail.com,17,14,3," * Add `Info.objectify` to map global functions without using the `static` modifier, similarly to Scala companion objects"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,7b7ca8a9ffbe794dce8750e98e13da8d84169262,Samuel Audet,2019-07-23T05:10:59Z,samuel.audet@gmail.com,Samuel Audet,2019-07-23T05:10:59Z,samuel.audet@gmail.com,17,14,3," * Add `Info.objectify` to map global functions without using the `static` modifier, similarly to Scala companion objects"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,27a7a49185904fdd503cbd035147c3988c8bc4c2,Samuel Audet,2019-07-11T01:39:37Z,samuel.audet@gmail.com,Samuel Audet,2019-07-11T01:39:37Z,samuel.audet@gmail.com,8,5,3, * Allow once more `abstract` subclasses of `FunctionPointer` (issue #318)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,dfdf97100fbab77ffc45a7934047c3d011b0a68b,Samuel Audet,2019-07-05T14:25:04Z,samuel.audet@gmail.com,Samuel Audet,2019-07-05T14:25:04Z,samuel.audet@gmail.com,25,16,9, * Make sure `Generator` ignores deallocators on `const` values returned from adapters (issue #317)
,src/main/java/org/bytedeco/javacpp/Loader.java,a7144ce644857c46f284126dc9dfc04b4d3cdcd1,Samuel Audet,2019-06-18T03:11:41Z,samuel.audet@gmail.com,Samuel Audet,2019-06-18T03:11:41Z,samuel.audet@gmail.com,25,19,6," * Accelerate `Loader.extractResource()` for directories already cached, also preventing failures (issue #197)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,0b026392b340ed35e2276acff23dd5671c44e111,Samuel Audet,2019-06-14T07:08:38Z,samuel.audet@gmail.com,Samuel Audet,2019-06-14T07:08:38Z,samuel.audet@gmail.com,12,8,4," * Avoid `Parser` writing `allocateArray()` when single `int`, `long`, `float`, or `double` constructor already exists (issue bytedeco/javacv#1224)"
,src/main/java/org/bytedeco/javacpp/Pointer.java,95710554b20848343f6873801d36225fb370931f,Samuel Audet,2019-06-12T12:43:01Z,samuel.audet@gmail.com,Samuel Audet,2019-06-12T12:43:01Z,samuel.audet@gmail.com,16,9,7,Clarify what values of 0 or less mean for `Pointer.maxBytes` and `maxPhysicalBytes`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,41f366560853c750e7da0e730fc29e6356bb3a6f,Samuel Audet,2019-06-09T13:52:48Z,samuel.audet@gmail.com,Samuel Audet,2019-06-09T13:52:48Z,samuel.audet@gmail.com,6,5,1,Prevent `NullPointerException` in `Parser` for function pointers declared with `using`
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,2c8c56868f8d0cfcd119c6ac0c19e7738053f8c3,Samuel Audet,2019-06-05T12:57:00Z,samuel.audet@gmail.com,Samuel Audet,2019-06-05T12:57:00Z,samuel.audet@gmail.com,51,32,19," * Expose all platform properties to process executed with `Builder.buildCommand` via environment variables, with names uppercase and all `.` replaced with `_`"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,2c8c56868f8d0cfcd119c6ac0c19e7738053f8c3,Samuel Audet,2019-06-05T12:57:00Z,samuel.audet@gmail.com,Samuel Audet,2019-06-05T12:57:00Z,samuel.audet@gmail.com,51,32,19," * Expose all platform properties to process executed with `Builder.buildCommand` via environment variables, with names uppercase and all `.` replaced with `_`"
,src/main/java/org/bytedeco/javacpp/tools/Context.java,2c291b2e536bc55102a24ee05b0d33d71b8c1dde,Samuel Audet,2019-05-30T11:44:25Z,samuel.audet@gmail.com,Samuel Audet,2019-05-30T11:44:25Z,samuel.audet@gmail.com,142,89,53," * Let `Parser` add `@Name` or `@Namespace` annotations to non-translated enumerators as well
 * Make `Parser` pick up the names of type aliases for function pointers declared with `using`
 * Fix `Parser` failing on lambda expressions found inside member initialization lists of constructors
 * Add special support for `constexpr` variables in `Parser` by disabling their member setters automatically
 * Fix `Parser` not placing `&` and `*` at the right place inside template arguments containing function declarations
 * Support more basic containers in `Parser` by comparing their names in a case-insensitive manner and add annotations missing from index types
 * Fix `Generator` taking the `@By*` annotation of the paired method for the index instead of the value argument of a setter
 * Fix `Parser` sometimes considering global C++ identifiers starting with `::` as if they were local"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,2c291b2e536bc55102a24ee05b0d33d71b8c1dde,Samuel Audet,2019-05-30T11:44:25Z,samuel.audet@gmail.com,Samuel Audet,2019-05-30T11:44:25Z,samuel.audet@gmail.com,142,89,53," * Let `Parser` add `@Name` or `@Namespace` annotations to non-translated enumerators as well
 * Make `Parser` pick up the names of type aliases for function pointers declared with `using`
 * Fix `Parser` failing on lambda expressions found inside member initialization lists of constructors
 * Add special support for `constexpr` variables in `Parser` by disabling their member setters automatically
 * Fix `Parser` not placing `&` and `*` at the right place inside template arguments containing function declarations
 * Support more basic containers in `Parser` by comparing their names in a case-insensitive manner and add annotations missing from index types
 * Fix `Generator` taking the `@By*` annotation of the paired method for the index instead of the value argument of a setter
 * Fix `Parser` sometimes considering global C++ identifiers starting with `::` as if they were local"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,2c291b2e536bc55102a24ee05b0d33d71b8c1dde,Samuel Audet,2019-05-30T11:44:25Z,samuel.audet@gmail.com,Samuel Audet,2019-05-30T11:44:25Z,samuel.audet@gmail.com,142,89,53," * Let `Parser` add `@Name` or `@Namespace` annotations to non-translated enumerators as well
 * Make `Parser` pick up the names of type aliases for function pointers declared with `using`
 * Fix `Parser` failing on lambda expressions found inside member initialization lists of constructors
 * Add special support for `constexpr` variables in `Parser` by disabling their member setters automatically
 * Fix `Parser` not placing `&` and `*` at the right place inside template arguments containing function declarations
 * Support more basic containers in `Parser` by comparing their names in a case-insensitive manner and add annotations missing from index types
 * Fix `Generator` taking the `@By*` annotation of the paired method for the index instead of the value argument of a setter
 * Fix `Parser` sometimes considering global C++ identifiers starting with `::` as if they were local"
,src/main/java/org/bytedeco/javacpp/tools/Type.java,2c291b2e536bc55102a24ee05b0d33d71b8c1dde,Samuel Audet,2019-05-30T11:44:25Z,samuel.audet@gmail.com,Samuel Audet,2019-05-30T11:44:25Z,samuel.audet@gmail.com,142,89,53," * Let `Parser` add `@Name` or `@Namespace` annotations to non-translated enumerators as well
 * Make `Parser` pick up the names of type aliases for function pointers declared with `using`
 * Fix `Parser` failing on lambda expressions found inside member initialization lists of constructors
 * Add special support for `constexpr` variables in `Parser` by disabling their member setters automatically
 * Fix `Parser` not placing `&` and `*` at the right place inside template arguments containing function declarations
 * Support more basic containers in `Parser` by comparing their names in a case-insensitive manner and add annotations missing from index types
 * Fix `Generator` taking the `@By*` annotation of the paired method for the index instead of the value argument of a setter
 * Fix `Parser` sometimes considering global C++ identifiers starting with `::` as if they were local"
,src/main/java/org/bytedeco/javacpp/Pointer.java,5b9216cf0878bb4757733ece8f7da1bfe8550a0e,Alex Black,2019-05-27T08:50:44Z,blacka101@gmail.com,Samuel Audet,2019-05-27T08:50:44Z,samuel.audet@gmail.com,6,4,2, * Change default value for `Pointer.maxPhysicalBytes` to `Pointer.maxBytes + Runtime.maxMemory()` (pull #310)
,src/main/java/org/bytedeco/javacpp/Loader.java,2c8231f790537c639608c12c8d2950e5a13ab7c4,Samuel Audet,2019-05-26T10:19:34Z,samuel.audet@gmail.com,Samuel Audet,2019-05-26T10:19:34Z,samuel.audet@gmail.com,14,11,3,Log warnings in `Loader.checkVersion()` only if `Loader.isLoadLibraries()`
,src/main/java/org/bytedeco/javacpp/Loader.java,07e0533299fb3213c045d5ecb70ff5cf758c4cd8,Samuel Audet,2019-05-26T09:40:57Z,samuel.audet@gmail.com,Samuel Audet,2019-05-26T09:40:57Z,samuel.audet@gmail.com,10,7,3,Add a convenient overloaded `Loader.getVersion()` method with no parameters
,src/main/java/org/bytedeco/javacpp/Loader.java,85670482cdd9741585a5d87db979a7266502dfae,Samuel Audet,2019-05-26T01:32:27Z,samuel.audet@gmail.com,Samuel Audet,2019-05-26T01:32:27Z,samuel.audet@gmail.com,48,48,0, * Add `Loader.getVersion()` and `checkVersion()` to get versions of Maven artifacts and check against JavaCPP
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,108d851acb728b66b6ef755d22ed5bbe93415bd6,Samuel Audet,2019-05-22T07:03:38Z,samuel.audet@gmail.com,Samuel Audet,2019-05-22T07:03:38Z,samuel.audet@gmail.com,20,18,2," * Fix compile errors caused by `Generator` occurring with callback functions returning a value by reference
 * Make `Builder` expand entries from the user class path with `*` as basename to all JAR files in the directory"
,src/main/java/org/bytedeco/javacpp/tools/UserClassLoader.java,108d851acb728b66b6ef755d22ed5bbe93415bd6,Samuel Audet,2019-05-22T07:03:38Z,samuel.audet@gmail.com,Samuel Audet,2019-05-22T07:03:38Z,samuel.audet@gmail.com,20,18,2," * Fix compile errors caused by `Generator` occurring with callback functions returning a value by reference
 * Make `Builder` expand entries from the user class path with `*` as basename to all JAR files in the directory"
,src/main/java/org/bytedeco/javacpp/Loader.java,88205c3ec80d26f8839204a0afc8117cff7a192d,HGuillemet,2019-05-22T02:17:20Z,hg@apteryx.fr,Samuel Audet,2019-05-22T02:17:20Z,samuel.audet@gmail.com,11,7,4, * Prevent `Loader` from creating symbolic links pointing to themselves by comparing with `Path.normalize()` (pull #307)
,src/main/java/org/bytedeco/javacpp/Loader.java,f7d2a61049d7815f2a4328fe61a96758dcbf7fb8,HGuillemet,2019-05-22T02:03:55Z,hg@apteryx.fr,Samuel Audet,2019-05-22T02:03:55Z,samuel.audet@gmail.com,16,16,0," * Fix `Loader.cacheResource()` with the ""jrt"" protocol as used by jlink (pull #305)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,e4e4b9d1263b5c9ea336ee9ce99d8501686dd791,louxiu,2019-05-20T01:03:40Z,lou.0211@gmail.com,Samuel Audet,2019-05-20T01:03:40Z,samuel.audet@gmail.com,5,3,2, * Fix compiler error with `SharedPtrAdapter` and `UniquePtrAdapter` in callback functions (pull #304)
,src/main/java/org/bytedeco/javacpp/Pointer.java,655dae21833119a0edd45e1a16dbaa2e585d6455,Samuel Audet,2019-05-18T11:15:32Z,samuel.audet@gmail.com,Samuel Audet,2019-05-18T11:15:32Z,samuel.audet@gmail.com,2,2,0, * Start `Pointer.DeallocatorThread` with `setContextClassLoader(null)` as required by containers (issue deeplearning4j/deeplearning4j#7737)
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,7a9ac9cfb647e9850a1bcd2aec829751704a7457,Samuel Audet,2019-05-15T12:59:18Z,samuel.audet@gmail.com,Samuel Audet,2019-05-15T12:59:18Z,samuel.audet@gmail.com,34,27,7," * Add `-print` command line option to access platform properties externally, for example, inside build scripts
 * Add to `InfoMap` default pointer and value types for `ssize_t`, `char16_t`, `char32_t`, `std::u16string`, and `std::u32string`"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,7a9ac9cfb647e9850a1bcd2aec829751704a7457,Samuel Audet,2019-05-15T12:59:18Z,samuel.audet@gmail.com,Samuel Audet,2019-05-15T12:59:18Z,samuel.audet@gmail.com,34,27,7," * Add `-print` command line option to access platform properties externally, for example, inside build scripts
 * Add to `InfoMap` default pointer and value types for `ssize_t`, `char16_t`, `char32_t`, `std::u16string`, and `std::u32string`"
,src/main/java/org/bytedeco/javacpp/annotation/Allocator.java,8fa2688b33db1eb9fef91839947969a9687d08a4,Samuel Audet,2019-05-12T14:05:25Z,samuel.audet@gmail.com,Samuel Audet,2019-05-12T14:05:25Z,samuel.audet@gmail.com,282,199,83," * Support multiple instances of `FunctionPointer` subclasses, up to the value in `@Allocator(max=...)` (issue bytedeco/javacpp-presets#683)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,8fa2688b33db1eb9fef91839947969a9687d08a4,Samuel Audet,2019-05-12T14:05:25Z,samuel.audet@gmail.com,Samuel Audet,2019-05-12T14:05:25Z,samuel.audet@gmail.com,282,199,83," * Support multiple instances of `FunctionPointer` subclasses, up to the value in `@Allocator(max=...)` (issue bytedeco/javacpp-presets#683)"
,src/main/java/org/bytedeco/javacpp/tools/MethodInformation.java,8fa2688b33db1eb9fef91839947969a9687d08a4,Samuel Audet,2019-05-12T14:05:25Z,samuel.audet@gmail.com,Samuel Audet,2019-05-12T14:05:25Z,samuel.audet@gmail.com,282,199,83," * Support multiple instances of `FunctionPointer` subclasses, up to the value in `@Allocator(max=...)` (issue bytedeco/javacpp-presets#683)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,8fa2688b33db1eb9fef91839947969a9687d08a4,Samuel Audet,2019-05-12T14:05:25Z,samuel.audet@gmail.com,Samuel Audet,2019-05-12T14:05:25Z,samuel.audet@gmail.com,282,199,83," * Support multiple instances of `FunctionPointer` subclasses, up to the value in `@Allocator(max=...)` (issue bytedeco/javacpp-presets#683)"
,src/test/java/org/bytedeco/javacpp/PointerTest.java,8fa2688b33db1eb9fef91839947969a9687d08a4,Samuel Audet,2019-05-12T14:05:25Z,samuel.audet@gmail.com,Samuel Audet,2019-05-12T14:05:25Z,samuel.audet@gmail.com,282,199,83," * Support multiple instances of `FunctionPointer` subclasses, up to the value in `@Allocator(max=...)` (issue bytedeco/javacpp-presets#683)"
,src/main/java/org/bytedeco/javacpp/Loader.java,1bc3afe034b7f5dd2631accf455838dacfc76003,Samuel Audet,2019-05-05T09:50:56Z,samuel.audet@gmail.com,Samuel Audet,2019-05-05T09:50:56Z,samuel.audet@gmail.com,12,10,2," * Allow suffixing library names with `:` to specify exact relative paths to libraries, ignoring any additional prefix or suffix"
,src/main/java/org/bytedeco/javacpp/Loader.java,34597f5f2ed1fb868d01055bda9e0a4ebb51c11f,Samuel Audet,2019-05-04T13:02:52Z,samuel.audet@gmail.com,Samuel Audet,2019-05-04T13:02:52Z,samuel.audet@gmail.com,3,2,1, * Prevent `Loader.load()` from trying to load library files that do not exist or to create symbolic links to them
,src/main/java/org/bytedeco/javacpp/Loader.java,665daa195084f64ee85a0ac33c03f42f96942646,Samuel Audet,2019-04-24T23:19:57Z,samuel.audet@gmail.com,Samuel Audet,2019-04-24T23:19:57Z,samuel.audet@gmail.com,13,7,6," * Let `Loader.load()` extract libraries suffixed with `##`, but still ignored for copying by `Builder`"
,src/main/java/org/bytedeco/javacpp/Loader.java,2f7c95638ae3291ed0c0ae410856a8f7c71e35c4,Samuel Audet,2019-04-24T11:38:59Z,samuel.audet@gmail.com,Samuel Audet,2019-04-24T11:38:59Z,samuel.audet@gmail.com,15,12,3, * Make sure `Loader.load()` also initializes classes that are passed explicitly
,src/main/java/org/bytedeco/javacpp/Loader.java,18aec223e7d6dc42a8ed99d6fbb98b265766ece7,Samuel Audet,2019-04-23T11:57:19Z,samuel.audet@gmail.com,Samuel Audet,2019-04-23T11:57:19Z,samuel.audet@gmail.com,7,6,1, * Fix `Loader.createLibraryLink()` incorrectly truncating library versions when there is one before and another after the suffix
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,5e7ff2506ee127c6f07ca81cc919cc8bae6b9be2,Samuel Audet,2019-04-18T12:57:48Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:57:48Z,samuel.audet@gmail.com,26,17,9, * Iterate extensions of libraries or executables on `Loader.load()` in reverse to be consistent with properties overriding
,src/main/java/org/bytedeco/javacpp/Loader.java,5e7ff2506ee127c6f07ca81cc919cc8bae6b9be2,Samuel Audet,2019-04-18T12:57:48Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:57:48Z,samuel.audet@gmail.com,26,17,9, * Iterate extensions of libraries or executables on `Loader.load()` in reverse to be consistent with properties overriding
,src/test/java/org/bytedeco/javacpp/BuilderTest.java,5e7ff2506ee127c6f07ca81cc919cc8bae6b9be2,Samuel Audet,2019-04-18T12:57:48Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:57:48Z,samuel.audet@gmail.com,26,17,9, * Iterate extensions of libraries or executables on `Loader.load()` in reverse to be consistent with properties overriding
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16ArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16BufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16Indexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16RawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/BooleanArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/BooleanBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/BooleanIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/BooleanRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/ByteRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/CharArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/CharBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/CharRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/DoubleArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/DoubleBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/DoubleRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/FloatArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/FloatBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/FloatRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/HalfArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/HalfBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/HalfIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/HalfRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/IntArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/IntBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/IntRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/LongArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/LongBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/LongRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/ShortArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/ShortBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/ShortRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/UByteArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/UByteBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/UByteRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/UShortArrayIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/UShortBufferIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/indexer/UShortRawIndexer.java,130afac898275d393391a2711289a1e896524a39,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,Samuel Audet,2019-04-18T12:34:26Z,samuel.audet@gmail.com,144,72,72,Change trailing `long[] sizes` parameters of indexers to `long... sizes` for convenience
,src/main/java/org/bytedeco/javacpp/Loader.java,67c528cf8acb0beadd36b9e24ddb6d9c68167671,Samuel Audet,2019-04-16T09:17:31Z,samuel.audet@gmail.com,Samuel Audet,2019-04-16T09:17:31Z,samuel.audet@gmail.com,29,24,5, * Allow prefixing library names with `:` to have `Loader` consider them as filenames with prefix and suffix already included
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,67c528cf8acb0beadd36b9e24ddb6d9c68167671,Samuel Audet,2019-04-16T09:17:31Z,samuel.audet@gmail.com,Samuel Audet,2019-04-16T09:17:31Z,samuel.audet@gmail.com,29,24,5, * Allow prefixing library names with `:` to have `Loader` consider them as filenames with prefix and suffix already included
,src/main/java/org/bytedeco/javacpp/Loader.java,c50f88649e00ed54e55083adf11b05805bca57b5,Samuel Audet,2019-04-16T06:18:13Z,samuel.audet@gmail.com,Samuel Audet,2019-04-16T06:18:13Z,samuel.audet@gmail.com,74,69,5, * Add `Loader.loadGlobal()` to load symbols globally as often required by Python libraries (issue ContinuumIO/anaconda-issues#6401)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,c50f88649e00ed54e55083adf11b05805bca57b5,Samuel Audet,2019-04-16T06:18:13Z,samuel.audet@gmail.com,Samuel Audet,2019-04-16T06:18:13Z,samuel.audet@gmail.com,74,69,5, * Add `Loader.loadGlobal()` to load symbols globally as often required by Python libraries (issue ContinuumIO/anaconda-issues#6401)
,src/test/java/org/bytedeco/javacpp/BuilderTest.java,c50f88649e00ed54e55083adf11b05805bca57b5,Samuel Audet,2019-04-16T06:18:13Z,samuel.audet@gmail.com,Samuel Audet,2019-04-16T06:18:13Z,samuel.audet@gmail.com,74,69,5, * Add `Loader.loadGlobal()` to load symbols globally as often required by Python libraries (issue ContinuumIO/anaconda-issues#6401)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,29183e82eb97326715e7a0555a57c320260722f4,Samuel Audet,2019-04-07T14:03:35Z,samuel.audet@gmail.com,Samuel Audet,2019-04-07T14:03:35Z,samuel.audet@gmail.com,7,4,3, * Have `Parser` output `setter` as dummy parameter name for setter methods to clarify usage
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16ArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16BufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16Indexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16RawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/BooleanArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/BooleanBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/BooleanIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/BooleanRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/ByteRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/CharArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/CharBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/CharRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/DoubleArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/DoubleBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/DoubleRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/FloatArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/FloatBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/FloatRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/HalfArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/HalfBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/HalfIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/HalfRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/IntArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/IntBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/IntRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/LongArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/LongBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/LongRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/ShortArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/ShortBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/ShortRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/UByteArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/UByteBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/UByteRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/UShortArrayIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/UShortBufferIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/UShortRawIndexer.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/indexer/UnsafeRaw.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,6db23a20d149599b9b2f07b47971a6c978319b8f,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T08:46:36Z,samuel.audet@gmail.com,491,426,65, * Add `Indexer.strides(long... sizes)` and use as default strides when not specified by the user
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,b37febbd2f6980fb7144d02d813b01ff5a12d8fe,Samuel Audet,2019-04-02T04:24:55Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T04:24:55Z,samuel.audet@gmail.com,87,87,0," * Add `long...` constructors, getters, and setters to `CLongPointer` and `SizeTPointer` for convenience"
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,b37febbd2f6980fb7144d02d813b01ff5a12d8fe,Samuel Audet,2019-04-02T04:24:55Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T04:24:55Z,samuel.audet@gmail.com,87,87,0," * Add `long...` constructors, getters, and setters to `CLongPointer` and `SizeTPointer` for convenience"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,59839f50773b5c496e6c3f8f2d057bed4326008d,Samuel Audet,2019-04-02T03:51:48Z,samuel.audet@gmail.com,Samuel Audet,2019-04-02T03:51:48Z,samuel.audet@gmail.com,13,11,2, * Fix some `Generator` issues with `FunctionPointer` passed or returned `@ByPtrPtr`
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,8bc0296890dd058dec743f6baa7f355a77818da5,Samuel Audet,2019-03-27T09:46:58Z,samuel.audet@gmail.com,Samuel Audet,2019-03-27T09:46:58Z,samuel.audet@gmail.com,4,2,2,Fix Builder failing to overwrite files on copy
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,d966519862500e64b90b4bd30d56e3d7aeb39ce2,Samuel Audet,2019-03-23T13:29:54Z,samuel.audet@gmail.com,Samuel Audet,2019-03-23T13:29:54Z,samuel.audet@gmail.com,250,214,36, * Add `platform.executable` and `platform.executablepath` properties to bundle executables and extract them with `Loader.load()`
,src/main/java/org/bytedeco/javacpp/Loader.java,d966519862500e64b90b4bd30d56e3d7aeb39ce2,Samuel Audet,2019-03-23T13:29:54Z,samuel.audet@gmail.com,Samuel Audet,2019-03-23T13:29:54Z,samuel.audet@gmail.com,250,214,36, * Add `platform.executable` and `platform.executablepath` properties to bundle executables and extract them with `Loader.load()`
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,d966519862500e64b90b4bd30d56e3d7aeb39ce2,Samuel Audet,2019-03-23T13:29:54Z,samuel.audet@gmail.com,Samuel Audet,2019-03-23T13:29:54Z,samuel.audet@gmail.com,250,214,36, * Add `platform.executable` and `platform.executablepath` properties to bundle executables and extract them with `Loader.load()`
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,d966519862500e64b90b4bd30d56e3d7aeb39ce2,Samuel Audet,2019-03-23T13:29:54Z,samuel.audet@gmail.com,Samuel Audet,2019-03-23T13:29:54Z,samuel.audet@gmail.com,250,214,36, * Add `platform.executable` and `platform.executablepath` properties to bundle executables and extract them with `Loader.load()`
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,d966519862500e64b90b4bd30d56e3d7aeb39ce2,Samuel Audet,2019-03-23T13:29:54Z,samuel.audet@gmail.com,Samuel Audet,2019-03-23T13:29:54Z,samuel.audet@gmail.com,250,214,36, * Add `platform.executable` and `platform.executablepath` properties to bundle executables and extract them with `Loader.load()`
,src/main/java/org/bytedeco/javacpp/Loader.java,58521bac6995572f3e30c3645a4c4ae8bdc573a4,Samuel Audet,2019-03-20T07:25:49Z,samuel.audet@gmail.com,Samuel Audet,2019-03-20T07:25:49Z,samuel.audet@gmail.com,7,2,5, * Create symbolic links for all libraries preloaded by `Loader` as they get loaded to satisfy libraries like MKL
,src/main/java/org/bytedeco/javacpp/Loader.java,b9cdff75133ade366a3c32f8bf8b1537b575c1e6,Samuel Audet,2019-03-10T11:57:50Z,samuel.audet@gmail.com,Samuel Audet,2019-03-10T11:57:50Z,samuel.audet@gmail.com,14,9,5," * Prevent `ClassCastException` in `Loader` on illegal system properties (issue #289)
 * Fix `Parser` not replacing all type names of the base class with `Info.flatten` (issue #288)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,b9cdff75133ade366a3c32f8bf8b1537b575c1e6,Samuel Audet,2019-03-10T11:57:50Z,samuel.audet@gmail.com,Samuel Audet,2019-03-10T11:57:50Z,samuel.audet@gmail.com,14,9,5," * Prevent `ClassCastException` in `Loader` on illegal system properties (issue #289)
 * Fix `Parser` not replacing all type names of the base class with `Info.flatten` (issue #288)"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,b03fda78a7c4a97c8d01093e177ecd655a997b53,Samuel Audet,2019-03-02T14:07:43Z,samuel.audet@gmail.com,Samuel Audet,2019-03-02T14:07:43Z,samuel.audet@gmail.com,5,4,1, * Let `BuildMojo` return to the Maven project the detected host platform as `${javacpp.platform.host}`
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,398a965192990d03ff44ae402a8eb07a2e8a1fc7,Samuel Audet,2019-02-26T01:52:48Z,samuel.audet@gmail.com,Samuel Audet,2019-02-26T01:52:48Z,samuel.audet@gmail.com,3,2,1,Fix spurious library generation when overriding `@Properties` with an additional `@Platform` annotation
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,97111f991ba816ca21ae8dcca9fd7ebcbf1c4cbc,Samuel Audet,2019-02-25T06:35:40Z,samuel.audet@gmail.com,Samuel Audet,2019-02-25T06:35:40Z,samuel.audet@gmail.com,4,4,0, * Have `BuildMojo` output a JPMS friendly name for the platform and extension back to the Maven project as `${javacpp.platform.module}`
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,a675a5811749f87fade536b60c31a62721d47f51,Samuel Audet,2019-02-24T13:41:44Z,samuel.audet@gmail.com,Samuel Audet,2019-02-24T13:41:44Z,samuel.audet@gmail.com,44,43,1, * Add `Builder.clean` option to delete the `outputDirectory` before generating files
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,a675a5811749f87fade536b60c31a62721d47f51,Samuel Audet,2019-02-24T13:41:44Z,samuel.audet@gmail.com,Samuel Audet,2019-02-24T13:41:44Z,samuel.audet@gmail.com,44,43,1, * Add `Builder.clean` option to delete the `outputDirectory` before generating files
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,5b4709ea58444e25f676a1baed442a5ba9d0546b,Samuel Audet,2019-02-23T00:46:47Z,samuel.audet@gmail.com,Samuel Audet,2019-02-23T00:46:47Z,samuel.audet@gmail.com,3,2,1,But leave `Parser` fall back on `Info` for the type when not explicitly available for constructors
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,be92fe8331e798a552da6a1915a25e6cb25e5285,Samuel Audet,2019-02-22T03:35:18Z,samuel.audet@gmail.com,Samuel Audet,2019-02-22T03:35:18Z,samuel.audet@gmail.com,36,28,8, * Let `Parser` pick up `Info` explicitly for all constructors by considering their names as functions (issue #284)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,3e134fe6d8d2eba8b6584a357b6c690201af3475,Samuel Audet,2019-02-20T01:54:21Z,samuel.audet@gmail.com,Samuel Audet,2019-02-20T01:54:21Z,samuel.audet@gmail.com,9,7,2, * Fix `Parser` overlooking `Info` for constructors inside templates (issue #284)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,d120d852729c57f5f0acafb4389ff8306eb219ea,Samuel Audet,2019-02-19T13:31:42Z,samuel.audet@gmail.com,Samuel Audet,2019-02-19T13:31:42Z,samuel.audet@gmail.com,8,5,3, * Fix `Parser` not always generating files using the simple names of classes
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,eabbccb0735044ec79cbffd346db66b916c43ecb,Samuel Audet,2019-02-19T07:35:07Z,samuel.audet@gmail.com,Samuel Audet,2019-02-19T07:35:07Z,samuel.audet@gmail.com,10,10,0, * Add a `BuildMojo.targetDirectories` parameter to allow setting multiple directories where to find generated Java files
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,e435a018957143bcbaef022212cae785249eb7e7,Samuel Audet,2019-02-19T05:33:36Z,samuel.audet@gmail.com,Samuel Audet,2019-02-19T05:33:36Z,samuel.audet@gmail.com,13,9,4, * Add `Parser` support for attributes appearing after `struct` declarations (issue bytedeco/javacpp-presets#685)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,7f7ba43bf84389b3ec7d21e32101e6bf31245739,Samuel Audet,2019-02-19T03:06:20Z,samuel.audet@gmail.com,Samuel Audet,2019-02-19T03:06:20Z,samuel.audet@gmail.com,4,3,1, * Fix `Parser` overlooking `Info` for constructors inside a namespace (issue #284)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,d71d8f690b23648b00601a6a56be1c5ae89d9d8a,Samuel Audet,2019-02-18T07:49:29Z,samuel.audet@gmail.com,Samuel Audet,2019-02-18T07:49:29Z,samuel.audet@gmail.com,16,14,2, * Fix `Parser` applying some `Info.annotations` at the wrong place (issue #284)
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,e9daf35187676acbc2cc3bd083495a37c84e8e9c,Samuel Audet,2019-02-13T01:42:06Z,samuel.audet@gmail.com,Samuel Audet,2019-02-13T03:10:35Z,samuel.audet@gmail.com,31,20,11, * Allow an additional `@Platform` annotation to override `@Properties`
,src/main/java/org/bytedeco/javacpp/Loader.java,e9daf35187676acbc2cc3bd083495a37c84e8e9c,Samuel Audet,2019-02-13T01:42:06Z,samuel.audet@gmail.com,Samuel Audet,2019-02-13T03:10:35Z,samuel.audet@gmail.com,31,20,11, * Allow an additional `@Platform` annotation to override `@Properties`
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,e51d34a230ad1e076d2158bd6810a6032d4b6d74,Samuel Audet,2019-01-29T08:32:51Z,samuel.audet@gmail.com,Samuel Audet,2019-01-29T08:32:51Z,samuel.audet@gmail.com,11,7,4, * Make `Parser` behave the same with `@Properties` having only one out of `global` or `target` value set
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,32d1721236f47a536d61106de684a6e77efe34e1,Samuel Audet,2019-01-26T10:56:28Z,samuel.audet@gmail.com,Samuel Audet,2019-01-26T10:56:28Z,samuel.audet@gmail.com,47,25,22," * Enhance `UniquePtrAdapter` with the ability to move pointers out with the `&&` operator
 * Let `Parser` map constructors also for abstract classes with `Info.virtualize`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,32d1721236f47a536d61106de684a6e77efe34e1,Samuel Audet,2019-01-26T10:56:28Z,samuel.audet@gmail.com,Samuel Audet,2019-01-26T10:56:28Z,samuel.audet@gmail.com,47,25,22," * Enhance `UniquePtrAdapter` with the ability to move pointers out with the `&&` operator
 * Let `Parser` map constructors also for abstract classes with `Info.virtualize`"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,bc4f85c5ae5d29fa120d67438a8a91fddfb5bacf,Samuel Audet,2019-01-25T07:45:05Z,samuel.audet@gmail.com,Samuel Audet,2019-01-25T07:45:05Z,samuel.audet@gmail.com,65,38,27, * Fix `Parser` taking the global package as the target package even when both are set
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,bc4f85c5ae5d29fa120d67438a8a91fddfb5bacf,Samuel Audet,2019-01-25T07:45:05Z,samuel.audet@gmail.com,Samuel Audet,2019-01-25T07:45:05Z,samuel.audet@gmail.com,65,38,27, * Fix `Parser` taking the global package as the target package even when both are set
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,a1e196cccbbc72b7f79fb27414b0acebe92bbaa6,Samuel Audet,2019-01-23T01:46:52Z,samuel.audet@gmail.com,Samuel Audet,2019-01-23T01:53:19Z,samuel.audet@gmail.com,6,5,1," * Consider `@Properties(global=..., helper=...)` class names without ""."" as relative to `target` (pull bytedeco/javacpp-presets#669)"
,src/main/java/org/bytedeco/javacpp/tools/DocTag.java,8658d3ab7ee230a59bea346676710101073d3e9e,Samuel Audet,2019-01-22T00:25:16Z,samuel.audet@gmail.com,Samuel Audet,2019-01-22T00:25:16Z,samuel.audet@gmail.com,2,1,1,Remove regex not supported by Java SE 7
,src/main/java/org/bytedeco/javacpp/tools/DocTag.java,60bb9d91024c26500845deb2a15429954a4ebcb4,HGuillemet,2019-01-21T02:25:46Z,hg@apteryx.fr,Samuel Audet,2019-01-21T02:32:00Z,samuel.audet@gmail.com,108,91,17, * Use regex in `Parser` to translate more Doxygen commands into Javadoc tags (pull #278 and pull #281)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,60bb9d91024c26500845deb2a15429954a4ebcb4,HGuillemet,2019-01-21T02:25:46Z,hg@apteryx.fr,Samuel Audet,2019-01-21T02:32:00Z,samuel.audet@gmail.com,108,91,17, * Use regex in `Parser` to translate more Doxygen commands into Javadoc tags (pull #278 and pull #281)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,3707a48c37e8d35afd901cda218f7e13ed0558f9,Alex Merritt,2019-01-15T02:26:30Z,lecaran@gmail.com,Samuel Audet,2019-01-15T02:26:30Z,samuel.audet@gmail.com,6,4,2, * Do not let `Parser` map `operator=()` when prefixing container name with `const ` (pull #280)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,2cf75e542f1a2756e5a918872a90720e895fe239,Samuel Audet,2019-01-04T02:10:47Z,samuel.audet@gmail.com,Samuel Audet,2019-01-04T02:10:47Z,samuel.audet@gmail.com,27,24,3,Refine `Parser` skipping over C++11 style `{ ... }` member initializer lists (pull bytedeco/javacpp-presets#642)
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,3da3c7aa82aa4ecc9a15cc08f0741e94c76fcee1,Samuel Audet,2018-12-30T15:41:30Z,samuel.audet@gmail.com,Samuel Audet,2018-12-30T15:41:30Z,samuel.audet@gmail.com,25,15,10," * Allow users to override platform properties via system properties starting with ""org.bytedeco.javacpp.platform."""
,src/main/java/org/bytedeco/javacpp/Loader.java,3da3c7aa82aa4ecc9a15cc08f0741e94c76fcee1,Samuel Audet,2018-12-30T15:41:30Z,samuel.audet@gmail.com,Samuel Audet,2018-12-30T15:41:30Z,samuel.audet@gmail.com,25,15,10," * Allow users to override platform properties via system properties starting with ""org.bytedeco.javacpp.platform."""
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,c2413811dba8195c1de1e522d34d52002ed5cf84,Samuel Audet,2018-12-29T08:47:58Z,samuel.audet@gmail.com,Samuel Audet,2018-12-29T08:47:58Z,samuel.audet@gmail.com,13,13,0, * Have `BuildMojo` output its class path back to the Maven project as `${javacpp.platform.artifacts}`
,src/main/java/org/bytedeco/javacpp/Loader.java,ce03d55c66a359db28b36373e51c80e4751a7be6,Samuel Audet,2018-12-28T09:12:08Z,samuel.audet@gmail.com,Samuel Audet,2018-12-28T09:12:08Z,samuel.audet@gmail.com,10,8,2, * Fix potential `NullPointerException` in `Loader.findResources()` under the bootstrap class loader
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,f39f2c81f5d20b3e70de5fcbbf4a094892c599ed,Samuel Audet,2018-12-27T08:30:26Z,samuel.audet@gmail.com,Samuel Audet,2018-12-27T08:30:26Z,samuel.audet@gmail.com,8,7,1, * Add `size()` and `stride()` methods to `Indexer` for convenience
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,fbf9e958e564bc0c93dec201e8e6d650f10524ef,Samuel Audet,2018-12-22T23:11:51Z,samuel.audet@gmail.com,Samuel Audet,2018-12-22T23:11:51Z,samuel.audet@gmail.com,22,19,3, * Let `Parser` skip over C++11 style `{ ... }` member initializer lists (pull bytedeco/javacpp-presets#642)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,6a71efb96405174d3876b1d82dd9cca2f64b2aa6,Samuel Audet,2018-12-17T03:25:06Z,samuel.audet@gmail.com,Samuel Audet,2018-12-17T03:25:06Z,samuel.audet@gmail.com,7,5,2," * Fix `Parser` not picking up `Info` for cast `operator` declarations with `const`, `&`, or `*` (issue bytedeco/javacpp-presets#377)"
,src/main/java/org/bytedeco/javacpp/Loader.java,61db8dd73b23b1375dd540da729de3d96b696ed6,Samuel Audet,2018-12-15T01:03:30Z,samuel.audet@gmail.com,Samuel Audet,2018-12-15T01:03:30Z,samuel.audet@gmail.com,5,4,1,Fix bug introduced in changes to `Loader.findResources()` for dealing with JPMS
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,2eca93ffe016e25aaf22f9ac47c791b881f11920,Samuel Audet,2018-12-15T00:22:19Z,samuel.audet@gmail.com,Samuel Audet,2018-12-15T00:22:19Z,samuel.audet@gmail.com,7,6,1, * Add validation for `Builder.environmentVariables` to prevent `NullPointerException` in `executeCommand()`
,src/main/java/org/bytedeco/javacpp/Loader.java,f3a7d76dd0291aa9c4e0a588b654c84411c00b18,Samuel Audet,2018-12-10T01:44:06Z,samuel.audet@gmail.com,Samuel Audet,2018-12-10T01:44:06Z,samuel.audet@gmail.com,108,81,27," * Replace calls to `Class.getResource()` with `Loader.findResource()` to work around issues with JPMS ([pull #276](https://github.com/bytedeco/javacpp/pull/276))
 * Enhance `Loader.findResources()` with `Class.getResource()` and search among parent packages
 * Take shortest common package name among all user classes for the default output path of `Builder`"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,f3a7d76dd0291aa9c4e0a588b654c84411c00b18,Samuel Audet,2018-12-10T01:44:06Z,samuel.audet@gmail.com,Samuel Audet,2018-12-10T01:44:06Z,samuel.audet@gmail.com,108,81,27," * Replace calls to `Class.getResource()` with `Loader.findResource()` to work around issues with JPMS ([pull #276](https://github.com/bytedeco/javacpp/pull/276))
 * Enhance `Loader.findResources()` with `Class.getResource()` and search among parent packages
 * Take shortest common package name among all user classes for the default output path of `Builder`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,f3a7d76dd0291aa9c4e0a588b654c84411c00b18,Samuel Audet,2018-12-10T01:44:06Z,samuel.audet@gmail.com,Samuel Audet,2018-12-10T01:44:06Z,samuel.audet@gmail.com,108,81,27," * Replace calls to `Class.getResource()` with `Loader.findResource()` to work around issues with JPMS ([pull #276](https://github.com/bytedeco/javacpp/pull/276))
 * Enhance `Loader.findResources()` with `Class.getResource()` and search among parent packages
 * Take shortest common package name among all user classes for the default output path of `Builder`"
,src/test/java/org/bytedeco/javacpp/BuilderTest.java,f3a7d76dd0291aa9c4e0a588b654c84411c00b18,Samuel Audet,2018-12-10T01:44:06Z,samuel.audet@gmail.com,Samuel Audet,2018-12-10T01:44:06Z,samuel.audet@gmail.com,108,81,27," * Replace calls to `Class.getResource()` with `Loader.findResource()` to work around issues with JPMS ([pull #276](https://github.com/bytedeco/javacpp/pull/276))
 * Enhance `Loader.findResources()` with `Class.getResource()` and search among parent packages
 * Take shortest common package name among all user classes for the default output path of `Builder`"
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16ArrayIndexer.java,3ebcd82fb7009ec25aefef7c67f40c1f8aa1cd81,Samuel Audet,2018-12-05T07:54:26Z,samuel.audet@gmail.com,Samuel Audet,2018-12-05T07:54:26Z,samuel.audet@gmail.com,596,596,0, * Add `Bfloat16Indexer` to access `short` arrays as `bfloat16` floating point numbers
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16BufferIndexer.java,3ebcd82fb7009ec25aefef7c67f40c1f8aa1cd81,Samuel Audet,2018-12-05T07:54:26Z,samuel.audet@gmail.com,Samuel Audet,2018-12-05T07:54:26Z,samuel.audet@gmail.com,596,596,0, * Add `Bfloat16Indexer` to access `short` arrays as `bfloat16` floating point numbers
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16Indexer.java,3ebcd82fb7009ec25aefef7c67f40c1f8aa1cd81,Samuel Audet,2018-12-05T07:54:26Z,samuel.audet@gmail.com,Samuel Audet,2018-12-05T07:54:26Z,samuel.audet@gmail.com,596,596,0, * Add `Bfloat16Indexer` to access `short` arrays as `bfloat16` floating point numbers
,src/main/java/org/bytedeco/javacpp/indexer/Bfloat16RawIndexer.java,3ebcd82fb7009ec25aefef7c67f40c1f8aa1cd81,Samuel Audet,2018-12-05T07:54:26Z,samuel.audet@gmail.com,Samuel Audet,2018-12-05T07:54:26Z,samuel.audet@gmail.com,596,596,0, * Add `Bfloat16Indexer` to access `short` arrays as `bfloat16` floating point numbers
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,3ebcd82fb7009ec25aefef7c67f40c1f8aa1cd81,Samuel Audet,2018-12-05T07:54:26Z,samuel.audet@gmail.com,Samuel Audet,2018-12-05T07:54:26Z,samuel.audet@gmail.com,596,596,0, * Add `Bfloat16Indexer` to access `short` arrays as `bfloat16` floating point numbers
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,32610ea3d743f3bd1fe0559602c759af7fc83939,HGuillemet,2018-12-05T01:51:42Z,hg@apteryx.fr,Samuel Audet,2018-12-05T01:51:42Z,samuel.audet@gmail.com,22,11,11," * When `Indexer.sizes.length != 3`, return -1 for `rows()`, `cols()`, `width()`, `height()`, and `channels()` (pull #275)"
,src/main/java/org/bytedeco/javacpp/Loader.java,7ed419196f40a075685b577cf37ccf742a7d6058,Samuel Audet,2018-12-03T14:49:51Z,samuel.audet@gmail.com,Samuel Audet,2018-12-03T14:49:51Z,samuel.audet@gmail.com,24,7,17, * Synchronize `Loader.cacheResources()` on `Runtime` to avoid `OverlappingFileLockException` with multiple class loaders (issue bytedeco/javacpp-presets#650)
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,ea93ef1cd49585d2f390bc94a6d678ce67e05246,Samuel Audet,2018-12-03T11:17:51Z,samuel.audet@gmail.com,Samuel Audet,2018-12-03T11:17:51Z,samuel.audet@gmail.com,3,2,1, * Annotate `BuildMojo` as `threadSafe`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,3e72b05572206751bb5651c10539f31634151d37,Samuel Audet,2018-11-30T11:17:37Z,samuel.audet@gmail.com,Samuel Audet,2018-11-30T11:17:37Z,samuel.audet@gmail.com,14,8,6, * Fix `Generator` errors for `@StdString` and other `@Adapter` on `@Virtual` return values
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,f69de74da8109774d58d278832ce7e8aae24a1d6,Samuel Audet,2018-11-29T12:39:06Z,samuel.audet@gmail.com,Samuel Audet,2018-11-29T12:39:06Z,samuel.audet@gmail.com,68,39,29,Use `@Properties(inherit=...)` instead of `@Platform(library=...)` for classes targeted by `@Properties(global=...)`
,src/main/java/org/bytedeco/javacpp/Loader.java,f69de74da8109774d58d278832ce7e8aae24a1d6,Samuel Audet,2018-11-29T12:39:06Z,samuel.audet@gmail.com,Samuel Audet,2018-11-29T12:39:06Z,samuel.audet@gmail.com,68,39,29,Use `@Properties(inherit=...)` instead of `@Platform(library=...)` for classes targeted by `@Properties(global=...)`
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,f69de74da8109774d58d278832ce7e8aae24a1d6,Samuel Audet,2018-11-29T12:39:06Z,samuel.audet@gmail.com,Samuel Audet,2018-11-29T12:39:06Z,samuel.audet@gmail.com,68,39,29,Use `@Properties(inherit=...)` instead of `@Platform(library=...)` for classes targeted by `@Properties(global=...)`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,f69de74da8109774d58d278832ce7e8aae24a1d6,Samuel Audet,2018-11-29T12:39:06Z,samuel.audet@gmail.com,Samuel Audet,2018-11-29T12:39:06Z,samuel.audet@gmail.com,68,39,29,Use `@Properties(inherit=...)` instead of `@Platform(library=...)` for classes targeted by `@Properties(global=...)`
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,fe0140af6af9d3db216bf505c7d611b0c67a4b6c,Samuel Audet,2018-11-28T06:46:42Z,samuel.audet@gmail.com,Samuel Audet,2018-11-28T06:46:42Z,samuel.audet@gmail.com,8,7,1," * Use simple name from `@Properties(target=..., global=...)` class as default for `@Platform(library=...)` name"
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,fe0140af6af9d3db216bf505c7d611b0c67a4b6c,Samuel Audet,2018-11-28T06:46:42Z,samuel.audet@gmail.com,Samuel Audet,2018-11-28T06:46:42Z,samuel.audet@gmail.com,8,7,1," * Use simple name from `@Properties(target=..., global=...)` class as default for `@Platform(library=...)` name"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,99835a5b8cc26e2162f30ba4b8dbf188e389cb0f,Samuel Audet,2018-11-28T04:45:17Z,samuel.audet@gmail.com,Samuel Audet,2018-11-28T04:45:17Z,samuel.audet@gmail.com,4,3,1, * Make sure `Generator` does not use `position` of `@Opaque Pointer` output parameters with `@Adapter` (pull bytedeco/javacpp-presets#642)
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,66023c2c4e547828439d8bd2b9f0d577e1c671f0,Samuel Audet,2018-11-28T03:53:03Z,samuel.audet@gmail.com,Samuel Audet,2018-11-28T03:53:03Z,samuel.audet@gmail.com,3,2,1, * Prevent `Builder` from trying to use `Pointer` as library name for the output
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,1dcfcc7c444b3c073af37a8e849577f759d9539a,Samuel Audet,2018-11-25T13:57:04Z,samuel.audet@gmail.com,Samuel Audet,2018-11-25T13:57:04Z,samuel.audet@gmail.com,68,63,5, * Add `Builder.generate` option and corresponding `ParseMojo` to prioritize parsing header files
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,1dcfcc7c444b3c073af37a8e849577f759d9539a,Samuel Audet,2018-11-25T13:57:04Z,samuel.audet@gmail.com,Samuel Audet,2018-11-25T13:57:04Z,samuel.audet@gmail.com,68,63,5, * Add `Builder.generate` option and corresponding `ParseMojo` to prioritize parsing header files
,src/main/java/org/bytedeco/javacpp/tools/ParseMojo.java,1dcfcc7c444b3c073af37a8e849577f759d9539a,Samuel Audet,2018-11-25T13:57:04Z,samuel.audet@gmail.com,Samuel Audet,2018-11-25T13:57:04Z,samuel.audet@gmail.com,68,63,5, * Add `Builder.generate` option and corresponding `ParseMojo` to prioritize parsing header files
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,0e3ff4546b2a34beeb5abae254f94b38e139ad21,Samuel Audet,2018-11-20T11:26:40Z,samuel.audet@gmail.com,Samuel Audet,2018-11-20T11:26:40Z,samuel.audet@gmail.com,7,5,2, * Fix `Parser` mapping of `const` function pointer variable declarations
,src/main/java/org/bytedeco/javacpp/Loader.java,572500bfabf1290dc05a515b7fe2db5bf6823309,Samuel Audet,2018-11-20T00:11:40Z,samuel.audet@gmail.com,Samuel Audet,2018-11-20T00:11:40Z,samuel.audet@gmail.com,9,9,0, * Enhance `Loader.cacheResource()` with support for HTTP connections
,src/main/java9/module-info.java,7bff797bb91d75b04890598609ff014fa7adae7f,Samuel Audet,2018-11-18T01:43:14Z,samuel.audet@gmail.com,Samuel Audet,2018-11-18T01:43:14Z,samuel.audet@gmail.com,83,82,1, * Add `module-info.java` and create a multi-release JAR to comply with JPMS (pull #252)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,486f3eff7d31c7dd16bcaac9eae932e6592d73b0,Samuel Audet,2018-11-15T11:07:59Z,samuel.audet@gmail.com,Samuel Audet,2018-11-15T11:07:59Z,samuel.audet@gmail.com,13,7,6, * Prevent `Parser` from outputting twice the same `Info.javaText` by using it as declaration signature
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,2d731dc8a36a68a0c26a0c2a94567197bba3739f,Samuel Audet,2018-11-12T11:59:33Z,samuel.audet@gmail.com,Samuel Audet,2018-11-12T11:59:33Z,samuel.audet@gmail.com,28,22,6," * Provide default `Info` for `std::string*` and `std::wstring*` mapping to `BytePointer`, and `CharPointer` and `IntPointer`
 * Ensure `Parser` skips over attributes of friend declarations or function definitions that are not used
 * Do not let `Parser` output `@Override` when overloading a method with less parameters using default arguments"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,2d731dc8a36a68a0c26a0c2a94567197bba3739f,Samuel Audet,2018-11-12T11:59:33Z,samuel.audet@gmail.com,Samuel Audet,2018-11-12T11:59:33Z,samuel.audet@gmail.com,28,22,6," * Provide default `Info` for `std::string*` and `std::wstring*` mapping to `BytePointer`, and `CharPointer` and `IntPointer`
 * Ensure `Parser` skips over attributes of friend declarations or function definitions that are not used
 * Do not let `Parser` output `@Override` when overloading a method with less parameters using default arguments"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,2d731dc8a36a68a0c26a0c2a94567197bba3739f,Samuel Audet,2018-11-12T11:59:33Z,samuel.audet@gmail.com,Samuel Audet,2018-11-12T11:59:33Z,samuel.audet@gmail.com,28,22,6," * Provide default `Info` for `std::string*` and `std::wstring*` mapping to `BytePointer`, and `CharPointer` and `IntPointer`
 * Ensure `Parser` skips over attributes of friend declarations or function definitions that are not used
 * Do not let `Parser` output `@Override` when overloading a method with less parameters using default arguments"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,d03f3bd6738c3bf253d0dbaa4e5b0899918e0137,Samuel Audet,2018-11-10T14:20:57Z,samuel.audet@gmail.com,Samuel Audet,2018-11-10T14:20:57Z,samuel.audet@gmail.com,163,100,63," * Allow `Builder` to execute `javac` and `java` for convenience, and remove ""."" from class path (issue #192)"
,src/main/java/org/bytedeco/javacpp/Pointer.java,f214f5c3aa14d2231bfe4e8d0fbab394a7a50a30,Samuel Audet,2018-11-06T13:27:25Z,samuel.audet@gmail.com,Samuel Audet,2018-11-06T13:27:25Z,samuel.audet@gmail.com,425,388,37," * Enhance support for `java.nio.Buffer` by taking into account `offset`, `position`, `limit`, and `capacity` on function calls"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,f214f5c3aa14d2231bfe4e8d0fbab394a7a50a30,Samuel Audet,2018-11-06T13:27:25Z,samuel.audet@gmail.com,Samuel Audet,2018-11-06T13:27:25Z,samuel.audet@gmail.com,425,388,37," * Enhance support for `java.nio.Buffer` by taking into account `offset`, `position`, `limit`, and `capacity` on function calls"
,src/test/java/org/bytedeco/javacpp/BufferTest.java,f214f5c3aa14d2231bfe4e8d0fbab394a7a50a30,Samuel Audet,2018-11-06T13:27:25Z,samuel.audet@gmail.com,Samuel Audet,2018-11-06T13:27:25Z,samuel.audet@gmail.com,425,388,37," * Enhance support for `java.nio.Buffer` by taking into account `offset`, `position`, `limit`, and `capacity` on function calls"
,src/test/java/org/bytedeco/javacpp/PointerTest.java,f214f5c3aa14d2231bfe4e8d0fbab394a7a50a30,Samuel Audet,2018-11-06T13:27:25Z,samuel.audet@gmail.com,Samuel Audet,2018-11-06T13:27:25Z,samuel.audet@gmail.com,425,388,37," * Enhance support for `java.nio.Buffer` by taking into account `offset`, `position`, `limit`, and `capacity` on function calls"
,src/test/resources/org/bytedeco/javacpp/BufferTest.h,f214f5c3aa14d2231bfe4e8d0fbab394a7a50a30,Samuel Audet,2018-11-06T13:27:25Z,samuel.audet@gmail.com,Samuel Audet,2018-11-06T13:27:25Z,samuel.audet@gmail.com,425,388,37," * Enhance support for `java.nio.Buffer` by taking into account `offset`, `position`, `limit`, and `capacity` on function calls"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,8fe769428ee9510f25b5e30d476cdd1c779e0bb2,Samuel Audet,2018-11-05T08:01:06Z,samuel.audet@gmail.com,Samuel Audet,2018-11-05T10:29:23Z,samuel.audet@gmail.com,27,15,12," * Make sure `Parser` always uses the short version of identifiers for Java class declarations
 * Prevent `Parser` from inheriting constructors with `using` when not accessible or of incomplete template instances"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,c4759be5d7345c59e1d773c42b6182b3c5d096bf,Samuel Audet,2018-10-25T02:51:14Z,samuel.audet@gmail.com,Samuel Audet,2018-10-25T02:51:14Z,samuel.audet@gmail.com,18,13,5," * Add default `Info` to map `noexcept` attribute from C++11 to `@NoException` annotation
 * Fix `Parser` failures on variadic function template arguments `...` and destructor attributes (pull bytedeco/javacpp-presets#622)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,c4759be5d7345c59e1d773c42b6182b3c5d096bf,Samuel Audet,2018-10-25T02:51:14Z,samuel.audet@gmail.com,Samuel Audet,2018-10-25T02:51:14Z,samuel.audet@gmail.com,18,13,5," * Add default `Info` to map `noexcept` attribute from C++11 to `@NoException` annotation
 * Fix `Parser` failures on variadic function template arguments `...` and destructor attributes (pull bytedeco/javacpp-presets#622)"
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,f89f1c370617105f940a4e7a0eabbbcb491939dd,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,101,81,20, * Add `@Properties(global=...)` value to allow `Parser` to target Java packages (pull #252)
,src/main/java/org/bytedeco/javacpp/Loader.java,f89f1c370617105f940a4e7a0eabbbcb491939dd,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,101,81,20, * Add `@Properties(global=...)` value to allow `Parser` to target Java packages (pull #252)
,src/main/java/org/bytedeco/javacpp/annotation/Properties.java,f89f1c370617105f940a4e7a0eabbbcb491939dd,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,101,81,20, * Add `@Properties(global=...)` value to allow `Parser` to target Java packages (pull #252)
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,f89f1c370617105f940a4e7a0eabbbcb491939dd,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,101,81,20, * Add `@Properties(global=...)` value to allow `Parser` to target Java packages (pull #252)
,src/main/java/org/bytedeco/javacpp/tools/Declaration.java,f89f1c370617105f940a4e7a0eabbbcb491939dd,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,101,81,20, * Add `@Properties(global=...)` value to allow `Parser` to target Java packages (pull #252)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,f89f1c370617105f940a4e7a0eabbbcb491939dd,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,Samuel Audet,2018-10-24T13:00:59Z,samuel.audet@gmail.com,101,81,20, * Add `@Properties(global=...)` value to allow `Parser` to target Java packages (pull #252)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,c03cd9d335820ba9a26bf200fe90a69400001303,Samuel Audet,2018-10-17T13:21:40Z,samuel.audet@gmail.com,Samuel Audet,2018-10-17T13:21:40Z,samuel.audet@gmail.com,19,14,5, * Fix `Generator` output for `@Const` parameters of function pointers
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,c105445fb30709263c6cc830067c6c684ceaa73d,Samuel Audet,2018-10-10T15:33:09Z,samuel.audet@gmail.com,Samuel Audet,2018-10-10T15:33:09Z,samuel.audet@gmail.com,63,41,22, * Enhance `Generator` with `@ByPtr` for primitive types and `@NoException` for `FunctionPointer` methods
,src/main/java/org/bytedeco/javacpp/BooleanPointer.java,734e30e8a2ae15539bb4af5a00aa649804ca0296,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,812,809,3, * Add `BooleanPointer` and `BooleanIndexer` to access arrays of boolean values with `sizeof(jboolean) == 1`
,src/main/java/org/bytedeco/javacpp/indexer/BooleanArrayIndexer.java,734e30e8a2ae15539bb4af5a00aa649804ca0296,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,812,809,3, * Add `BooleanPointer` and `BooleanIndexer` to access arrays of boolean values with `sizeof(jboolean) == 1`
,src/main/java/org/bytedeco/javacpp/indexer/BooleanBufferIndexer.java,734e30e8a2ae15539bb4af5a00aa649804ca0296,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,812,809,3, * Add `BooleanPointer` and `BooleanIndexer` to access arrays of boolean values with `sizeof(jboolean) == 1`
,src/main/java/org/bytedeco/javacpp/indexer/BooleanIndexer.java,734e30e8a2ae15539bb4af5a00aa649804ca0296,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,812,809,3, * Add `BooleanPointer` and `BooleanIndexer` to access arrays of boolean values with `sizeof(jboolean) == 1`
,src/main/java/org/bytedeco/javacpp/indexer/BooleanRawIndexer.java,734e30e8a2ae15539bb4af5a00aa649804ca0296,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,812,809,3, * Add `BooleanPointer` and `BooleanIndexer` to access arrays of boolean values with `sizeof(jboolean) == 1`
,src/main/java/org/bytedeco/javacpp/indexer/Raw.java,734e30e8a2ae15539bb4af5a00aa649804ca0296,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,812,809,3, * Add `BooleanPointer` and `BooleanIndexer` to access arrays of boolean values with `sizeof(jboolean) == 1`
,src/main/java/org/bytedeco/javacpp/indexer/UnsafeRaw.java,734e30e8a2ae15539bb4af5a00aa649804ca0296,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,812,809,3, * Add `BooleanPointer` and `BooleanIndexer` to access arrays of boolean values with `sizeof(jboolean) == 1`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,734e30e8a2ae15539bb4af5a00aa649804ca0296,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,812,809,3, * Add `BooleanPointer` and `BooleanIndexer` to access arrays of boolean values with `sizeof(jboolean) == 1`
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,734e30e8a2ae15539bb4af5a00aa649804ca0296,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,812,809,3, * Add `BooleanPointer` and `BooleanIndexer` to access arrays of boolean values with `sizeof(jboolean) == 1`
,src/test/java/org/bytedeco/javacpp/PointerTest.java,734e30e8a2ae15539bb4af5a00aa649804ca0296,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,Samuel Audet,2018-10-02T07:39:15Z,samuel.audet@gmail.com,812,809,3, * Add `BooleanPointer` and `BooleanIndexer` to access arrays of boolean values with `sizeof(jboolean) == 1`
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,46a66d90e94aca1a35fe163beacb19e0f35c45d5,Samuel Audet,2018-09-28T02:17:19Z,samuel.audet@gmail.com,Samuel Audet,2018-09-28T02:17:19Z,samuel.audet@gmail.com,4,3,1, * Let `Parser` skip over `static_assert()` declarations of C++11
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,223e82e8cc6d078a940d551012e1afee13f4197e,Samuel Audet,2018-09-24T10:55:55Z,samuel.audet@gmail.com,Samuel Audet,2018-09-24T10:55:55Z,samuel.audet@gmail.com,3,2,1, * Add to default `InfoMap` missing `int` value type and `IntPointer` pointer type for `wchar_t`
,src/main/java/org/bytedeco/javacpp/Loader.java,5b70ce94f55b3adeeef06da9f541534bcc667d9f,Samuel Audet,2018-09-13T04:30:28Z,samuel.audet@gmail.com,Samuel Audet,2018-09-13T04:30:28Z,samuel.audet@gmail.com,43,31,12," * Add `Loader.getLoadedLibraries()` method for debugging purposes and fix flaky `BuilderTest` (issue #245)
 * Call `PointerScope.attach()` as part of `Pointer.deallocator()`, instead of `init()`, to support custom deallocators as well
 * Prevent `Parser` from appending annotations to setter methods of variables to satisfy the `Generator`"
,src/main/java/org/bytedeco/javacpp/Pointer.java,5b70ce94f55b3adeeef06da9f541534bcc667d9f,Samuel Audet,2018-09-13T04:30:28Z,samuel.audet@gmail.com,Samuel Audet,2018-09-13T04:30:28Z,samuel.audet@gmail.com,43,31,12," * Add `Loader.getLoadedLibraries()` method for debugging purposes and fix flaky `BuilderTest` (issue #245)
 * Call `PointerScope.attach()` as part of `Pointer.deallocator()`, instead of `init()`, to support custom deallocators as well
 * Prevent `Parser` from appending annotations to setter methods of variables to satisfy the `Generator`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,5b70ce94f55b3adeeef06da9f541534bcc667d9f,Samuel Audet,2018-09-13T04:30:28Z,samuel.audet@gmail.com,Samuel Audet,2018-09-13T04:30:28Z,samuel.audet@gmail.com,43,31,12," * Add `Loader.getLoadedLibraries()` method for debugging purposes and fix flaky `BuilderTest` (issue #245)
 * Call `PointerScope.attach()` as part of `Pointer.deallocator()`, instead of `init()`, to support custom deallocators as well
 * Prevent `Parser` from appending annotations to setter methods of variables to satisfy the `Generator`"
,src/test/java/org/bytedeco/javacpp/BuilderTest.java,5b70ce94f55b3adeeef06da9f541534bcc667d9f,Samuel Audet,2018-09-13T04:30:28Z,samuel.audet@gmail.com,Samuel Audet,2018-09-13T04:30:28Z,samuel.audet@gmail.com,43,31,12," * Add `Loader.getLoadedLibraries()` method for debugging purposes and fix flaky `BuilderTest` (issue #245)
 * Call `PointerScope.attach()` as part of `Pointer.deallocator()`, instead of `init()`, to support custom deallocators as well
 * Prevent `Parser` from appending annotations to setter methods of variables to satisfy the `Generator`"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,63cf6b616df408bc19f53a9fb97b34aaa6fb8935,louxiu,2018-09-11T02:56:46Z,lou.0211@gmail.com,Samuel Audet,2018-09-11T02:56:46Z,samuel.audet@gmail.com,2,1,1,Include member name in JavaCPP_exception message for pure virtual functions (pull #258)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,2f4e1d22b7bd1b4bfa164c51804de54731d8a0b2,Samuel Audet,2018-09-09T10:47:17Z,samuel.audet@gmail.com,Samuel Audet,2018-09-09T10:47:17Z,samuel.audet@gmail.com,14,8,6, * Fix `Parser` failing when a value of an `std::pair` basic container is also an `std::pair` (issue bytedeco/javacpp-presets#614)
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,449f31b2717a6cebe1581d940b916f52eab790ac,Samuel Audet,2018-09-05T01:01:17Z,samuel.audet@gmail.com,Samuel Audet,2018-09-05T01:01:17Z,samuel.audet@gmail.com,58,43,15, * Add `platform.preloadresource` property to be able to preload libraries from other Java packages
,src/main/java/org/bytedeco/javacpp/Loader.java,449f31b2717a6cebe1581d940b916f52eab790ac,Samuel Audet,2018-09-05T01:01:17Z,samuel.audet@gmail.com,Samuel Audet,2018-09-05T01:01:17Z,samuel.audet@gmail.com,58,43,15, * Add `platform.preloadresource` property to be able to preload libraries from other Java packages
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,449f31b2717a6cebe1581d940b916f52eab790ac,Samuel Audet,2018-09-05T01:01:17Z,samuel.audet@gmail.com,Samuel Audet,2018-09-05T01:01:17Z,samuel.audet@gmail.com,58,43,15, * Add `platform.preloadresource` property to be able to preload libraries from other Java packages
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,449f31b2717a6cebe1581d940b916f52eab790ac,Samuel Audet,2018-09-05T01:01:17Z,samuel.audet@gmail.com,Samuel Audet,2018-09-05T01:01:17Z,samuel.audet@gmail.com,58,43,15, * Add `platform.preloadresource` property to be able to preload libraries from other Java packages
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,449f31b2717a6cebe1581d940b916f52eab790ac,Samuel Audet,2018-09-05T01:01:17Z,samuel.audet@gmail.com,Samuel Audet,2018-09-05T01:01:17Z,samuel.audet@gmail.com,58,43,15, * Add `platform.preloadresource` property to be able to preload libraries from other Java packages
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,d8a0f910b328596302cdec414be418bd7de47ba7,louxiu,2018-08-28T05:29:22Z,lou.0211@gmail.com,Samuel Audet,2018-08-28T05:29:22Z,samuel.audet@gmail.com,47,37,10, * Make `Builder` accept multiple options for `platform.link.prefix` and `platform.link.suffix` (pull #250)
,src/main/java/org/bytedeco/javacpp/Loader.java,dd57c2cca04c937de8031f5dfc896f1c45b59379,Samuel Audet,2018-08-27T11:03:12Z,samuel.audet@gmail.com,Samuel Audet,2018-08-27T13:30:42Z,samuel.audet@gmail.com,44,31,13," * Let `Loader` rename JNI libraries when ""already loaded in another classloader"" (issue deeplearning4j/deeplearning4j#6166)"
,src/main/java/org/bytedeco/javacpp/annotation/CriticalRegion.java,c50d69f896332e6817cb371fdfc43b86fbbedc85,vincent-grosbois,2018-08-25T05:46:01Z,vincent.grosbois@gmail.com,Samuel Audet,2018-08-25T05:46:01Z,samuel.audet@gmail.com,44,41,3, * Add new `@CriticalRegion` annotation to allow zero-copy access to data of Java arrays (pull #254)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,c50d69f896332e6817cb371fdfc43b86fbbedc85,vincent-grosbois,2018-08-25T05:46:01Z,vincent.grosbois@gmail.com,Samuel Audet,2018-08-25T05:46:01Z,samuel.audet@gmail.com,44,41,3, * Add new `@CriticalRegion` annotation to allow zero-copy access to data of Java arrays (pull #254)
,src/main/java/org/bytedeco/javacpp/tools/MethodInformation.java,c50d69f896332e6817cb371fdfc43b86fbbedc85,vincent-grosbois,2018-08-25T05:46:01Z,vincent.grosbois@gmail.com,Samuel Audet,2018-08-25T05:46:01Z,samuel.audet@gmail.com,44,41,3, * Add new `@CriticalRegion` annotation to allow zero-copy access to data of Java arrays (pull #254)
,src/test/java/org/bytedeco/javacpp/PointerTest.java,fa35503c768441aad93ed227048d194130ed1c6e,Samuel Audet,2018-08-24T08:26:46Z,samuel.audet@gmail.com,Samuel Audet,2018-08-24T08:26:46Z,samuel.audet@gmail.com,91,91,0,Add `PointerTest.testPointerPointer()` to make sure it works correctly (issue #251)
,src/main/java/org/bytedeco/javacpp/Loader.java,00cd483bebfbd04f7e3f6fbe3272f49eb7db4fb2,Samuel Audet,2018-08-17T13:18:46Z,samuel.audet@gmail.com,Samuel Audet,2018-08-17T13:18:46Z,samuel.audet@gmail.com,14,12,2," * Allow `Builder` to create links for resource libraries even when no Java classes are built
 * Fix `Loader.cacheResource()` creating a subdirectory named ""null"" when caching a top-level file"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,00cd483bebfbd04f7e3f6fbe3272f49eb7db4fb2,Samuel Audet,2018-08-17T13:18:46Z,samuel.audet@gmail.com,Samuel Audet,2018-08-17T13:18:46Z,samuel.audet@gmail.com,14,12,2," * Allow `Builder` to create links for resource libraries even when no Java classes are built
 * Fix `Loader.cacheResource()` creating a subdirectory named ""null"" when caching a top-level file"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,41e0bf0df69eaf641105df2b2217c59ee5551e33,Samuel Audet,2018-08-15T11:29:13Z,samuel.audet@gmail.com,Samuel Audet,2018-08-15T11:29:13Z,samuel.audet@gmail.com,7,4,3, * Make `Parser` strip annotations from setter methods for basic containers to satisfy the `Generator`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,53dcb8b90172a39a22d0b622adb75197f9d0010d,Samuel Audet,2018-08-03T10:38:48Z,samuel.audet@gmail.com,Samuel Audet,2018-08-03T10:38:48Z,samuel.audet@gmail.com,17,15,2, * Have `Parser` wrap the `insert()` and `erase()` methods of basic containers to allow modifying lists and sets
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,391002c10e41461e05298c28da47fe6d23950de9,Samuel Audet,2018-08-03T00:27:42Z,samuel.audet@gmail.com,Samuel Audet,2018-08-03T00:27:42Z,samuel.audet@gmail.com,15,11,4," * Let `Parser` create mutable instances of map containers without `const ` prefix (issue bytedeco/javacpp-presets#595)
 * Fix `Parser` sometimes ignoring `define` of `const ` containers (pull bytedeco/javacpp-presets#547)"
,src/main/java/org/bytedeco/javacpp/tools/Info.java,7cfd1bf5ad06230716c8274fe304e83ceff24f59,Samuel Audet,2018-08-02T00:30:26Z,samuel.audet@gmail.com,Samuel Audet,2018-08-02T00:30:26Z,samuel.audet@gmail.com,4,3,1, * Explain the purpose of the `intern()` methods generated for Java enums
,src/main/java/org/bytedeco/javacpp/Loader.java,0bdad1cc32c59b78d061bc717391a20a6f773f5b,Samuel Audet,2018-07-28T11:58:25Z,samuel.audet@gmail.com,Samuel Audet,2018-07-28T11:58:36Z,samuel.audet@gmail.com,7,5,2, * Clarify that `Loader.load()` can throw `UnsatisfiedLinkError` when interrupted
,src/main/java/org/bytedeco/javacpp/Loader.java,69d392114b82bc0831f61786d6bc49cddd906e84,louxiu,2018-07-28T11:57:54Z,lou.0211@gmail.com,Samuel Audet,2018-07-28T11:57:54Z,samuel.audet@gmail.com,2,1,1, * Synchronize `Loader.loadLibrary()` to fix potential race condition (pull #246)
,src/main/java/org/bytedeco/javacpp/Loader.java,925bc9eb0303d52d09de0ec43e7cce4e20e5e276,Samuel Audet,2018-07-16T02:10:06Z,samuel.audet@gmail.com,Samuel Audet,2018-07-16T02:10:06Z,samuel.audet@gmail.com,11,11,0, * Add `Loader.getJavaVM()` method to get the JNI `JavaVM` object as required to initialize some libraries
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,925bc9eb0303d52d09de0ec43e7cce4e20e5e276,Samuel Audet,2018-07-16T02:10:06Z,samuel.audet@gmail.com,Samuel Audet,2018-07-16T02:10:06Z,samuel.audet@gmail.com,11,11,0, * Add `Loader.getJavaVM()` method to get the JNI `JavaVM` object as required to initialize some libraries
,src/test/java/org/bytedeco/javacpp/PointerTest.java,925bc9eb0303d52d09de0ec43e7cce4e20e5e276,Samuel Audet,2018-07-16T02:10:06Z,samuel.audet@gmail.com,Samuel Audet,2018-07-16T02:10:06Z,samuel.audet@gmail.com,11,11,0, * Add `Loader.getJavaVM()` method to get the JNI `JavaVM` object as required to initialize some libraries
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,13e6ff1a72c0e3423c50cc02b5746cc98f4418dc,Samuel Audet,2018-07-12T08:02:50Z,samuel.audet@gmail.com,Samuel Audet,2018-07-12T08:02:50Z,samuel.audet@gmail.com,4,3,1, * Fix `Parser` from outputting accessors not available with `std::forward_list` or `std::list`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,428c79da3858963be3883808e5f15e36b91364bc,Aman Gupta,2018-07-12T07:28:44Z,aman@tmm1.net,Samuel Audet,2018-07-12T07:28:44Z,samuel.audet@gmail.com,41,38,3, * Use `pthread_setspecific()` in `Generator` to detach automatically native threads on exit for Android (pull #243)
,src/main/java/org/bytedeco/javacpp/Loader.java,b53117a35992ef35c71e20c274d3e77e1492288a,Samuel Audet,2018-07-05T04:57:19Z,samuel.audet@gmail.com,Samuel Audet,2018-07-05T04:57:19Z,samuel.audet@gmail.com,11,6,5, * Fix issues with anonymous classes by calling `getEnclosingClass()` instead of `getDeclaringClass()`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,b53117a35992ef35c71e20c274d3e77e1492288a,Samuel Audet,2018-07-05T04:57:19Z,samuel.audet@gmail.com,Samuel Audet,2018-07-05T04:57:19Z,samuel.audet@gmail.com,11,6,5, * Fix issues with anonymous classes by calling `getEnclosingClass()` instead of `getDeclaringClass()`
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,454f1ae7e676f431eccd6d7df63205ddc2f94e18,Samuel Audet,2018-06-20T07:55:41Z,samuel.audet@gmail.com,Samuel Audet,2018-06-20T07:55:41Z,samuel.audet@gmail.com,140,139,1," * Add `android-arm-clang.properties`, `android-arm64-clang.properties`, `android-x86-clang.properties` and `android-x86_64-clang.properties`"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,454f1ae7e676f431eccd6d7df63205ddc2f94e18,Samuel Audet,2018-06-20T07:55:41Z,samuel.audet@gmail.com,Samuel Audet,2018-06-20T07:55:41Z,samuel.audet@gmail.com,140,139,1," * Add `android-arm-clang.properties`, `android-arm64-clang.properties`, `android-x86-clang.properties` and `android-x86_64-clang.properties`"
,src/main/java/org/bytedeco/javacpp/Loader.java,a90fa526da6b3a8388aaa5a868afef510230bc60,Samuel Audet,2018-06-19T13:34:44Z,samuel.audet@gmail.com,Samuel Audet,2018-06-19T13:34:44Z,samuel.audet@gmail.com,3,2,1, * Search in `linkpath` before `preloadpath` to avoid copying or loading unwanted libraries
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,9b5d85d9996ece51533a7e23b1ac66e0696a8811,Samuel Audet,2018-06-17T12:12:33Z,samuel.audet@gmail.com,Samuel Audet,2018-06-17T12:12:33Z,samuel.audet@gmail.com,7,4,3, * Fix `Builder` not bundling libraries containing a `#` fragment only useful at load time
,src/main/java/org/bytedeco/javacpp/tools/Context.java,cc3325732209d75779cfc3d05b342137a4f8b473,Samuel Audet,2018-06-15T05:23:55Z,samuel.audet@gmail.com,Samuel Audet,2018-06-15T05:23:55Z,samuel.audet@gmail.com,50,37,13," * Make `Parser` take into account implicit constructors even when inheriting some with `using` declarations
 * Pick up `Parser` translation of enum and macro expressions from `Info.javaNames`
 * Let `Parser` define `Info.pointerTypes` also for partially specialized templates with default arguments"
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,cc3325732209d75779cfc3d05b342137a4f8b473,Samuel Audet,2018-06-15T05:23:55Z,samuel.audet@gmail.com,Samuel Audet,2018-06-15T05:23:55Z,samuel.audet@gmail.com,50,37,13," * Make `Parser` take into account implicit constructors even when inheriting some with `using` declarations
 * Pick up `Parser` translation of enum and macro expressions from `Info.javaNames`
 * Let `Parser` define `Info.pointerTypes` also for partially specialized templates with default arguments"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,cc3325732209d75779cfc3d05b342137a4f8b473,Samuel Audet,2018-06-15T05:23:55Z,samuel.audet@gmail.com,Samuel Audet,2018-06-15T05:23:55Z,samuel.audet@gmail.com,50,37,13," * Make `Parser` take into account implicit constructors even when inheriting some with `using` declarations
 * Pick up `Parser` translation of enum and macro expressions from `Info.javaNames`
 * Let `Parser` define `Info.pointerTypes` also for partially specialized templates with default arguments"
,src/main/java/org/bytedeco/javacpp/tools/TemplateMap.java,cc3325732209d75779cfc3d05b342137a4f8b473,Samuel Audet,2018-06-15T05:23:55Z,samuel.audet@gmail.com,Samuel Audet,2018-06-15T05:23:55Z,samuel.audet@gmail.com,50,37,13," * Make `Parser` take into account implicit constructors even when inheriting some with `using` declarations
 * Pick up `Parser` translation of enum and macro expressions from `Info.javaNames`
 * Let `Parser` define `Info.pointerTypes` also for partially specialized templates with default arguments"
,src/main/java/org/bytedeco/javacpp/Pointer.java,e88ae488b66872fbeac5526d93a7e30be3747429,Samuel Audet,2018-06-11T02:12:34Z,samuel.audet@gmail.com,Samuel Audet,2018-06-11T02:12:34Z,samuel.audet@gmail.com,72,40,32, * Tweak `Pointer.formatBytes()` to increase the number of digits returned (issue #240)
,src/test/java/org/bytedeco/javacpp/PointerTest.java,e88ae488b66872fbeac5526d93a7e30be3747429,Samuel Audet,2018-06-11T02:12:34Z,samuel.audet@gmail.com,Samuel Audet,2018-06-11T02:12:34Z,samuel.audet@gmail.com,72,40,32, * Tweak `Pointer.formatBytes()` to increase the number of digits returned (issue #240)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,8d385ea964e52ef30d56196f1274eb0260ba8919,Samuel Audet,2018-06-10T23:00:33Z,samuel.audet@gmail.com,Samuel Audet,2018-06-11T01:33:33Z,samuel.audet@gmail.com,20,17,3, * Enhance `InfoMap` and `StringAdapter` with default mappings and casts for `std::wstring`
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,8d385ea964e52ef30d56196f1274eb0260ba8919,Samuel Audet,2018-06-10T23:00:33Z,samuel.audet@gmail.com,Samuel Audet,2018-06-11T01:33:33Z,samuel.audet@gmail.com,20,17,3, * Enhance `InfoMap` and `StringAdapter` with default mappings and casts for `std::wstring`
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,8d385ea964e52ef30d56196f1274eb0260ba8919,Samuel Audet,2018-06-10T23:00:33Z,samuel.audet@gmail.com,Samuel Audet,2018-06-11T01:33:33Z,samuel.audet@gmail.com,20,17,3, * Enhance `InfoMap` and `StringAdapter` with default mappings and casts for `std::wstring`
,src/main/java/org/bytedeco/javacpp/annotation/StdString.java,d07eb39ce1faebab3ade0ab1d388dee59663e4c3,Samuel Audet,2018-06-10T15:29:10Z,samuel.audet@gmail.com,Samuel Audet,2018-06-10T15:29:10Z,samuel.audet@gmail.com,118,94,24, * Templatize `StringAdapter` to allow other character types like `wchar_t` and add corresponding `@StdWString` annotation
,src/main/java/org/bytedeco/javacpp/annotation/StdWString.java,d07eb39ce1faebab3ade0ab1d388dee59663e4c3,Samuel Audet,2018-06-10T15:29:10Z,samuel.audet@gmail.com,Samuel Audet,2018-06-10T15:29:10Z,samuel.audet@gmail.com,118,94,24, * Templatize `StringAdapter` to allow other character types like `wchar_t` and add corresponding `@StdWString` annotation
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,d07eb39ce1faebab3ade0ab1d388dee59663e4c3,Samuel Audet,2018-06-10T15:29:10Z,samuel.audet@gmail.com,Samuel Audet,2018-06-10T15:29:10Z,samuel.audet@gmail.com,118,94,24, * Templatize `StringAdapter` to allow other character types like `wchar_t` and add corresponding `@StdWString` annotation
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,d07eb39ce1faebab3ade0ab1d388dee59663e4c3,Samuel Audet,2018-06-10T15:29:10Z,samuel.audet@gmail.com,Samuel Audet,2018-06-10T15:29:10Z,samuel.audet@gmail.com,118,94,24, * Templatize `StringAdapter` to allow other character types like `wchar_t` and add corresponding `@StdWString` annotation
,src/test/resources/org/bytedeco/javacpp/AdapterTest.h,d07eb39ce1faebab3ade0ab1d388dee59663e4c3,Samuel Audet,2018-06-10T15:29:10Z,samuel.audet@gmail.com,Samuel Audet,2018-06-10T15:29:10Z,samuel.audet@gmail.com,118,94,24, * Templatize `StringAdapter` to allow other character types like `wchar_t` and add corresponding `@StdWString` annotation
,src/main/java/org/bytedeco/javacpp/Loader.java,4fb67229f8230f45f9a7d7fd6c17cb8dad6f26c8,Samuel Audet,2018-06-07T06:57:30Z,samuel.audet@gmail.com,Samuel Audet,2018-06-07T06:57:30Z,samuel.audet@gmail.com,5,3,2, * Do not fall back on `System.loadLibrary()` when we are renaming libraries (issue deeplearning4j/deeplearning4j#5503)
,src/main/java/org/bytedeco/javacpp/Loader.java,cd736e9e21e29425a29fb22dcb31597b6d3a73d9,Samuel Audet,2018-06-05T07:39:27Z,samuel.audet@gmail.com,Samuel Audet,2018-06-05T07:39:27Z,samuel.audet@gmail.com,7,5,2," * Prevent `Loader` from creating symbolic links to rename libraries, which does not always work"
,src/main/java/org/bytedeco/javacpp/Pointer.java,7a90061d996e80197274564b573b92c39a51e311,Samuel Audet,2018-06-02T09:03:39Z,samuel.audet@gmail.com,Samuel Audet,2018-06-02T09:03:39Z,samuel.audet@gmail.com,22,13,9," * Fix memory leak that occurs with ""org.bytedeco.javacpp.nopointergc"" (issue #239)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,e0567736395108300756bd2b9f293d602ca009fe,Samuel Audet,2018-05-30T04:16:21Z,samuel.audet@gmail.com,Samuel Audet,2018-05-30T04:16:21Z,samuel.audet@gmail.com,6,5,1, * Make `Generator` use `GENERIC_EXCEPTION_TOSTRING` macro on `GENERIC_EXCEPTION_CLASS` instead of the default `what()`
,src/main/java/org/bytedeco/javacpp/Loader.java,4be2d02204ae7ccc02462bff9d5ac55bcce8a12b,Samuel Audet,2018-05-26T08:40:51Z,samuel.audet@gmail.com,Samuel Audet,2018-05-26T08:40:51Z,samuel.audet@gmail.com,2,1,1,Fix potential `NullPointerException` in `Loader`
,src/main/java/org/bytedeco/javacpp/Loader.java,f1f21ae38aba00972992aa03b77fed763377ba77,Samuel Audet,2018-05-24T11:58:15Z,samuel.audet@gmail.com,Samuel Audet,2018-05-24T11:58:15Z,samuel.audet@gmail.com,8,5,3," * Fall back on Android-friendly `System.loadLibrary()` in `Loader.load()` instead of ""java.library.path"" (issue bytedeco/javacv#970)"
,src/test/resources/org/bytedeco/javacpp/EnumTest.h,ba5f7d48a67f1443031a40a5ac69b226427d953c,Samuel Audet,2018-05-18T07:26:49Z,samuel.audet@gmail.com,Samuel Audet,2018-05-18T07:26:49Z,samuel.audet@gmail.com,10,5,5,Fix `EnumTest` on Windows (issue #238)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,d20de9bc50eb05067b1a1436970fac12edfabce3,Samuel Audet,2018-05-16T11:05:30Z,samuel.audet@gmail.com,Samuel Audet,2018-05-16T11:05:30Z,samuel.audet@gmail.com,5,4,1, * Add to Java enums an `intern()` method and use it in `toString()` to return non-null strings
,src/main/java/org/bytedeco/javacpp/Pointer.java,a8179ee7d19c096853d52c2eaa7938c2148e69f2,Samuel Audet,2018-05-16T07:09:21Z,samuel.audet@gmail.com,Samuel Audet,2018-05-16T07:37:00Z,samuel.audet@gmail.com,7,6,1,Add `PointerScope.getInnerScope()` that can be called from any context
,src/main/java/org/bytedeco/javacpp/PointerScope.java,a8179ee7d19c096853d52c2eaa7938c2148e69f2,Samuel Audet,2018-05-16T07:09:21Z,samuel.audet@gmail.com,Samuel Audet,2018-05-16T07:37:00Z,samuel.audet@gmail.com,7,6,1,Add `PointerScope.getInnerScope()` that can be called from any context
,src/main/java/org/bytedeco/javacpp/Pointer.java,d98d323778c4b73865d19c7fc15c8380b130f5e0,Samuel Audet,2018-05-10T13:32:59Z,samuel.audet@gmail.com,Samuel Audet,2018-05-10T13:32:59Z,samuel.audet@gmail.com,163,162,1, * Add `PointerScope` to manage more easily the resources of a group of `Pointer` objects
,src/main/java/org/bytedeco/javacpp/PointerScope.java,d98d323778c4b73865d19c7fc15c8380b130f5e0,Samuel Audet,2018-05-10T13:32:59Z,samuel.audet@gmail.com,Samuel Audet,2018-05-10T13:32:59Z,samuel.audet@gmail.com,163,162,1, * Add `PointerScope` to manage more easily the resources of a group of `Pointer` objects
,src/test/java/org/bytedeco/javacpp/PointerTest.java,d98d323778c4b73865d19c7fc15c8380b130f5e0,Samuel Audet,2018-05-10T13:32:59Z,samuel.audet@gmail.com,Samuel Audet,2018-05-10T13:32:59Z,samuel.audet@gmail.com,163,162,1, * Add `PointerScope` to manage more easily the resources of a group of `Pointer` objects
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,380feb2a92badef083d0000eb3db6a2a264a620c,Samuel Audet,2018-04-28T08:35:51Z,samuel.audet@gmail.com,Samuel Audet,2018-04-28T08:35:51Z,samuel.audet@gmail.com,7,5,2, * Fix `Parser` failing on constructors of class templates
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,97d7ea6c08c6056a2ed715c38d3c67de50b24ce7,Samuel Audet,2018-04-20T00:27:10Z,samuel.audet@gmail.com,Samuel Audet,2018-04-20T00:27:10Z,samuel.audet@gmail.com,7,5,2, * Fix `Parser` failing on `const void*&` or similar function arguments
,src/main/java/org/bytedeco/javacpp/tools/Info.java,d9077e6353ffecbe2f70fdb5d8358400e338b7cc,Samuel Audet,2018-04-18T05:15:52Z,samuel.audet@gmail.com,Samuel Audet,2018-04-18T05:15:52Z,samuel.audet@gmail.com,11,8,3, * Add `Info.skipDefaults` to have the `Parser` ignore default function arguments and prevent method overloading
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,d9077e6353ffecbe2f70fdb5d8358400e338b7cc,Samuel Audet,2018-04-18T05:15:52Z,samuel.audet@gmail.com,Samuel Audet,2018-04-18T05:15:52Z,samuel.audet@gmail.com,11,8,3, * Add `Info.skipDefaults` to have the `Parser` ignore default function arguments and prevent method overloading
,src/main/java/org/bytedeco/javacpp/Loader.java,135190039020e6d0b2f1f592e63788358cfcac23,Samuel Audet,2018-04-17T04:36:31Z,samuel.audet@gmail.com,Samuel Audet,2018-04-17T04:36:31Z,samuel.audet@gmail.com,9,5,4, * Accelerate copy and extraction of resources by using larger buffers for file operations
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,135190039020e6d0b2f1f592e63788358cfcac23,Samuel Audet,2018-04-17T04:36:31Z,samuel.audet@gmail.com,Samuel Audet,2018-04-17T04:36:31Z,samuel.audet@gmail.com,9,5,4, * Accelerate copy and extraction of resources by using larger buffers for file operations
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,be49bde573801e2899ce8149b434c2ccc4af317a,Samuel Audet,2018-04-12T23:17:18Z,samuel.audet@gmail.com,Samuel Audet,2018-04-12T23:17:18Z,samuel.audet@gmail.com,3,2,1,Fix logic of last commit surrounding function arguments and qualified names
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,609e65ab2a48cd487d61f8278bea456211277488,Samuel Audet,2018-04-12T14:11:39Z,samuel.audet@gmail.com,Samuel Audet,2018-04-12T14:11:39Z,samuel.audet@gmail.com,18,11,7, * Fix `Parser` incorrectly referring to function arguments with impossibly qualified names
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,e5c349d11a3892461425de215aa2e998331f1f26,Samuel Audet,2018-04-04T13:45:00Z,samuel.audet@gmail.com,Samuel Audet,2018-04-04T13:45:00Z,samuel.audet@gmail.com,23,15,8," * Allow using `new Info().enumerate()` to map all C++ `enum` to Java `enum` types by default
 * Fix `Parser` issues surrounding enum classes, anonymous namespaces, and pure virtual classes"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,e5c349d11a3892461425de215aa2e998331f1f26,Samuel Audet,2018-04-04T13:45:00Z,samuel.audet@gmail.com,Samuel Audet,2018-04-04T13:45:00Z,samuel.audet@gmail.com,23,15,8," * Allow using `new Info().enumerate()` to map all C++ `enum` to Java `enum` types by default
 * Fix `Parser` issues surrounding enum classes, anonymous namespaces, and pure virtual classes"
,src/main/java/org/bytedeco/javacpp/Pointer.java,41289a7ef4965a145f4cc182964f55ffac633997,Samuel Audet,2018-04-01T00:24:08Z,samuel.audet@gmail.com,Samuel Audet,2018-04-01T00:24:08Z,samuel.audet@gmail.com,25,18,7, * Avoid `synchronized` on first call to `physicalBytes()` in `Pointer.deallocator()` to reduce contention (pull #232)
,src/test/java/org/bytedeco/javacpp/PointerTest.java,41289a7ef4965a145f4cc182964f55ffac633997,Samuel Audet,2018-04-01T00:24:08Z,samuel.audet@gmail.com,Samuel Audet,2018-04-01T00:24:08Z,samuel.audet@gmail.com,25,18,7, * Avoid `synchronized` on first call to `physicalBytes()` in `Pointer.deallocator()` to reduce contention (pull #232)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,1367b8191c474bc78a647ee38f5c836d55c8410b,Samuel Audet,2018-03-27T04:04:56Z,samuel.audet@gmail.com,Samuel Audet,2018-03-27T04:04:56Z,samuel.audet@gmail.com,84,55,29,Reference new enum types only when needed to maintain backward compatibility
,src/main/java/org/bytedeco/javacpp/Loader.java,8736b172af26b5fc68dfbcaa2e11820660bd998b,Samuel Audet,2018-03-26T07:58:09Z,samuel.audet@gmail.com,Samuel Audet,2018-03-26T07:58:09Z,samuel.audet@gmail.com,65,53,12, * Enhance `Loader.createLibraryLink()` by allowing to create symbolic links in other directories
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,8736b172af26b5fc68dfbcaa2e11820660bd998b,Samuel Audet,2018-03-26T07:58:09Z,samuel.audet@gmail.com,Samuel Audet,2018-03-26T07:58:09Z,samuel.audet@gmail.com,65,53,12, * Enhance `Loader.createLibraryLink()` by allowing to create symbolic links in other directories
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,c3b9dc2e9967710f70aa4daceef3cc9d22fa4cdd,Samuel Audet,2018-03-23T09:22:21Z,samuel.audet@gmail.com,Samuel Audet,2018-03-23T09:22:21Z,samuel.audet@gmail.com,9,7,2, * Fix `Parser` failing on `enum` declarations where the first line is a macro (issue #230)
,src/main/java/org/bytedeco/javacpp/Pointer.java,273d4bca636530052d7e7b2c7c164cac8c7274af,Samuel Audet,2018-03-23T02:33:13Z,samuel.audet@gmail.com,Samuel Audet,2018-03-23T02:33:13Z,samuel.audet@gmail.com,6,3,3, * Make call to `Pointer.physicalBytes()` thread safe and remove lock (issue #231)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,273d4bca636530052d7e7b2c7c164cac8c7274af,Samuel Audet,2018-03-23T02:33:13Z,samuel.audet@gmail.com,Samuel Audet,2018-03-23T02:33:13Z,samuel.audet@gmail.com,6,3,3, * Make call to `Pointer.physicalBytes()` thread safe and remove lock (issue #231)
,src/test/java/org/bytedeco/javacpp/EnumTest.java,23389292924b4329f76874a4e4e952b4cd3cb3e5,Samuel Audet,2018-03-22T14:28:57Z,samuel.audet@gmail.com,Samuel Audet,2018-03-22T14:28:57Z,samuel.audet@gmail.com,2,1,1,Make sure to use C++11 with `EnumTest`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,8b9fc2fd0285879276ee4b622351dbee30b011e5,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,371,325,46, * Add `Info.enumerate` to let `Parser` map C++ enum classes to Java enum types (issue #108)
,src/main/java/org/bytedeco/javacpp/tools/Info.java,8b9fc2fd0285879276ee4b622351dbee30b011e5,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,371,325,46, * Add `Info.enumerate` to let `Parser` map C++ enum classes to Java enum types (issue #108)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,8b9fc2fd0285879276ee4b622351dbee30b011e5,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,371,325,46, * Add `Info.enumerate` to let `Parser` map C++ enum classes to Java enum types (issue #108)
,src/test/java/org/bytedeco/javacpp/EnumTest.java,8b9fc2fd0285879276ee4b622351dbee30b011e5,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,371,325,46, * Add `Info.enumerate` to let `Parser` map C++ enum classes to Java enum types (issue #108)
,src/test/java/org/bytedeco/javacpp/PointerTest.java,8b9fc2fd0285879276ee4b622351dbee30b011e5,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,371,325,46, * Add `Info.enumerate` to let `Parser` map C++ enum classes to Java enum types (issue #108)
,src/test/resources/org/bytedeco/javacpp/EnumTest.h,8b9fc2fd0285879276ee4b622351dbee30b011e5,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,Samuel Audet,2018-03-22T11:00:52Z,samuel.audet@gmail.com,371,325,46, * Add `Info.enumerate` to let `Parser` map C++ enum classes to Java enum types (issue #108)
,src/main/java/org/bytedeco/javacpp/Loader.java,aea25af1df233ef448511995abb3f5029a9bd17a,Samuel Audet,2018-03-19T08:14:02Z,samuel.audet@gmail.com,Samuel Audet,2018-03-19T08:14:02Z,samuel.audet@gmail.com,37,16,21, * Prevent `Loader` from loading twice copies of the same DLL (issue deeplearning4j/deeplearning4j#4776)
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,24eee5f2db9843c663f5d05fa3ec587900b9f0e6,Samuel Audet,2018-03-15T12:14:57Z,samuel.audet@gmail.com,Samuel Audet,2018-03-15T12:14:57Z,samuel.audet@gmail.com,11,10,1, * Add a `BuildMojo.targetDirectory` parameter to set a directory containing Java files generated by `buildCommand`
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,d103d98f0bf4586ba25d379be0629a364a3fb157,Samuel Audet,2018-03-10T08:47:35Z,samuel.audet@gmail.com,Samuel Audet,2018-03-10T08:47:35Z,samuel.audet@gmail.com,14,9,5, * Fix missing `jnijavacpp.cpp` when processing classes from different packages (issue #228)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,ae084eb30a7186c3f3102cbd56ea41c648e99f48,Samuel Audet,2018-03-09T14:30:53Z,samuel.audet@gmail.com,Samuel Audet,2018-03-09T14:30:53Z,samuel.audet@gmail.com,15,15,0,Fix `Parser` failing on `enum` declarations with attributes
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,5dd74d705594d50a8f21389add36f9848e51cc44,Samuel Audet,2018-03-08T04:00:27Z,samuel.audet@gmail.com,Samuel Audet,2018-03-08T04:00:27Z,samuel.audet@gmail.com,4,3,1,Disable call to `dl_iterate_phdr()` not available on `android-arm`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,5efcce972a9fac55c1fbe3f35c1f38336e5eff56,Samuel Audet,2018-03-07T15:23:21Z,samuel.audet@gmail.com,Samuel Audet,2018-03-07T15:23:21Z,samuel.audet@gmail.com,42,41,1, * Enhance `Loader.addressof()` by making it try harder to find symbols on Linux and Mac OS X
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,2549d4bccc8eae5b87a45d744b97f005eec791bf,Samuel Audet,2018-03-05T03:00:54Z,samuel.audet@gmail.com,Samuel Audet,2018-03-05T03:00:54Z,samuel.audet@gmail.com,33,31,2, * Add `get()` and `toString()` methods to basic containers defined in `Parser`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,77a1028e376846f2fb5feab00a8dec96ca16aec2,Samuel Audet,2018-03-03T14:06:11Z,samuel.audet@gmail.com,Samuel Audet,2018-03-03T14:06:11Z,samuel.audet@gmail.com,12,10,2, * Fix `Parser` ignoring `Info.define` and other information for macros actually defined
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,77a1028e376846f2fb5feab00a8dec96ca16aec2,Samuel Audet,2018-03-03T14:06:11Z,samuel.audet@gmail.com,Samuel Audet,2018-03-03T14:06:11Z,samuel.audet@gmail.com,12,10,2, * Fix `Parser` ignoring `Info.define` and other information for macros actually defined
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,00a7f6ad0387af49a6ef0c12bf8774299ff4abbe,Samuel Audet,2018-03-03T02:39:07Z,samuel.audet@gmail.com,Samuel Audet,2018-03-03T02:39:07Z,samuel.audet@gmail.com,36,25,11, * Fix `SharedPtrAdapter` and `UniquePtrAdapter` failing to take ownership of temporary objects
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,00a7f6ad0387af49a6ef0c12bf8774299ff4abbe,Samuel Audet,2018-03-03T02:39:07Z,samuel.audet@gmail.com,Samuel Audet,2018-03-03T02:39:07Z,samuel.audet@gmail.com,36,25,11, * Fix `SharedPtrAdapter` and `UniquePtrAdapter` failing to take ownership of temporary objects
,src/test/resources/org/bytedeco/javacpp/AdapterTest.h,00a7f6ad0387af49a6ef0c12bf8774299ff4abbe,Samuel Audet,2018-03-03T02:39:07Z,samuel.audet@gmail.com,Samuel Audet,2018-03-03T02:39:07Z,samuel.audet@gmail.com,36,25,11, * Fix `SharedPtrAdapter` and `UniquePtrAdapter` failing to take ownership of temporary objects
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,65c41d94a20bacf30f69d1ab4637f1790adc8506,Samuel Audet,2018-02-28T13:56:22Z,samuel.audet@gmail.com,Samuel Audet,2018-02-28T13:56:22Z,samuel.audet@gmail.com,38,30,8,Fix various small issues with `Parser`
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,65c41d94a20bacf30f69d1ab4637f1790adc8506,Samuel Audet,2018-02-28T13:56:22Z,samuel.audet@gmail.com,Samuel Audet,2018-02-28T13:56:22Z,samuel.audet@gmail.com,38,30,8,Fix various small issues with `Parser`
,src/main/java/org/bytedeco/javacpp/Loader.java,7b84d8366e9a502f02b5271a05ac72bb620f81d8,Samuel Audet,2018-02-21T14:18:14Z,samuel.audet@gmail.com,Samuel Audet,2018-02-21T14:18:14Z,samuel.audet@gmail.com,39,31,8," * Add ""org.bytedeco.javacpp.pathsfirst"" system property to let users search ""java.library.path"", etc before the class path"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,7b84d8366e9a502f02b5271a05ac72bb620f81d8,Samuel Audet,2018-02-21T14:18:14Z,samuel.audet@gmail.com,Samuel Audet,2018-02-21T14:18:14Z,samuel.audet@gmail.com,39,31,8," * Add ""org.bytedeco.javacpp.pathsfirst"" system property to let users search ""java.library.path"", etc before the class path"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,594b62f67d4e7a442eec690ed1cece7b6e18326f,Samuel Audet,2018-02-20T13:42:33Z,samuel.audet@gmail.com,Samuel Audet,2018-02-20T13:42:33Z,samuel.audet@gmail.com,12,8,4," * Add `Parser` support for `_Bool`, `_Complex`, `_Imaginary`, `complex`, `imaginary` types from C99"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,f5d9fede11899f70f48ba5e69bfa77698135b04e,Samuel Audet,2018-02-16T04:01:33Z,samuel.audet@gmail.com,Samuel Audet,2018-02-16T04:01:33Z,samuel.audet@gmail.com,17,13,4, * Fix `Generator` incorrectly splitting type names for template arguments containing function types
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,197d7e206cbc5379138eb612e7ddc9dfeb8bb8ec,Samuel Audet,2018-02-15T14:33:28Z,samuel.audet@gmail.com,Samuel Audet,2018-02-15T14:33:28Z,samuel.audet@gmail.com,8,5,3, * Fix `NullPointerException` in `Builder` when copying resources for static libraries
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,e3f9faa786173614d7d54f274b2867577bf1e0e8,Samuel Audet,2018-02-14T03:49:18Z,samuel.audet@gmail.com,Samuel Audet,2018-02-14T03:49:18Z,samuel.audet@gmail.com,7,6,1, * Let `Generator` pick up `@NoException` annotations from super classes as well
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,31419c71e117c154b3b67662199f241c96877c0e,Samuel Audet,2018-02-11T11:55:49Z,samuel.audet@gmail.com,Samuel Audet,2018-02-11T11:55:49Z,samuel.audet@gmail.com,47,29,18, * Make it possible to define read-only containers with `Parser` by prepending `const ` (issue #223)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,31419c71e117c154b3b67662199f241c96877c0e,Samuel Audet,2018-02-11T11:55:49Z,samuel.audet@gmail.com,Samuel Audet,2018-02-11T11:55:49Z,samuel.audet@gmail.com,47,29,18, * Make it possible to define read-only containers with `Parser` by prepending `const ` (issue #223)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,b6fa91a2037cd85ec6afefda86fbcdc66d111235,Samuel Audet,2018-02-09T15:21:23Z,samuel.audet@gmail.com,Samuel Audet,2018-02-09T15:21:23Z,samuel.audet@gmail.com,8,7,1, * Fix `Parser` failure of variable or function declarations on names starting with `::`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,021a36d6ad1bca985c4186ae11b109089339d6c2,Samuel Audet,2018-02-09T05:23:26Z,samuel.audet@gmail.com,Samuel Audet,2018-02-09T05:23:26Z,samuel.audet@gmail.com,3,3,0,Handle exceptions thrown in code generated for `@Index(function = ...)`
,src/main/java/org/bytedeco/javacpp/annotation/Index.java,5c99b302805b95350b672ffded1cb382ebfbef45,Samuel Audet,2018-02-08T09:20:20Z,samuel.audet@gmail.com,Samuel Audet,2018-02-08T09:20:20Z,samuel.audet@gmail.com,43,28,15, * Access elements of basic containers defined in `Parser` with `at()` instead of `operator[]` (issue #223)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,5c99b302805b95350b672ffded1cb382ebfbef45,Samuel Audet,2018-02-08T09:20:20Z,samuel.audet@gmail.com,Samuel Audet,2018-02-08T09:20:20Z,samuel.audet@gmail.com,43,28,15, * Access elements of basic containers defined in `Parser` with `at()` instead of `operator[]` (issue #223)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,5c99b302805b95350b672ffded1cb382ebfbef45,Samuel Audet,2018-02-08T09:20:20Z,samuel.audet@gmail.com,Samuel Audet,2018-02-08T09:20:20Z,samuel.audet@gmail.com,43,28,15, * Access elements of basic containers defined in `Parser` with `at()` instead of `operator[]` (issue #223)
,src/main/java/org/bytedeco/javacpp/annotation/Const.java,c97570e8baecac6d4a99656e318471d18f123c36,louxiu,2018-02-06T14:00:37Z,lou.0211@gmail.com,Samuel Audet,2018-02-06T14:00:37Z,samuel.audet@gmail.com,89,79,10, * Add third element to `@Const` annotation to support `virtual const` functions (pull #224)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,c97570e8baecac6d4a99656e318471d18f123c36,louxiu,2018-02-06T14:00:37Z,lou.0211@gmail.com,Samuel Audet,2018-02-06T14:00:37Z,samuel.audet@gmail.com,89,79,10, * Add third element to `@Const` annotation to support `virtual const` functions (pull #224)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,c97570e8baecac6d4a99656e318471d18f123c36,louxiu,2018-02-06T14:00:37Z,lou.0211@gmail.com,Samuel Audet,2018-02-06T14:00:37Z,samuel.audet@gmail.com,89,79,10, * Add third element to `@Const` annotation to support `virtual const` functions (pull #224)
,src/main/java/org/bytedeco/javacpp/Loader.java,fe2da1a35f88327b38bbd795a57a0d8162664960,Samuel Audet,2018-02-06T03:56:59Z,samuel.audet@gmail.com,Samuel Audet,2018-02-06T03:56:59Z,samuel.audet@gmail.com,8,6,2, * Create more symbolic links to libraries preloaded by `Loader` to satisfy libraries like MKL
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,6b7bb07a83aa62d155cdeda20a20d9910370f7fa,Samuel Audet,2018-02-06T03:10:07Z,samuel.audet@gmail.com,Samuel Audet,2018-02-06T03:10:07Z,samuel.audet@gmail.com,38,30,8, * Work around in `Builder` the inability to pass empty arguments on Windows
,src/main/java/org/bytedeco/javacpp/Loader.java,3d182d51e3ac5697bc7548c9476200ad366a896e,Alex Black,2018-02-01T02:00:04Z,blacka101@gmail.com,Samuel Audet,2018-02-01T02:00:04Z,samuel.audet@gmail.com,57,40,17, * Catch more exceptions that can occur in `Loader` when caching resources (pull #226)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,7cba4d67ef7c77f7118b28e62cf02fc2c61d7150,Samuel Audet,2018-01-29T04:30:41Z,samuel.audet@gmail.com,Samuel Audet,2018-01-29T04:31:48Z,samuel.audet@gmail.com,3,2,1, * Fix `Parser` failing on variables with direct list initialization `{ ... }` (issue #223)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,83570ae1597ca1ec8aa38c26b6c6aa364888559a,Samuel Audet,2018-01-23T05:31:55Z,samuel.audet@gmail.com,Samuel Audet,2018-01-23T07:37:13Z,samuel.audet@gmail.com,44,24,20, * Allow `Parser` to map and cast function pointers to `Pointer`
,src/main/java/org/bytedeco/javacpp/Loader.java,1ffbf360743ff5319e4f5777ab46f24366fceb18,Samuel Audet,2018-01-14T14:14:05Z,samuel.audet@gmail.com,Samuel Audet,2018-01-14T14:14:05Z,samuel.audet@gmail.com,20,19,1, * Output to log all commands executed for `Builder.buildCommand` via `ProcessBuilder`
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,1ffbf360743ff5319e4f5777ab46f24366fceb18,Samuel Audet,2018-01-14T14:14:05Z,samuel.audet@gmail.com,Samuel Audet,2018-01-14T14:14:05Z,samuel.audet@gmail.com,20,19,1, * Output to log all commands executed for `Builder.buildCommand` via `ProcessBuilder`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,be9eca52c70cdb5c7d2c962784df170e7f62ce48,Samuel Audet,2018-01-09T03:08:39Z,samuel.audet@gmail.com,Samuel Audet,2018-01-09T03:08:39Z,samuel.audet@gmail.com,6,5,1," * Fix `Parser` not producing `@Cast` annotations for types with `Info.cast()` on `operator()`, as well as failing on `using operator` statements"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,a5e3350a0c2faf9b6a9fe61bbab50b09d640df6e,Samuel Audet,2018-01-08T14:03:45Z,samuel.audet@gmail.com,Samuel Audet,2018-01-08T14:03:45Z,samuel.audet@gmail.com,18,13,5," * Fix `Parser` issue with multiple container types (`std::vector`, etc) getting mixed up when mapped to adapters (`@StdVector`, etc)

Also silence useless attribute warnings when compiling for Android"
,src/main/java/org/bytedeco/javacpp/Loader.java,fa16a255c2d87974c1c7cd672aceff9efdd04eae,Samuel Audet,2017-12-31T10:27:21Z,samuel.audet@gmail.com,Samuel Audet,2017-12-31T10:29:22Z,samuel.audet@gmail.com,15,10,5," * Fix ""Negative Buffer Capacity"" errors happening in subclasses on `Pointer.asBuffer()` (issue deeplearning4j/deeplearning4j#4061)"
,src/main/java/org/bytedeco/javacpp/Pointer.java,fa16a255c2d87974c1c7cd672aceff9efdd04eae,Samuel Audet,2017-12-31T10:27:21Z,samuel.audet@gmail.com,Samuel Audet,2017-12-31T10:29:22Z,samuel.audet@gmail.com,15,10,5," * Fix ""Negative Buffer Capacity"" errors happening in subclasses on `Pointer.asBuffer()` (issue deeplearning4j/deeplearning4j#4061)"
,src/main/java/org/bytedeco/javacpp/Loader.java,4f01ca06da9a2aee895fb24be3f34e2a62d974e5,Samuel Audet,2017-12-31T01:59:55Z,samuel.audet@gmail.com,Samuel Audet,2017-12-31T01:59:55Z,samuel.audet@gmail.com,208,111,97," * Prevent `JNI_OnLoad()` from failing when `Loader.putMemberOffset()` cannot find a class
 * Throw clear error message when `Loader.load()` gets called on a class not supporting current platform"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,4f01ca06da9a2aee895fb24be3f34e2a62d974e5,Samuel Audet,2017-12-31T01:59:55Z,samuel.audet@gmail.com,Samuel Audet,2017-12-31T01:59:55Z,samuel.audet@gmail.com,208,111,97," * Prevent `JNI_OnLoad()` from failing when `Loader.putMemberOffset()` cannot find a class
 * Throw clear error message when `Loader.load()` gets called on a class not supporting current platform"
,src/main/java/org/bytedeco/javacpp/Loader.java,b1146e5f5f93a143d85c028d1aac0c3dba8f499c,Samuel Audet,2017-12-26T14:07:51Z,samuel.audet@gmail.com,Samuel Audet,2017-12-26T14:12:57Z,samuel.audet@gmail.com,37,35,2, * Create symbolic links to libraries preloaded by `Loader` as needed on Mac for renamed libraries
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,81f97d284ab1dc6f2bdcad3a9bd34fc171315a1e,Samuel Audet,2017-12-25T11:59:48Z,samuel.audet@gmail.com,Samuel Audet,2017-12-25T12:01:27Z,samuel.audet@gmail.com,10,8,2, * Make `Parser` honor `Info.skip()` for function pointers as well
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,4ab59bf97b475187c042b2311745bca90894080e,Samuel Audet,2017-12-24T03:57:30Z,samuel.audet@gmail.com,Samuel Audet,2017-12-24T03:59:23Z,samuel.audet@gmail.com,11,7,4, * Define `clear()` and `empty()` for resizable basic containers in `Parser`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,c3e75adbdfec0d09a6b1ca3af0b616ac437fbd78,Samuel Audet,2017-12-21T08:09:52Z,samuel.audet@gmail.com,Samuel Audet,2017-12-21T08:09:52Z,samuel.audet@gmail.com,9,7,2, * Fix `Generator` issues with `@ByPtrPtr` return of `String` or `Pointer` types (issue bytedeco/javacpp-presets#499)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,ac9c54e4d2400c5e2a3394b1b098406b0ed7427a,Samuel Audet,2017-12-20T14:29:08Z,samuel.audet@gmail.com,Samuel Audet,2017-12-21T08:09:32Z,samuel.audet@gmail.com,29,25,4, * Produce `pop_back()` and `push_back()` for relevant basic containers in `Parser` (issue bytedeco/javacv#659)
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,ebae3a343ba9927c8fc6d5f26275611e66263c2e,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,160,105,55,Refine support for `platform.extension` by moving it to platform properties
,src/main/java/org/bytedeco/javacpp/Loader.java,ebae3a343ba9927c8fc6d5f26275611e66263c2e,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,160,105,55,Refine support for `platform.extension` by moving it to platform properties
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,ebae3a343ba9927c8fc6d5f26275611e66263c2e,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,160,105,55,Refine support for `platform.extension` by moving it to platform properties
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,ebae3a343ba9927c8fc6d5f26275611e66263c2e,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,160,105,55,Refine support for `platform.extension` by moving it to platform properties
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,ebae3a343ba9927c8fc6d5f26275611e66263c2e,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,160,105,55,Refine support for `platform.extension` by moving it to platform properties
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,ebae3a343ba9927c8fc6d5f26275611e66263c2e,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,160,105,55,Refine support for `platform.extension` by moving it to platform properties
,src/test/java/org/bytedeco/javacpp/BuilderTest.java,ebae3a343ba9927c8fc6d5f26275611e66263c2e,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,Samuel Audet,2017-12-18T03:55:29Z,samuel.audet@gmail.com,160,105,55,Refine support for `platform.extension` by moving it to platform properties
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,b12117a9024f9bc00c938602ab28fc6be1ec4597,Samuel Audet,2017-12-14T11:14:46Z,samuel.audet@gmail.com,Samuel Audet,2017-12-14T11:14:46Z,samuel.audet@gmail.com,875,476,399, * Have `Builder` generate base JNI functions into `jnijavacpp.cpp` for better iOS support (issue #213)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,b12117a9024f9bc00c938602ab28fc6be1ec4597,Samuel Audet,2017-12-14T11:14:46Z,samuel.audet@gmail.com,Samuel Audet,2017-12-14T11:14:46Z,samuel.audet@gmail.com,875,476,399, * Have `Builder` generate base JNI functions into `jnijavacpp.cpp` for better iOS support (issue #213)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,d25d7e4b393620c54ba4b3a9b8f5c7be76343a54,Samuel Audet,2017-12-14T01:51:51Z,samuel.audet@gmail.com,Samuel Audet,2017-12-14T05:05:23Z,samuel.audet@gmail.com,15,13,2, * Output single value setters for containers in `Parser` to avoid surprises (issue #217)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,93009c8a3859cd0e03f465f862298ee6afcc35e2,Samuel Audet,2017-12-11T13:01:36Z,samuel.audet@gmail.com,Samuel Audet,2017-12-11T13:02:45Z,samuel.audet@gmail.com,84,65,19," * Add `Parser` support for C++11 `using` declarations inheriting constructors (issue bytedeco/javacpp-presets#491)
 * Fix compiler error when defining `std::set` or `std::unordered_set` with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/Type.java,93009c8a3859cd0e03f465f862298ee6afcc35e2,Samuel Audet,2017-12-11T13:01:36Z,samuel.audet@gmail.com,Samuel Audet,2017-12-11T13:02:45Z,samuel.audet@gmail.com,84,65,19," * Add `Parser` support for C++11 `using` declarations inheriting constructors (issue bytedeco/javacpp-presets#491)
 * Fix compiler error when defining `std::set` or `std::unordered_set` with `Parser`"
,src/main/java/org/bytedeco/javacpp/Loader.java,50bb3dacaa5c32b148b937d9df289b2ebc525227,Samuel Audet,2017-12-07T08:07:14Z,samuel.audet@gmail.com,Samuel Audet,2017-12-07T08:07:14Z,samuel.audet@gmail.com,24,15,9, * Make `Parser` take `Info.skip()` into account for enumerators as well
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,50bb3dacaa5c32b148b937d9df289b2ebc525227,Samuel Audet,2017-12-07T08:07:14Z,samuel.audet@gmail.com,Samuel Audet,2017-12-07T08:07:14Z,samuel.audet@gmail.com,24,15,9, * Make `Parser` take `Info.skip()` into account for enumerators as well
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,d8c9f123f9e26e48d60863bd566b7ac9d7fc8b94,Johan Vos,2017-12-06T13:33:58Z,johan@lodgon.com,Samuel Audet,2017-12-06T13:33:58Z,samuel.audet@gmail.com,59,59,0,"Add missing forward declaration for `JNI_OnLoad_libname()` (pull #212)

Also add `ios-arm64.properties` and `ios-x86_64.properties`"
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,86d1019abf8767efb176e90e315c99d110bc12c3,Samuel Audet,2017-12-04T08:09:45Z,samuel.audet@gmail.com,Samuel Audet,2017-12-04T08:09:45Z,samuel.audet@gmail.com,68,66,2," * Add `LoadEnabled` interface to allow classes to modify their `ClassProperties` at runtime

Also fix additional issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/LoadEnabled.java,86d1019abf8767efb176e90e315c99d110bc12c3,Samuel Audet,2017-12-04T08:09:45Z,samuel.audet@gmail.com,Samuel Audet,2017-12-04T08:09:45Z,samuel.audet@gmail.com,68,66,2," * Add `LoadEnabled` interface to allow classes to modify their `ClassProperties` at runtime

Also fix additional issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,86d1019abf8767efb176e90e315c99d110bc12c3,Samuel Audet,2017-12-04T08:09:45Z,samuel.audet@gmail.com,Samuel Audet,2017-12-04T08:09:45Z,samuel.audet@gmail.com,68,66,2," * Add `LoadEnabled` interface to allow classes to modify their `ClassProperties` at runtime

Also fix additional issues with `Parser`"
,src/test/java/org/bytedeco/javacpp/BuilderTest.java,86d1019abf8767efb176e90e315c99d110bc12c3,Samuel Audet,2017-12-04T08:09:45Z,samuel.audet@gmail.com,Samuel Audet,2017-12-04T08:09:45Z,samuel.audet@gmail.com,68,66,2," * Add `LoadEnabled` interface to allow classes to modify their `ClassProperties` at runtime

Also fix additional issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,79680934375a4844d64a026d9b02e58196915c7f,Samuel Audet,2017-11-27T05:16:00Z,samuel.audet@gmail.com,Samuel Audet,2017-11-27T05:16:00Z,samuel.audet@gmail.com,210,138,72," * Move `sizeof()` and `offsetof()` data to global variables to prevent `StackOverflowError` in `JNI_OnLoad()` (issue bytedeco/javacpp-presets#331)
 * Propagate within `Parser` type information from macros to other macros referencing them

Also fix a few more issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,79680934375a4844d64a026d9b02e58196915c7f,Samuel Audet,2017-11-27T05:16:00Z,samuel.audet@gmail.com,Samuel Audet,2017-11-27T05:16:00Z,samuel.audet@gmail.com,210,138,72," * Move `sizeof()` and `offsetof()` data to global variables to prevent `StackOverflowError` in `JNI_OnLoad()` (issue bytedeco/javacpp-presets#331)
 * Propagate within `Parser` type information from macros to other macros referencing them

Also fix a few more issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,79680934375a4844d64a026d9b02e58196915c7f,Samuel Audet,2017-11-27T05:16:00Z,samuel.audet@gmail.com,Samuel Audet,2017-11-27T05:16:00Z,samuel.audet@gmail.com,210,138,72," * Move `sizeof()` and `offsetof()` data to global variables to prevent `StackOverflowError` in `JNI_OnLoad()` (issue bytedeco/javacpp-presets#331)
 * Propagate within `Parser` type information from macros to other macros referencing them

Also fix a few more issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/Type.java,79680934375a4844d64a026d9b02e58196915c7f,Samuel Audet,2017-11-27T05:16:00Z,samuel.audet@gmail.com,Samuel Audet,2017-11-27T05:16:00Z,samuel.audet@gmail.com,210,138,72," * Move `sizeof()` and `offsetof()` data to global variables to prevent `StackOverflowError` in `JNI_OnLoad()` (issue bytedeco/javacpp-presets#331)
 * Propagate within `Parser` type information from macros to other macros referencing them

Also fix a few more issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,251c5be6d000bb8e90c6b65bd9fcbb8104663798,Samuel Audet,2017-11-20T06:17:21Z,samuel.audet@gmail.com,Samuel Audet,2017-11-20T07:51:39Z,samuel.audet@gmail.com,368,231,137," * Add support for `JNI_OnLoad_libname()` naming scheme for iOS via new `platform.library.static=true` property
 * Improve the clarity of error messages on `Parser` failures
 * Fix `Parser` issues with multiple `typedef` declarations in a single statement
 * Require `Info.annotations(""@Name"")` to pick up alternate names from attributes"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,251c5be6d000bb8e90c6b65bd9fcbb8104663798,Samuel Audet,2017-11-20T06:17:21Z,samuel.audet@gmail.com,Samuel Audet,2017-11-20T07:51:39Z,samuel.audet@gmail.com,368,231,137," * Add support for `JNI_OnLoad_libname()` naming scheme for iOS via new `platform.library.static=true` property
 * Improve the clarity of error messages on `Parser` failures
 * Fix `Parser` issues with multiple `typedef` declarations in a single statement
 * Require `Info.annotations(""@Name"")` to pick up alternate names from attributes"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,251c5be6d000bb8e90c6b65bd9fcbb8104663798,Samuel Audet,2017-11-20T06:17:21Z,samuel.audet@gmail.com,Samuel Audet,2017-11-20T07:51:39Z,samuel.audet@gmail.com,368,231,137," * Add support for `JNI_OnLoad_libname()` naming scheme for iOS via new `platform.library.static=true` property
 * Improve the clarity of error messages on `Parser` failures
 * Fix `Parser` issues with multiple `typedef` declarations in a single statement
 * Require `Info.annotations(""@Name"")` to pick up alternate names from attributes"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,251c5be6d000bb8e90c6b65bd9fcbb8104663798,Samuel Audet,2017-11-20T06:17:21Z,samuel.audet@gmail.com,Samuel Audet,2017-11-20T07:51:39Z,samuel.audet@gmail.com,368,231,137," * Add support for `JNI_OnLoad_libname()` naming scheme for iOS via new `platform.library.static=true` property
 * Improve the clarity of error messages on `Parser` failures
 * Fix `Parser` issues with multiple `typedef` declarations in a single statement
 * Require `Info.annotations(""@Name"")` to pick up alternate names from attributes"
,src/main/java/org/bytedeco/javacpp/tools/Token.java,251c5be6d000bb8e90c6b65bd9fcbb8104663798,Samuel Audet,2017-11-20T06:17:21Z,samuel.audet@gmail.com,Samuel Audet,2017-11-20T07:51:39Z,samuel.audet@gmail.com,368,231,137," * Add support for `JNI_OnLoad_libname()` naming scheme for iOS via new `platform.library.static=true` property
 * Improve the clarity of error messages on `Parser` failures
 * Fix `Parser` issues with multiple `typedef` declarations in a single statement
 * Require `Info.annotations(""@Name"")` to pick up alternate names from attributes"
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,251c5be6d000bb8e90c6b65bd9fcbb8104663798,Samuel Audet,2017-11-20T06:17:21Z,samuel.audet@gmail.com,Samuel Audet,2017-11-20T07:51:39Z,samuel.audet@gmail.com,368,231,137," * Add support for `JNI_OnLoad_libname()` naming scheme for iOS via new `platform.library.static=true` property
 * Improve the clarity of error messages on `Parser` failures
 * Fix `Parser` issues with multiple `typedef` declarations in a single statement
 * Require `Info.annotations(""@Name"")` to pick up alternate names from attributes"
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,251c5be6d000bb8e90c6b65bd9fcbb8104663798,Samuel Audet,2017-11-20T06:17:21Z,samuel.audet@gmail.com,Samuel Audet,2017-11-20T07:51:39Z,samuel.audet@gmail.com,368,231,137," * Add support for `JNI_OnLoad_libname()` naming scheme for iOS via new `platform.library.static=true` property
 * Improve the clarity of error messages on `Parser` failures
 * Fix `Parser` issues with multiple `typedef` declarations in a single statement
 * Require `Info.annotations(""@Name"")` to pick up alternate names from attributes"
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,ce6acac351ce03f7775e07bb3cf1da17b35e6297,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,110,84,26," * Add `@Platform(exclude=...)` annotation value to remove header files from inherited `@Platform(include=...`

Also fix a few more issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/Loader.java,ce6acac351ce03f7775e07bb3cf1da17b35e6297,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,110,84,26," * Add `@Platform(exclude=...)` annotation value to remove header files from inherited `@Platform(include=...`

Also fix a few more issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,ce6acac351ce03f7775e07bb3cf1da17b35e6297,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,110,84,26," * Add `@Platform(exclude=...)` annotation value to remove header files from inherited `@Platform(include=...`

Also fix a few more issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,ce6acac351ce03f7775e07bb3cf1da17b35e6297,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,110,84,26," * Add `@Platform(exclude=...)` annotation value to remove header files from inherited `@Platform(include=...`

Also fix a few more issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,ce6acac351ce03f7775e07bb3cf1da17b35e6297,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,110,84,26," * Add `@Platform(exclude=...)` annotation value to remove header files from inherited `@Platform(include=...`

Also fix a few more issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/Token.java,ce6acac351ce03f7775e07bb3cf1da17b35e6297,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,Samuel Audet,2017-11-15T14:14:31Z,samuel.audet@gmail.com,110,84,26," * Add `@Platform(exclude=...)` annotation value to remove header files from inherited `@Platform(include=...`

Also fix a few more issues with `Parser`"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,8f713ea13922e283ae23610f8740c50e2475e693,Samuel Audet,2017-11-13T14:25:01Z,samuel.audet@gmail.com,Samuel Audet,2017-11-13T14:25:01Z,samuel.audet@gmail.com,61,48,13," * Fix a few issues with `Parser`, including missing `PointerPointer` member setters (issue bytedeco/javacpp-presets#478)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,8f713ea13922e283ae23610f8740c50e2475e693,Samuel Audet,2017-11-13T14:25:01Z,samuel.audet@gmail.com,Samuel Audet,2017-11-13T14:25:01Z,samuel.audet@gmail.com,61,48,13," * Fix a few issues with `Parser`, including missing `PointerPointer` member setters (issue bytedeco/javacpp-presets#478)"
,src/main/java/org/bytedeco/javacpp/Loader.java,8b05de89b91ded6287bbddd40caed6ecdce11cdd,Samuel Audet,2017-11-08T12:37:28Z,samuel.audet@gmail.com,Samuel Audet,2017-11-08T12:37:28Z,samuel.audet@gmail.com,127,93,34, * Fix potential race conditions and various issues with `Loader` that could prevent libraries like MKL from working properly
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,8b05de89b91ded6287bbddd40caed6ecdce11cdd,Samuel Audet,2017-11-08T12:37:28Z,samuel.audet@gmail.com,Samuel Audet,2017-11-08T12:37:28Z,samuel.audet@gmail.com,127,93,34, * Fix potential race conditions and various issues with `Loader` that could prevent libraries like MKL from working properly
,src/main/java/org/bytedeco/javacpp/tools/Token.java,8b05de89b91ded6287bbddd40caed6ecdce11cdd,Samuel Audet,2017-11-08T12:37:28Z,samuel.audet@gmail.com,Samuel Audet,2017-11-08T12:37:28Z,samuel.audet@gmail.com,127,93,34, * Fix potential race conditions and various issues with `Loader` that could prevent libraries like MKL from working properly
,src/main/java/org/bytedeco/javacpp/FunctionPointer.java,6aafacfcd608a2e82b27af1ead054009c608b06c,Samuel Audet,2017-10-19T01:53:27Z,samuel.audet@gmail.com,Samuel Audet,2017-10-19T02:01:40Z,samuel.audet@gmail.com,93,83,10," * Add `Loader.addressof()` to access native symbols, usable via optional `ValueGetter/ValueSetter` in `FunctionPointer`"
,src/main/java/org/bytedeco/javacpp/Loader.java,6aafacfcd608a2e82b27af1ead054009c608b06c,Samuel Audet,2017-10-19T01:53:27Z,samuel.audet@gmail.com,Samuel Audet,2017-10-19T02:01:40Z,samuel.audet@gmail.com,93,83,10," * Add `Loader.addressof()` to access native symbols, usable via optional `ValueGetter/ValueSetter` in `FunctionPointer`"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,6aafacfcd608a2e82b27af1ead054009c608b06c,Samuel Audet,2017-10-19T01:53:27Z,samuel.audet@gmail.com,Samuel Audet,2017-10-19T02:01:40Z,samuel.audet@gmail.com,93,83,10," * Add `Loader.addressof()` to access native symbols, usable via optional `ValueGetter/ValueSetter` in `FunctionPointer`"
,src/test/java/org/bytedeco/javacpp/PointerTest.java,6aafacfcd608a2e82b27af1ead054009c608b06c,Samuel Audet,2017-10-19T01:53:27Z,samuel.audet@gmail.com,Samuel Audet,2017-10-19T02:01:40Z,samuel.audet@gmail.com,93,83,10," * Add `Loader.addressof()` to access native symbols, usable via optional `ValueGetter/ValueSetter` in `FunctionPointer`"
,src/main/java/org/bytedeco/javacpp/tools/BuildEnabled.java,cd961ca93a73568ea858b32a9373f03e49bbd149,Samuel Audet,2017-10-11T03:25:41Z,samuel.audet@gmail.com,Samuel Audet,2017-10-11T03:25:41Z,samuel.audet@gmail.com,49,47,2, * Add `BuildEnabled` interface to allow `InfoMapper` classes to participate in the build
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,cd961ca93a73568ea858b32a9373f03e49bbd149,Samuel Audet,2017-10-11T03:25:41Z,samuel.audet@gmail.com,Samuel Audet,2017-10-11T03:25:41Z,samuel.audet@gmail.com,49,47,2, * Add `BuildEnabled` interface to allow `InfoMapper` classes to participate in the build
,src/main/java/org/bytedeco/javacpp/Loader.java,2d4249d5f08976b49e37e86fd37de0976b649bce,Samuel Audet,2017-09-30T12:36:43Z,samuel.audet@gmail.com,Samuel Audet,2017-09-30T12:36:43Z,samuel.audet@gmail.com,21,21,0, * Try to use symbolic links in `Loader.load()` for output filenames specified with the `#` character (useful for libraries like MKL)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,2038672bd9a61b658e8d5aaa54d9904fd875f500,Samuel Audet,2017-09-16T04:24:29Z,samuel.audet@gmail.com,Samuel Audet,2017-09-16T04:24:29Z,samuel.audet@gmail.com,104,96,8," * Fix `Parser` incorrectly resolving type definitions with classes of the same name in parent namespaces
 * Fix `Generator` compile errors for `const` template types of `@Adapter` classes using the `@Cast` annotation"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,2038672bd9a61b658e8d5aaa54d9904fd875f500,Samuel Audet,2017-09-16T04:24:29Z,samuel.audet@gmail.com,Samuel Audet,2017-09-16T04:24:29Z,samuel.audet@gmail.com,104,96,8," * Fix `Parser` incorrectly resolving type definitions with classes of the same name in parent namespaces
 * Fix `Generator` compile errors for `const` template types of `@Adapter` classes using the `@Cast` annotation"
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,2038672bd9a61b658e8d5aaa54d9904fd875f500,Samuel Audet,2017-09-16T04:24:29Z,samuel.audet@gmail.com,Samuel Audet,2017-09-16T04:24:29Z,samuel.audet@gmail.com,104,96,8," * Fix `Parser` incorrectly resolving type definitions with classes of the same name in parent namespaces
 * Fix `Generator` compile errors for `const` template types of `@Adapter` classes using the `@Cast` annotation"
,src/test/java/org/bytedeco/javacpp/BuilderTest.java,2038672bd9a61b658e8d5aaa54d9904fd875f500,Samuel Audet,2017-09-16T04:24:29Z,samuel.audet@gmail.com,Samuel Audet,2017-09-16T04:24:29Z,samuel.audet@gmail.com,104,96,8," * Fix `Parser` incorrectly resolving type definitions with classes of the same name in parent namespaces
 * Fix `Generator` compile errors for `const` template types of `@Adapter` classes using the `@Cast` annotation"
,src/test/resources/org/bytedeco/javacpp/AdapterTest.h,2038672bd9a61b658e8d5aaa54d9904fd875f500,Samuel Audet,2017-09-16T04:24:29Z,samuel.audet@gmail.com,Samuel Audet,2017-09-16T04:24:29Z,samuel.audet@gmail.com,104,96,8," * Fix `Parser` incorrectly resolving type definitions with classes of the same name in parent namespaces
 * Fix `Generator` compile errors for `const` template types of `@Adapter` classes using the `@Cast` annotation"
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,35463a65f93b52db5522a8dc8ec281289b6ac4be,Samuel Audet,2017-09-07T06:21:20Z,samuel.audet@gmail.com,Samuel Audet,2017-09-07T06:21:20Z,samuel.audet@gmail.com,84,71,13," * Call `Loader.createLibraryLink()` when executing the user specified `Builder.buildCommand` as well
 * Introduce new `platform.extensions` property to manage more than one set of binaries per platform"
,src/main/java/org/bytedeco/javacpp/Loader.java,35463a65f93b52db5522a8dc8ec281289b6ac4be,Samuel Audet,2017-09-07T06:21:20Z,samuel.audet@gmail.com,Samuel Audet,2017-09-07T06:21:20Z,samuel.audet@gmail.com,84,71,13," * Call `Loader.createLibraryLink()` when executing the user specified `Builder.buildCommand` as well
 * Introduce new `platform.extensions` property to manage more than one set of binaries per platform"
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,35463a65f93b52db5522a8dc8ec281289b6ac4be,Samuel Audet,2017-09-07T06:21:20Z,samuel.audet@gmail.com,Samuel Audet,2017-09-07T06:21:20Z,samuel.audet@gmail.com,84,71,13," * Call `Loader.createLibraryLink()` when executing the user specified `Builder.buildCommand` as well
 * Introduce new `platform.extensions` property to manage more than one set of binaries per platform"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,35463a65f93b52db5522a8dc8ec281289b6ac4be,Samuel Audet,2017-09-07T06:21:20Z,samuel.audet@gmail.com,Samuel Audet,2017-09-07T06:21:20Z,samuel.audet@gmail.com,84,71,13," * Call `Loader.createLibraryLink()` when executing the user specified `Builder.buildCommand` as well
 * Introduce new `platform.extensions` property to manage more than one set of binaries per platform"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,35463a65f93b52db5522a8dc8ec281289b6ac4be,Samuel Audet,2017-09-07T06:21:20Z,samuel.audet@gmail.com,Samuel Audet,2017-09-07T06:21:20Z,samuel.audet@gmail.com,84,71,13," * Call `Loader.createLibraryLink()` when executing the user specified `Builder.buildCommand` as well
 * Introduce new `platform.extensions` property to manage more than one set of binaries per platform"
,src/main/java/org/bytedeco/javacpp/Loader.java,936dd6443b11d19615d793dfec95418f15c66b16,Trejkaz (pen name),2017-08-24T13:29:47Z,trejkaz@trypticon.org,Samuel Audet,2017-08-24T13:29:47Z,samuel.audet@gmail.com,12,8,4," * Catch `SecurityException` in `Loader.getCacheDir()` (pull #198)

Logic in the area will already try the next directory."
,src/main/java/org/bytedeco/javacpp/Pointer.java,86e4d57e9ac0bc94f0b836e0c08e3a45f362148f,Samuel Audet,2017-07-09T13:28:03Z,samuel.audet@gmail.com,Samuel Audet,2017-07-09T13:28:03Z,samuel.audet@gmail.com,20,17,3, * Call `malloc_trim(0)` after `System.gc()` on Linux to make sure memory gets released (issue bytedeco/javacpp-presets#423)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,86e4d57e9ac0bc94f0b836e0c08e3a45f362148f,Samuel Audet,2017-07-09T13:28:03Z,samuel.audet@gmail.com,Samuel Audet,2017-07-09T13:28:03Z,samuel.audet@gmail.com,20,17,3, * Call `malloc_trim(0)` after `System.gc()` on Linux to make sure memory gets released (issue bytedeco/javacpp-presets#423)
,src/main/java/org/bytedeco/javacpp/Pointer.java,c4fa2c1b39c327312056c4198eee6e2fb849f0fc,Samuel Audet,2017-07-01T01:07:44Z,samuel.audet@gmail.com,Samuel Audet,2017-07-01T01:08:29Z,samuel.audet@gmail.com,7,4,3,  * Make public the `Pointer.formatBytes()` and `Pointer.parseBytes()` static methods
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,f105e88ee53b9d36b78fe51faeb82d41705cb58a,Samuel Audet,2017-06-23T22:38:57Z,samuel.audet@gmail.com,Samuel Audet,2017-06-23T22:38:57Z,samuel.audet@gmail.com,7,4,3, * Use `Integer.decode()` instead of `parseInt()` on integer literals to support hexadecimal and octal numbers
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,f105e88ee53b9d36b78fe51faeb82d41705cb58a,Samuel Audet,2017-06-23T22:38:57Z,samuel.audet@gmail.com,Samuel Audet,2017-06-23T22:38:57Z,samuel.audet@gmail.com,7,4,3, * Use `Integer.decode()` instead of `parseInt()` on integer literals to support hexadecimal and octal numbers
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,6952a0da106663ccf0030ed1abbb408648734e29,Samuel Audet,2017-06-21T03:41:54Z,samuel.audet@gmail.com,Samuel Audet,2017-06-21T03:47:15Z,samuel.audet@gmail.com,120,100,20, * Add `Builder.encoding` option to let users specify I/O character set name (issue bytedeco/javacpp-presets#195)
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,6952a0da106663ccf0030ed1abbb408648734e29,Samuel Audet,2017-06-21T03:41:54Z,samuel.audet@gmail.com,Samuel Audet,2017-06-21T03:47:15Z,samuel.audet@gmail.com,120,100,20, * Add `Builder.encoding` option to let users specify I/O character set name (issue bytedeco/javacpp-presets#195)
,src/main/java/org/bytedeco/javacpp/tools/EncodingFileWriter.java,6952a0da106663ccf0030ed1abbb408648734e29,Samuel Audet,2017-06-21T03:41:54Z,samuel.audet@gmail.com,Samuel Audet,2017-06-21T03:47:15Z,samuel.audet@gmail.com,120,100,20, * Add `Builder.encoding` option to let users specify I/O character set name (issue bytedeco/javacpp-presets#195)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,6952a0da106663ccf0030ed1abbb408648734e29,Samuel Audet,2017-06-21T03:41:54Z,samuel.audet@gmail.com,Samuel Audet,2017-06-21T03:47:15Z,samuel.audet@gmail.com,120,100,20, * Add `Builder.encoding` option to let users specify I/O character set name (issue bytedeco/javacpp-presets#195)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,6952a0da106663ccf0030ed1abbb408648734e29,Samuel Audet,2017-06-21T03:41:54Z,samuel.audet@gmail.com,Samuel Audet,2017-06-21T03:47:15Z,samuel.audet@gmail.com,120,100,20, * Add `Builder.encoding` option to let users specify I/O character set name (issue bytedeco/javacpp-presets#195)
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,6952a0da106663ccf0030ed1abbb408648734e29,Samuel Audet,2017-06-21T03:41:54Z,samuel.audet@gmail.com,Samuel Audet,2017-06-21T03:47:15Z,samuel.audet@gmail.com,120,100,20, * Add `Builder.encoding` option to let users specify I/O character set name (issue bytedeco/javacpp-presets#195)
,src/main/java/org/bytedeco/javacpp/Loader.java,1797745bcbc2e32233c93107c5729696d4930187,Mo Tao,2017-06-08T11:07:03Z,motao@sensetime.com,Samuel Audet,2017-06-08T11:07:03Z,samuel.audet@gmail.com,45,27,18, * Prevent race condition that could occur in `Loader.cacheResource()` (pull #188)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,d570d7bfbfa12bf9a5ef705d2375d6009e44251c,Samuel Audet,2017-06-07T04:32:51Z,samuel.audet@gmail.com,Samuel Audet,2017-06-07T04:32:51Z,samuel.audet@gmail.com,7,4,3, * Fix potential compile errors with Android caused by superfluous `typedef` from `Generator` (issue #186)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,8c257c0ae02f9e0e8da229300fe2be2cd630a21d,Samuel Audet,2017-06-06T13:28:46Z,samuel.audet@gmail.com,Samuel Audet,2017-06-06T13:28:46Z,samuel.audet@gmail.com,15,13,2," * Fix `Parser` translation of strings containing the ""::"" subsequence (issue #184)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,997201fb56a4d5005ac227ee43759ed36637fdd9,Samuel Audet,2017-06-03T14:26:20Z,samuel.audet@gmail.com,Samuel Audet,2017-06-03T14:26:20Z,samuel.audet@gmail.com,14,10,4, * Prevent `Parser` from overwriting target classes when nothing was parsed
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,c6760df4cac68f83d5dbf61092ff273beaac1dfe,Samuel Audet,2017-05-28T13:40:32Z,samuel.audet@gmail.com,Samuel Audet,2017-05-28T13:40:32Z,samuel.audet@gmail.com,5,5,0, * Fix `Parser` error on member variables with initializers plus `Info.skip()` (issue #179)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,b5378cff5d0f8722bd92a43d05efa9c59cecab96,Samuel Audet,2017-05-14T15:40:56Z,samuel.audet@gmail.com,Samuel Audet,2017-05-14T15:40:56Z,samuel.audet@gmail.com,51,41,10,"Fix bugs in Parser

 * Fix `Parser` incorrectly recognizing values as pointers when `const` is placed after type (issue #173)
 * Add `Parser` support for C++11 `using` declarations that act as `typedef` (issue #169)
 * Let `Parser` accept variables initialized with parentheses (issue #179)
 * Fix `Parser` confusion between attributes and namespace-less templates (issue #181)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,b5378cff5d0f8722bd92a43d05efa9c59cecab96,Samuel Audet,2017-05-14T15:40:56Z,samuel.audet@gmail.com,Samuel Audet,2017-05-14T15:40:56Z,samuel.audet@gmail.com,51,41,10,"Fix bugs in Parser

 * Fix `Parser` incorrectly recognizing values as pointers when `const` is placed after type (issue #173)
 * Add `Parser` support for C++11 `using` declarations that act as `typedef` (issue #169)
 * Let `Parser` accept variables initialized with parentheses (issue #179)
 * Fix `Parser` confusion between attributes and namespace-less templates (issue #181)"
,src/main/java/org/bytedeco/javacpp/Loader.java,89e91f1f67491396c287e2dae889143e5076e9a6,Samuel Audet,2017-05-12T13:14:54Z,samuel.audet@gmail.com,Samuel Audet,2017-05-12T13:15:57Z,samuel.audet@gmail.com,7,4,3, * Fix issue with `Loader.getCallerClass()` when a `SecurityManager` cannot be created (issue #176)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,217bcc235a22f4e465224cc8b87217e339b9e954,Samuel Audet,2017-05-12T04:42:49Z,samuel.audet@gmail.com,Samuel Audet,2017-05-12T04:42:49Z,samuel.audet@gmail.com,6,6,0, * Make it possible to rename enumerators of C++ `enum class` (issue #180)
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,d206b2fe71d028ab636f077d01ed0c09aea14aaa,Samuel Audet,2017-05-08T11:35:56Z,samuel.audet@gmail.com,Samuel Audet,2017-05-08T11:35:56Z,samuel.audet@gmail.com,2,1,1,"Use `BUILD_PATH_SEPARATOR` instead of `PATH_SEPARATOR`, which conflicts with MSYS2"
,src/main/java/org/bytedeco/javacpp/Loader.java,ee96dc65fbe63b9925e03ff3c5af01ed9770bd00,Samuel Audet,2017-05-07T02:06:12Z,samuel.audet@gmail.com,Samuel Audet,2017-05-07T02:06:12Z,samuel.audet@gmail.com,52,51,1, * Make the arbitrary resources available to process executed with `Builder.buildCommand` via the `BUILD_PATH` environment variable
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,ee96dc65fbe63b9925e03ff3c5af01ed9770bd00,Samuel Audet,2017-05-07T02:06:12Z,samuel.audet@gmail.com,Samuel Audet,2017-05-07T02:06:12Z,samuel.audet@gmail.com,52,51,1, * Make the arbitrary resources available to process executed with `Builder.buildCommand` via the `BUILD_PATH` environment variable
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,ee96dc65fbe63b9925e03ff3c5af01ed9770bd00,Samuel Audet,2017-05-07T02:06:12Z,samuel.audet@gmail.com,Samuel Audet,2017-05-07T02:06:12Z,samuel.audet@gmail.com,52,51,1, * Make the arbitrary resources available to process executed with `Builder.buildCommand` via the `BUILD_PATH` environment variable
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,afa7b7ca40305c9df7b4260ea8378361aca168bb,Samuel Audet,2017-05-05T09:41:09Z,samuel.audet@gmail.com,Samuel Audet,2017-05-05T09:42:37Z,samuel.audet@gmail.com,7,4,3, * Prevent `Parser` from outputting setters for `const` member pointers
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,de98ee865c2244cb427f12e4748a92580c2fe49f,Samuel Audet,2017-04-29T02:05:24Z,samuel.audet@gmail.com,Samuel Audet,2017-04-29T02:05:24Z,samuel.audet@gmail.com,15,13,2, * Add support for arrays of function pointers
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,93ccf7f4e5c04f79060f895cb123a040f1724400,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,213,201,12," * Let users bundle arbitrary resources, have them extracted in cache, and used as `include` or `link` paths (pull #43)"
,src/main/java/org/bytedeco/javacpp/Loader.java,93ccf7f4e5c04f79060f895cb123a040f1724400,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,213,201,12," * Let users bundle arbitrary resources, have them extracted in cache, and used as `include` or `link` paths (pull #43)"
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,93ccf7f4e5c04f79060f895cb123a040f1724400,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,213,201,12," * Let users bundle arbitrary resources, have them extracted in cache, and used as `include` or `link` paths (pull #43)"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,93ccf7f4e5c04f79060f895cb123a040f1724400,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,213,201,12," * Let users bundle arbitrary resources, have them extracted in cache, and used as `include` or `link` paths (pull #43)"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,93ccf7f4e5c04f79060f895cb123a040f1724400,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,213,201,12," * Let users bundle arbitrary resources, have them extracted in cache, and used as `include` or `link` paths (pull #43)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,93ccf7f4e5c04f79060f895cb123a040f1724400,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,Samuel Audet,2017-04-28T02:23:12Z,samuel.audet@gmail.com,213,201,12," * Let users bundle arbitrary resources, have them extracted in cache, and used as `include` or `link` paths (pull #43)"
,src/main/java/org/bytedeco/javacpp/Pointer.java,07b98d2f25cec10cca1877f4a5e16acba113b7a4,Samuel Audet,2017-04-27T10:08:22Z,samuel.audet@gmail.com,Samuel Audet,2017-04-27T10:08:22Z,samuel.audet@gmail.com,22,12,10, * Fix potential formatting issues with `OutOfMemoryError` thrown from `Pointer`
,src/main/java/org/bytedeco/javacpp/Loader.java,87b5f8cd46102562dc4d4e29a5529c6a42c4cb44,zhanhb,2017-04-23T12:59:12Z,zhanhb@users.noreply.github.com,Samuel Audet,2017-04-23T12:59:12Z,samuel.audet@gmail.com,2,1,1, * Fix `Loader.getCallerClass()` (pull #175)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,954ee4ae59f6d4c71ac17e6407624d53a0807c4a,Samuel Audet,2017-04-05T13:50:30Z,samuel.audet@gmail.com,Samuel Audet,2017-04-05T13:51:49Z,samuel.audet@gmail.com,7,6,1," * Fix `Parser` not considering empty `class`, `struct`, or `union` declarations as opaque forward declarations"
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,81ddd54f72a45cf652dc2659344279911ea9d915,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,330,321,9, * Provide `ByteIndexer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,81ddd54f72a45cf652dc2659344279911ea9d915,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,330,321,9, * Provide `ByteIndexer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,81ddd54f72a45cf652dc2659344279911ea9d915,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,330,321,9, * Provide `ByteIndexer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/main/java/org/bytedeco/javacpp/indexer/ByteRawIndexer.java,81ddd54f72a45cf652dc2659344279911ea9d915,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,330,321,9, * Provide `ByteIndexer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/main/java/org/bytedeco/javacpp/indexer/Raw.java,81ddd54f72a45cf652dc2659344279911ea9d915,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,330,321,9, * Provide `ByteIndexer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/main/java/org/bytedeco/javacpp/indexer/ReverseUnsafeRaw.java,81ddd54f72a45cf652dc2659344279911ea9d915,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,330,321,9, * Provide `ByteIndexer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/main/java/org/bytedeco/javacpp/indexer/UnsafeRaw.java,81ddd54f72a45cf652dc2659344279911ea9d915,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,330,321,9, * Provide `ByteIndexer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,81ddd54f72a45cf652dc2659344279911ea9d915,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,Samuel Audet,2017-04-02T13:32:53Z,samuel.audet@gmail.com,330,321,9, * Provide `ByteIndexer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/main/java/org/bytedeco/javacpp/BytePointer.java,ba01323d651bc40c01a772a9fb365fb22d3a0d1d,Samuel Audet,2017-03-20T12:16:45Z,samuel.audet@gmail.com,Samuel Audet,2017-03-20T13:42:18Z,samuel.audet@gmail.com,114,110,4, * Provide `BytePointer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,ba01323d651bc40c01a772a9fb365fb22d3a0d1d,Samuel Audet,2017-03-20T12:16:45Z,samuel.audet@gmail.com,Samuel Audet,2017-03-20T13:42:18Z,samuel.audet@gmail.com,114,110,4, * Provide `BytePointer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,ba01323d651bc40c01a772a9fb365fb22d3a0d1d,Samuel Audet,2017-03-20T12:16:45Z,samuel.audet@gmail.com,Samuel Audet,2017-03-20T13:42:18Z,samuel.audet@gmail.com,114,110,4, * Provide `BytePointer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/test/java/org/bytedeco/javacpp/PointerTest.java,ba01323d651bc40c01a772a9fb365fb22d3a0d1d,Samuel Audet,2017-03-20T12:16:45Z,samuel.audet@gmail.com,Samuel Audet,2017-03-20T13:42:18Z,samuel.audet@gmail.com,114,110,4, * Provide `BytePointer` with value getters and setters for primitive types other than `byte` to facilitate unaligned memory accesses
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,88b7f9fc8217e5bc535c66036cf3d6cdf0ec191a,Samuel Audet,2017-03-19T12:27:12Z,samuel.audet@gmail.com,Samuel Audet,2017-03-19T13:39:09Z,samuel.audet@gmail.com,51,48,3, * Add a `BuildMojo.buildCommand` parameter that lets users execute arbitrary system commands easily with `ProcessBuilder`
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,88b7f9fc8217e5bc535c66036cf3d6cdf0ec191a,Samuel Audet,2017-03-19T12:27:12Z,samuel.audet@gmail.com,Samuel Audet,2017-03-19T13:39:09Z,samuel.audet@gmail.com,51,48,3, * Add a `BuildMojo.buildCommand` parameter that lets users execute arbitrary system commands easily with `ProcessBuilder`
,src/main/java/org/bytedeco/javacpp/Loader.java,d7d6af2b4a2d5e5d3ea48cb27248e2f84a031fd2,Samuel Audet,2017-03-08T05:54:30Z,samuel.audet@gmail.com,Samuel Audet,2017-03-08T05:54:30Z,samuel.audet@gmail.com,13,10,3," * Add new ""org.bytedeco.javacpp.cachedir.nosubdir"" system property to restore old behavior (issue #167)"
,src/main/java/org/bytedeco/javacpp/BytePointer.java,cc669d621291ae50539fb280f8a3a4d00a9a2386,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,17,8,9, * Prevent `Pointer` from copying array data from NIO buffers that are also direct (issue bytedeco/javacpp-presets#380)
,src/main/java/org/bytedeco/javacpp/CharPointer.java,cc669d621291ae50539fb280f8a3a4d00a9a2386,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,17,8,9, * Prevent `Pointer` from copying array data from NIO buffers that are also direct (issue bytedeco/javacpp-presets#380)
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,cc669d621291ae50539fb280f8a3a4d00a9a2386,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,17,8,9, * Prevent `Pointer` from copying array data from NIO buffers that are also direct (issue bytedeco/javacpp-presets#380)
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,cc669d621291ae50539fb280f8a3a4d00a9a2386,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,17,8,9, * Prevent `Pointer` from copying array data from NIO buffers that are also direct (issue bytedeco/javacpp-presets#380)
,src/main/java/org/bytedeco/javacpp/IntPointer.java,cc669d621291ae50539fb280f8a3a4d00a9a2386,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,17,8,9, * Prevent `Pointer` from copying array data from NIO buffers that are also direct (issue bytedeco/javacpp-presets#380)
,src/main/java/org/bytedeco/javacpp/Loader.java,cc669d621291ae50539fb280f8a3a4d00a9a2386,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,17,8,9, * Prevent `Pointer` from copying array data from NIO buffers that are also direct (issue bytedeco/javacpp-presets#380)
,src/main/java/org/bytedeco/javacpp/LongPointer.java,cc669d621291ae50539fb280f8a3a4d00a9a2386,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,17,8,9, * Prevent `Pointer` from copying array data from NIO buffers that are also direct (issue bytedeco/javacpp-presets#380)
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,cc669d621291ae50539fb280f8a3a4d00a9a2386,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,Samuel Audet,2017-03-08T01:23:41Z,samuel.audet@gmail.com,17,8,9, * Prevent `Pointer` from copying array data from NIO buffers that are also direct (issue bytedeco/javacpp-presets#380)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,6589a59fa40e744c3eae44fc563e8fa24bb70adc,Samuel Audet,2017-02-19T02:16:50Z,samuel.audet@gmail.com,Samuel Audet,2017-02-19T02:16:50Z,samuel.audet@gmail.com,5,3,2, * Fix `SharedPtrAdapter` and `UniquePtrAdapter` of the `Generator` for `const` types (issue #166)
,src/main/java/org/bytedeco/javacpp/Loader.java,e528b3608d3f74f2a9d63a51f3395df7afa07b34,Samuel Audet,2017-02-15T13:15:50Z,samuel.audet@gmail.com,Samuel Audet,2017-02-15T13:15:50Z,samuel.audet@gmail.com,10,7,3," * Prevent `Loader` from loading system libraries, which causes problems on Android 7.x (issue bytedeco/javacv#617)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,9fdea90d8e61df222c906b9d74c5f6df41d5486b,Samuel Audet,2017-02-12T03:13:39Z,samuel.audet@gmail.com,Samuel Audet,2017-02-12T03:13:39Z,samuel.audet@gmail.com,8,7,1, * Make `Parser` strip return type annotations when naming `FunctionPointer` (issue #162)
,src/main/java/org/bytedeco/javacpp/Pointer.java,d6cbe79b4a987f2700b3ac07676b5b4cfff6a68e,Samuel Audet,2017-02-06T13:22:21Z,samuel.audet@gmail.com,Samuel Audet,2017-02-06T13:22:21Z,samuel.audet@gmail.com,4,4,0, * Let `Pointer` log debug messages when forced to call `System.gc()`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,ac38535cfbe1f83e88434a2f47a83c323d7d7bfb,Samuel Audet,2017-01-28T13:57:54Z,samuel.audet@gmail.com,Samuel Audet,2017-01-28T13:57:54Z,samuel.audet@gmail.com,10,10,0," * Fix `Parser` handling of `std::map` and of documentation comments containing the ""*/"" sequence"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,7d4810bb25bb0da43df50296c29c9cf251098ae6,Samuel Audet,2017-01-28T10:36:39Z,samuel.audet@gmail.com,Samuel Audet,2017-01-28T10:36:39Z,samuel.audet@gmail.com,6,3,3,"Fix `totalProcessors()`, `totalCores()`, `totalChips()` methods on Android"
,src/main/java/org/bytedeco/javacpp/Loader.java,6946c4c1b94ece4e0e1faaacb549c65fc243625a,Samuel Audet,2017-01-26T11:35:57Z,samuel.audet@gmail.com,Samuel Audet,2017-01-26T11:35:57Z,samuel.audet@gmail.com,65,61,4, * Add portable and efficient `totalChips()` methods
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,6946c4c1b94ece4e0e1faaacb549c65fc243625a,Samuel Audet,2017-01-26T11:35:57Z,samuel.audet@gmail.com,Samuel Audet,2017-01-26T11:35:57Z,samuel.audet@gmail.com,65,61,4, * Add portable and efficient `totalChips()` methods
,src/test/java/org/bytedeco/javacpp/PointerTest.java,6946c4c1b94ece4e0e1faaacb549c65fc243625a,Samuel Audet,2017-01-26T11:35:57Z,samuel.audet@gmail.com,Samuel Audet,2017-01-26T11:35:57Z,samuel.audet@gmail.com,65,61,4, * Add portable and efficient `totalChips()` methods
,src/main/java/org/bytedeco/javacpp/Loader.java,6851a060880d6fa0817e2d86a7938a92eb773f3d,Samuel Audet,2017-01-22T13:48:08Z,samuel.audet@gmail.com,Samuel Audet,2017-01-22T14:47:56Z,samuel.audet@gmail.com,190,183,7," * Add portable and efficient `totalPhysicalBytes()`, `availablePhysicalBytes()`, `totalProcessors()`, and `totalCores()` methods"
,src/main/java/org/bytedeco/javacpp/Pointer.java,6851a060880d6fa0817e2d86a7938a92eb773f3d,Samuel Audet,2017-01-22T13:48:08Z,samuel.audet@gmail.com,Samuel Audet,2017-01-22T14:47:56Z,samuel.audet@gmail.com,190,183,7," * Add portable and efficient `totalPhysicalBytes()`, `availablePhysicalBytes()`, `totalProcessors()`, and `totalCores()` methods"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,6851a060880d6fa0817e2d86a7938a92eb773f3d,Samuel Audet,2017-01-22T13:48:08Z,samuel.audet@gmail.com,Samuel Audet,2017-01-22T14:47:56Z,samuel.audet@gmail.com,190,183,7," * Add portable and efficient `totalPhysicalBytes()`, `availablePhysicalBytes()`, `totalProcessors()`, and `totalCores()` methods"
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,6851a060880d6fa0817e2d86a7938a92eb773f3d,Samuel Audet,2017-01-22T13:48:08Z,samuel.audet@gmail.com,Samuel Audet,2017-01-22T14:47:56Z,samuel.audet@gmail.com,190,183,7," * Add portable and efficient `totalPhysicalBytes()`, `availablePhysicalBytes()`, `totalProcessors()`, and `totalCores()` methods"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,6851a060880d6fa0817e2d86a7938a92eb773f3d,Samuel Audet,2017-01-22T13:48:08Z,samuel.audet@gmail.com,Samuel Audet,2017-01-22T14:47:56Z,samuel.audet@gmail.com,190,183,7," * Add portable and efficient `totalPhysicalBytes()`, `availablePhysicalBytes()`, `totalProcessors()`, and `totalCores()` methods"
,src/test/java/org/bytedeco/javacpp/PointerTest.java,6851a060880d6fa0817e2d86a7938a92eb773f3d,Samuel Audet,2017-01-22T13:48:08Z,samuel.audet@gmail.com,Samuel Audet,2017-01-22T14:47:56Z,samuel.audet@gmail.com,190,183,7," * Add portable and efficient `totalPhysicalBytes()`, `availablePhysicalBytes()`, `totalProcessors()`, and `totalCores()` methods"
,src/main/java/org/bytedeco/javacpp/Loader.java,3c437d80e8bd72290dd207389e9ac8bcf5cc6b38,Samuel Audet,2017-01-18T14:28:06Z,samuel.audet@gmail.com,Samuel Audet,2017-01-18T14:28:06Z,samuel.audet@gmail.com,21,18,3," * Avoid `Loader` issues with spaces, etc in paths to library files (issue deeplearning4j/nd4j#1564)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,fe0a74cf6ec9d5f8b20d18b8d808fcfdf2cf0feb,Felix Andrews,2017-01-07T10:02:57Z,felix@nfrac.org,Samuel Audet,2017-01-07T10:02:57Z,samuel.audet@gmail.com,14,12,2, * Prevent `Generator` from creating duplicate `using` statements (pull #158)
,src/main/java/org/bytedeco/javacpp/Pointer.java,20a335c4d551767e6368dfe96e710ffdd56fdb8e,Samuel Audet,2017-01-03T07:37:14Z,samuel.audet@gmail.com,Samuel Audet,2017-01-03T07:37:14Z,samuel.audet@gmail.com,19,9,10,"Update version in the `pom.xml` file to 1.3.2-SNAPSHOT

 * Make `Pointer.asBuffer()` thread-safe (issue #155)"
,src/main/java/org/bytedeco/javacpp/Loader.java,de43b8253e2482f5211246f193b05d76d1df0235,Samuel Audet,2016-12-19T11:27:45Z,samuel.audet@gmail.com,Samuel Audet,2016-12-19T11:27:45Z,samuel.audet@gmail.com,89,88,1," * Fix broken `outputDirectory` property and corresponding `-d` command line option (issue #153)
 * Add `Loader.extractResources()` and `cacheResources()` methods to extract or cache all resources with given name"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,de43b8253e2482f5211246f193b05d76d1df0235,Samuel Audet,2016-12-19T11:27:45Z,samuel.audet@gmail.com,Samuel Audet,2016-12-19T11:27:45Z,samuel.audet@gmail.com,89,88,1," * Fix broken `outputDirectory` property and corresponding `-d` command line option (issue #153)
 * Add `Loader.extractResources()` and `cacheResources()` methods to extract or cache all resources with given name"
,src/main/java/org/bytedeco/javacpp/Loader.java,909e878ed1a45e14c652f2d08bc747ad350f5a1b,Samuel Audet,2016-12-18T12:58:24Z,samuel.audet@gmail.com,Samuel Audet,2016-12-18T12:58:24Z,samuel.audet@gmail.com,166,142,24,"Update version in the `pom.xml` file to 1.3.1-SNAPSHOT

 * Fix potential issues with `Parser` repeating the `@ByPtrPtr` or `@ByPtrRef` annotations on parameters
 * To support Scala singleton objects better, consider as `static` methods from objects that are not `Pointer`
 * Allow `Loader.extractResource()` and `cacheResource()` to extract or cache all files from a directory in a JAR file
 * Create version-less symbolic links to libraries in cache on those platforms where it is useful to link easily
 * Use `java.io.tmpdir` as fallback in `Loader.getCacheDir()`, and throw a clear exception on failure"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,909e878ed1a45e14c652f2d08bc747ad350f5a1b,Samuel Audet,2016-12-18T12:58:24Z,samuel.audet@gmail.com,Samuel Audet,2016-12-18T12:58:24Z,samuel.audet@gmail.com,166,142,24,"Update version in the `pom.xml` file to 1.3.1-SNAPSHOT

 * Fix potential issues with `Parser` repeating the `@ByPtrPtr` or `@ByPtrRef` annotations on parameters
 * To support Scala singleton objects better, consider as `static` methods from objects that are not `Pointer`
 * Allow `Loader.extractResource()` and `cacheResource()` to extract or cache all files from a directory in a JAR file
 * Create version-less symbolic links to libraries in cache on those platforms where it is useful to link easily
 * Use `java.io.tmpdir` as fallback in `Loader.getCacheDir()`, and throw a clear exception on failure"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,909e878ed1a45e14c652f2d08bc747ad350f5a1b,Samuel Audet,2016-12-18T12:58:24Z,samuel.audet@gmail.com,Samuel Audet,2016-12-18T12:58:24Z,samuel.audet@gmail.com,166,142,24,"Update version in the `pom.xml` file to 1.3.1-SNAPSHOT

 * Fix potential issues with `Parser` repeating the `@ByPtrPtr` or `@ByPtrRef` annotations on parameters
 * To support Scala singleton objects better, consider as `static` methods from objects that are not `Pointer`
 * Allow `Loader.extractResource()` and `cacheResource()` to extract or cache all files from a directory in a JAR file
 * Create version-less symbolic links to libraries in cache on those platforms where it is useful to link easily
 * Use `java.io.tmpdir` as fallback in `Loader.getCacheDir()`, and throw a clear exception on failure"
,src/main/java/org/bytedeco/javacpp/Pointer.java,89acc4fbfc59865a4eaea2e106409c4de1b5f444,Samuel Audet,2016-12-07T03:30:34Z,samuel.audet@gmail.com,Samuel Audet,2016-12-07T03:30:34Z,samuel.audet@gmail.com,18,8,10,Release version 1.3
,src/main/java/org/bytedeco/javacpp/BoolPointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/BytePointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/CharPointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/IntPointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/LongPointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/Pointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/test/java/org/bytedeco/javacpp/PointerTest.java,a30fa53b29ba29a60a81e3cd260999681b8ff1e5,Samuel Audet,2016-12-04T07:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-12-04T07:54:30Z,samuel.audet@gmail.com,121,86,35,"Update version in the `pom.xml` file to 1.3-SNAPSHOT

 * Print memory sizes in a human-readable format with `Pointer.formatBytes()`
 * Map standard `malloc()`, `calloc()`, `realloc()`, and `free()` functions (issue #136)"
,src/main/java/org/bytedeco/javacpp/Loader.java,e3d56b297ddcf600b555a4f4b5806e9f263475ed,Samuel Audet,2016-11-29T07:55:45Z,samuel.audet@gmail.com,Samuel Audet,2016-11-29T07:55:45Z,samuel.audet@gmail.com,33,20,13,"Release version 1.2.7

 * Fix `Loader` errors that could occur due to recent changes"
,src/main/java/org/bytedeco/javacpp/Loader.java,9cc0adc0f5cd4fb8596715a66c2ddfee811e0147,Samuel Audet,2016-11-28T02:47:07Z,samuel.audet@gmail.com,Samuel Audet,2016-11-28T05:48:00Z,samuel.audet@gmail.com,83,48,35," * Improve `Loader` handling of duplicate libraries found in different JAR files using symbolic links (useful for MKL, etc)"
,src/main/java/org/bytedeco/javacpp/Loader.java,fad8558253f938d1f6665e3f12d40585727ea19e,Samuel Audet,2016-11-27T09:38:18Z,samuel.audet@gmail.com,Samuel Audet,2016-11-27T09:38:18Z,samuel.audet@gmail.com,26,16,10, * Prevent `Loader` from overwriting previously extracted and renamed libraries (issue deeplearning4j/nd4j#1460)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,3abc7bf0c45612d9ca926b9a2ed15f65a4b23e77,Samuel Audet,2016-11-22T03:24:49Z,samuel.audet@gmail.com,Samuel Audet,2016-11-22T03:29:54Z,samuel.audet@gmail.com,4,4,0, * Allow users to define `NO_JNI_DETACH_THREAD` to prevent callbacks from reinitializing threads (issue #143)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,2277cbc008ca55393c9ed2ac9eea792810fc9ff9,Samuel Audet,2016-10-30T11:25:13Z,samuel.audet@gmail.com,Samuel Audet,2016-10-30T11:25:13Z,samuel.audet@gmail.com,16,14,2, * Add support for `decltype()` declarations (issue #135)
,src/main/java/org/bytedeco/javacpp/tools/Token.java,2277cbc008ca55393c9ed2ac9eea792810fc9ff9,Samuel Audet,2016-10-30T11:25:13Z,samuel.audet@gmail.com,Samuel Audet,2016-10-30T11:25:13Z,samuel.audet@gmail.com,16,14,2, * Add support for `decltype()` declarations (issue #135)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,0c8f834466eed138f9ad8efe8f3a58a5bcc605f6,Samuel Audet,2016-10-22T11:57:25Z,samuel.audet@gmail.com,Samuel Audet,2016-10-22T11:57:25Z,samuel.audet@gmail.com,5,3,2," * Fix `Generator` when a `FunctionPointer` contains methods that start with ""get"" or ""put"" (issue #137)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,32a1f42f36e094a9295fa2c739fb23aa1a439a1c,Samuel Audet,2016-10-20T08:31:33Z,samuel.audet@gmail.com,Samuel Audet,2016-10-20T08:31:33Z,samuel.audet@gmail.com,22,18,4," * Enhance `Parser` to let users skip the default values of arguments, as well as classes when one base class is skipped"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,042af0492a73fe39c21464e20fd7ff3000c4a1d8,Samuel Audet,2016-10-19T13:59:56Z,samuel.audet@gmail.com,Samuel Audet,2016-10-19T13:59:56Z,samuel.audet@gmail.com,11,6,5, * Fix `Parser` not properly mapping the type of `long` anonymous enums
,src/main/java/org/bytedeco/javacpp/tools/AdapterInformation.java,4bed6f319ed4b529f593e41e8ccbf6519fd24bcb,Samuel Audet,2016-10-15T11:17:05Z,samuel.audet@gmail.com,Samuel Audet,2016-10-15T11:17:05Z,samuel.audet@gmail.com,95,75,20," * Take into account `const` on function parameters when looking up in `InfoMap`, and fix some incorrectly translated macros into variables
 * Add to `InfoMap.defaults` more names that are reserved in Java, but not in C++
 * Add via `@ByPtrRef` support for function pointers passed by reference, as well as support for `Info.javaText` with `typedef`"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,4bed6f319ed4b529f593e41e8ccbf6519fd24bcb,Samuel Audet,2016-10-15T11:17:05Z,samuel.audet@gmail.com,Samuel Audet,2016-10-15T11:17:05Z,samuel.audet@gmail.com,95,75,20," * Take into account `const` on function parameters when looking up in `InfoMap`, and fix some incorrectly translated macros into variables
 * Add to `InfoMap.defaults` more names that are reserved in Java, but not in C++
 * Add via `@ByPtrRef` support for function pointers passed by reference, as well as support for `Info.javaText` with `typedef`"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,4bed6f319ed4b529f593e41e8ccbf6519fd24bcb,Samuel Audet,2016-10-15T11:17:05Z,samuel.audet@gmail.com,Samuel Audet,2016-10-15T11:17:05Z,samuel.audet@gmail.com,95,75,20," * Take into account `const` on function parameters when looking up in `InfoMap`, and fix some incorrectly translated macros into variables
 * Add to `InfoMap.defaults` more names that are reserved in Java, but not in C++
 * Add via `@ByPtrRef` support for function pointers passed by reference, as well as support for `Info.javaText` with `typedef`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,4bed6f319ed4b529f593e41e8ccbf6519fd24bcb,Samuel Audet,2016-10-15T11:17:05Z,samuel.audet@gmail.com,Samuel Audet,2016-10-15T11:17:05Z,samuel.audet@gmail.com,95,75,20," * Take into account `const` on function parameters when looking up in `InfoMap`, and fix some incorrectly translated macros into variables
 * Add to `InfoMap.defaults` more names that are reserved in Java, but not in C++
 * Add via `@ByPtrRef` support for function pointers passed by reference, as well as support for `Info.javaText` with `typedef`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,bf899dce52dd679b11ddebb576ce596bebbfaf63,Samuel Audet,2016-10-10T08:32:25Z,samuel.audet@gmail.com,Samuel Audet,2016-10-10T08:33:09Z,samuel.audet@gmail.com,3,2,1, * Make sure `Parser` exhausts all combinations of method parameter types even with duplicates (issue bytedeco/javacv#518)
,src/main/java/org/bytedeco/javacpp/Loader.java,076fd04173bf305eed39d8a64da79acbd5105ef2,Samuel Audet,2016-10-10T03:38:07Z,samuel.audet@gmail.com,Samuel Audet,2016-10-10T03:38:07Z,samuel.audet@gmail.com,178,93,85, * Make `Loader` cache libraries (in `~/.javacpp/cache/` by default) instead of using temporary files
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,c26e91aaada72dbd7b295206ad09b316a9f50fc6,Samuel Audet,2016-10-10T00:08:25Z,samuel.audet@gmail.com,Samuel Audet,2016-10-10T00:08:25Z,samuel.audet@gmail.com,5,3,2, * Have `Parser` annotate the `allocate()` functions and not the actual constructors (issue bytedeco/javacpp-presets#297)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,b349b4249de72a0d1994c37e619ff3483259b980,Samuel Audet,2016-10-09T08:30:16Z,samuel.audet@gmail.com,Samuel Audet,2016-10-09T08:30:16Z,samuel.audet@gmail.com,16,13,3," * Fix `Parser` handling of `class`, `struct`, or `union` types with variables declared in the same statement"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,cba7a5918bac72a21d3da2beaf235019105da00d,Samuel Audet,2016-10-08T13:47:59Z,samuel.audet@gmail.com,Samuel Audet,2016-10-08T13:47:59Z,samuel.audet@gmail.com,10,7,3, * Make sure default values placed in `nullValue` by the `Parser` have the right type (issue bytedeco/javacv#518)
,src/main/java/org/bytedeco/javacpp/Pointer.java,8344c5990745d052feba76e16f65399e829a87ab,Samuel Audet,2016-10-08T09:44:30Z,samuel.audet@gmail.com,Samuel Audet,2016-10-08T11:05:21Z,samuel.audet@gmail.com,20,13,7, * Accelerate call to `Pointer.physicalBytes()` on Linux (issue #133)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,8344c5990745d052feba76e16f65399e829a87ab,Samuel Audet,2016-10-08T09:44:30Z,samuel.audet@gmail.com,Samuel Audet,2016-10-08T11:05:21Z,samuel.audet@gmail.com,20,13,7, * Accelerate call to `Pointer.physicalBytes()` on Linux (issue #133)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,ed7fc0b20a0110c0479dae8cada6dbe7710a5e1e,Samuel Audet,2016-10-07T15:03:55Z,samuel.audet@gmail.com,Samuel Audet,2016-10-08T03:15:08Z,samuel.audet@gmail.com,16,15,1, * Fix `Parser` incorrectly skipping over some template function declarations
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,f5ffac5996070c15dbe48638d96f8373f7e65079,Samuel Audet,2016-09-30T07:00:04Z,samuel.audet@gmail.com,Samuel Audet,2016-09-30T07:21:16Z,samuel.audet@gmail.com,34,23,11," * Allow C++ types to be prefixed by `class`, `struct`, or `union` to work around name clashes (pull bytedeco/javacpp-presets#266)"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,f5ffac5996070c15dbe48638d96f8373f7e65079,Samuel Audet,2016-09-30T07:00:04Z,samuel.audet@gmail.com,Samuel Audet,2016-09-30T07:21:16Z,samuel.audet@gmail.com,34,23,11," * Allow C++ types to be prefixed by `class`, `struct`, or `union` to work around name clashes (pull bytedeco/javacpp-presets#266)"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,22b68b88c3d3d4b87e9ed85904936f902f96354a,Samuel Audet,2016-09-22T08:26:20Z,samuel.audet@gmail.com,Samuel Audet,2016-09-22T08:26:20Z,samuel.audet@gmail.com,18,15,3, * Properly expand the special predefined `__COUNTER__` macro (pull bytedeco/javacpp-presets#266)
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,22b68b88c3d3d4b87e9ed85904936f902f96354a,Samuel Audet,2016-09-22T08:26:20Z,samuel.audet@gmail.com,Samuel Audet,2016-09-22T08:26:20Z,samuel.audet@gmail.com,18,15,3, * Properly expand the special predefined `__COUNTER__` macro (pull bytedeco/javacpp-presets#266)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,30c7fcd9af190652ff56a07ad41a2538acd3c3f1,Samuel Audet,2016-09-22T05:26:22Z,samuel.audet@gmail.com,Samuel Audet,2016-09-22T05:26:22Z,samuel.audet@gmail.com,19,16,3, * Create all missing directories in the paths to the source files created by `Generator`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,1a28e44dea706988a1f5e09978f2ffe19b3b8c94,Samuel Audet,2016-09-14T08:21:46Z,samuel.audet@gmail.com,Samuel Audet,2016-09-14T08:21:46Z,samuel.audet@gmail.com,40,26,14," * Insure `Parser` properly ignores the `auto`, `mutable`, `register`, `thread_local`, and `volatile` C++ keywords for storage classes
 * Fix `Generator` and `Parser` for types like `std::unordered_map<std::string,std::pair<int,int> >` (issue bytedeco/javacpp-presets#266)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,1a28e44dea706988a1f5e09978f2ffe19b3b8c94,Samuel Audet,2016-09-14T08:21:46Z,samuel.audet@gmail.com,Samuel Audet,2016-09-14T08:21:46Z,samuel.audet@gmail.com,40,26,14," * Insure `Parser` properly ignores the `auto`, `mutable`, `register`, `thread_local`, and `volatile` C++ keywords for storage classes
 * Fix `Generator` and `Parser` for types like `std::unordered_map<std::string,std::pair<int,int> >` (issue bytedeco/javacpp-presets#266)"
,src/main/java/org/bytedeco/javacpp/tools/Token.java,1a28e44dea706988a1f5e09978f2ffe19b3b8c94,Samuel Audet,2016-09-14T08:21:46Z,samuel.audet@gmail.com,Samuel Audet,2016-09-14T08:21:46Z,samuel.audet@gmail.com,40,26,14," * Insure `Parser` properly ignores the `auto`, `mutable`, `register`, `thread_local`, and `volatile` C++ keywords for storage classes
 * Fix `Generator` and `Parser` for types like `std::unordered_map<std::string,std::pair<int,int> >` (issue bytedeco/javacpp-presets#266)"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,e6a243a280adc734cb330d9ba9ccf697777e1d5c,Samuel Audet,2016-09-13T03:26:29Z,samuel.audet@gmail.com,Samuel Audet,2016-09-13T03:26:29Z,samuel.audet@gmail.com,5,4,1," * Add `std::forward_list`, `std::priority_queue`, `std::unordered_map`, and `std::unordered_set` to the list of ""basic/containers"" in `InfoMap` (issue bytedeco/javacpp-presets#266)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,9e21bb74fff5e2232f29ff7966bff1f045e957c4,Samuel Audet,2016-09-13T03:21:52Z,samuel.audet@gmail.com,Samuel Audet,2016-09-13T03:21:52Z,samuel.audet@gmail.com,9,7,2,Add test for `Pointer.physicalBytes()`
,src/test/java/org/bytedeco/javacpp/PointerTest.java,9e21bb74fff5e2232f29ff7966bff1f045e957c4,Samuel Audet,2016-09-13T03:21:52Z,samuel.audet@gmail.com,Samuel Audet,2016-09-13T03:21:52Z,samuel.audet@gmail.com,9,7,2,Add test for `Pointer.physicalBytes()`
,src/main/java/org/bytedeco/javacpp/Loader.java,70a31364b5cf00a561f71030daf6da1bc42354cd,Samuel Audet,2016-08-31T08:12:15Z,samuel.audet@gmail.com,GitHub,2016-08-31T08:12:15Z,noreply@github.com,5,3,2,"Merge pull request #123 from vb216/master

 * Work around `linux-armhf` not being properly detected with OpenJDK (issue #105)"
,src/main/java/org/bytedeco/javacpp/BoolPointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/BytePointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/CharPointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/IntPointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/LongPointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,f93e8a7851b5810cedb3d06166c37c6660555135,Samuel Audet,2016-08-31T06:42:13Z,samuel.audet@gmail.com,Samuel Audet,2016-08-31T06:42:38Z,samuel.audet@gmail.com,77,66,11,Throw more information when `OutOfMemoryError` occurs on `allocateArray()` for `Pointer` of primitive types
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,7de1d1666fcf540885852aadd7ef96ad21fb95d4,Samuel Audet,2016-08-30T04:52:22Z,samuel.audet@gmail.com,Samuel Audet,2016-08-30T04:52:22Z,samuel.audet@gmail.com,8,5,3, * Fix `Parser` not accepting namespace aliases with `::` tokens in them (issue bytedeco/javacpp-presets#265)
,src/main/java/org/bytedeco/javacpp/Pointer.java,d666a119cf858e0df663e486c08973d19bcb670b,Samuel Audet,2016-08-30T04:23:31Z,samuel.audet@gmail.com,Samuel Audet,2016-08-30T04:23:31Z,samuel.audet@gmail.com,23,16,7,Make `Pointer.physicalBytes()` optional to preserve backward compatibility with old binaries
,src/main/java/org/bytedeco/javacpp/Pointer.java,851583a17e176733ec4b822f3b387184c9f15ccb,Samuel Audet,2016-08-28T10:51:25Z,samuel.audet@gmail.com,Samuel Audet,2016-08-28T13:34:12Z,samuel.audet@gmail.com,118,101,17," * Add ""org.bytedeco.javacpp.maxphysicalbytes"" system property to force calls to `System.gc()` based on `Pointer.physicalBytes()`
 * Allow strings ending with ""t"", ""g"", ""m"", etc to specify the number of bytes in system properties (issue #125)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,851583a17e176733ec4b822f3b387184c9f15ccb,Samuel Audet,2016-08-28T10:51:25Z,samuel.audet@gmail.com,Samuel Audet,2016-08-28T13:34:12Z,samuel.audet@gmail.com,118,101,17," * Add ""org.bytedeco.javacpp.maxphysicalbytes"" system property to force calls to `System.gc()` based on `Pointer.physicalBytes()`
 * Allow strings ending with ""t"", ""g"", ""m"", etc to specify the number of bytes in system properties (issue #125)"
,src/test/java/org/bytedeco/javacpp/PointerTest.java,851583a17e176733ec4b822f3b387184c9f15ccb,Samuel Audet,2016-08-28T10:51:25Z,samuel.audet@gmail.com,Samuel Audet,2016-08-28T13:34:12Z,samuel.audet@gmail.com,118,101,17," * Add ""org.bytedeco.javacpp.maxphysicalbytes"" system property to force calls to `System.gc()` based on `Pointer.physicalBytes()`
 * Allow strings ending with ""t"", ""g"", ""m"", etc to specify the number of bytes in system properties (issue #125)"
,src/main/java/org/bytedeco/javacpp/tools/Info.java,55f675b38efad0610d71bc2f450656eda2ddc96b,Samuel Audet,2016-08-26T08:49:11Z,samuel.audet@gmail.com,Samuel Audet,2016-08-26T11:38:30Z,samuel.audet@gmail.com,66,54,12, * Add `Info.linePatterns` to limit the lines from header files that the `Parser` has to process
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,55f675b38efad0610d71bc2f450656eda2ddc96b,Samuel Audet,2016-08-26T08:49:11Z,samuel.audet@gmail.com,Samuel Audet,2016-08-26T11:38:30Z,samuel.audet@gmail.com,66,54,12, * Add `Info.linePatterns` to limit the lines from header files that the `Parser` has to process
,src/main/java/org/bytedeco/javacpp/tools/ParserException.java,55f675b38efad0610d71bc2f450656eda2ddc96b,Samuel Audet,2016-08-26T08:49:11Z,samuel.audet@gmail.com,Samuel Audet,2016-08-26T11:38:30Z,samuel.audet@gmail.com,66,54,12, * Add `Info.linePatterns` to limit the lines from header files that the `Parser` has to process
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,55f675b38efad0610d71bc2f450656eda2ddc96b,Samuel Audet,2016-08-26T08:49:11Z,samuel.audet@gmail.com,Samuel Audet,2016-08-26T11:38:30Z,samuel.audet@gmail.com,66,54,12, * Add `Info.linePatterns` to limit the lines from header files that the `Parser` has to process
,src/main/java/org/bytedeco/javacpp/annotation/UniquePtr.java,8dcac0905aa3a885791fa492556ac0d0ce517c71,Samuel Audet,2016-08-20T23:33:12Z,samuel.audet@gmail.com,Samuel Audet,2016-08-20T23:33:12Z,samuel.audet@gmail.com,123,119,4, * Add `UniquePtrAdapter` and corresponding `@UniquePtr` annotation to support `unique_ptr` containers (issue bytedeco/javacpp-presets#266)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,8dcac0905aa3a885791fa492556ac0d0ce517c71,Samuel Audet,2016-08-20T23:33:12Z,samuel.audet@gmail.com,Samuel Audet,2016-08-20T23:33:12Z,samuel.audet@gmail.com,123,119,4, * Add `UniquePtrAdapter` and corresponding `@UniquePtr` annotation to support `unique_ptr` containers (issue bytedeco/javacpp-presets#266)
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,8dcac0905aa3a885791fa492556ac0d0ce517c71,Samuel Audet,2016-08-20T23:33:12Z,samuel.audet@gmail.com,Samuel Audet,2016-08-20T23:33:12Z,samuel.audet@gmail.com,123,119,4, * Add `UniquePtrAdapter` and corresponding `@UniquePtr` annotation to support `unique_ptr` containers (issue bytedeco/javacpp-presets#266)
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,8dcac0905aa3a885791fa492556ac0d0ce517c71,Samuel Audet,2016-08-20T23:33:12Z,samuel.audet@gmail.com,Samuel Audet,2016-08-20T23:33:12Z,samuel.audet@gmail.com,123,119,4, * Add `UniquePtrAdapter` and corresponding `@UniquePtr` annotation to support `unique_ptr` containers (issue bytedeco/javacpp-presets#266)
,src/test/resources/org/bytedeco/javacpp/AdapterTest.h,8dcac0905aa3a885791fa492556ac0d0ce517c71,Samuel Audet,2016-08-20T23:33:12Z,samuel.audet@gmail.com,Samuel Audet,2016-08-20T23:33:12Z,samuel.audet@gmail.com,123,119,4, * Add `UniquePtrAdapter` and corresponding `@UniquePtr` annotation to support `unique_ptr` containers (issue bytedeco/javacpp-presets#266)
,src/main/java/org/bytedeco/javacpp/Pointer.java,a394220ee844dc26585d7f75390173127de0b21f,Samuel Audet,2016-08-20T07:08:31Z,samuel.audet@gmail.com,Samuel Audet,2016-08-20T07:08:31Z,samuel.audet@gmail.com,95,43,52,Simplify synchronization of memory allocation to avoid `OutOfMemoryError` when low on memory
,src/main/java/org/bytedeco/javacpp/Loader.java,642b6d9823a290488e8c4dd8f579cf3e414ab3b3,vb216,2016-08-14T10:06:54Z,ubuntu@ip-172-31-36-252.us-west-2.compute.internal,vb216,2016-08-14T10:06:54Z,ubuntu@ip-172-31-36-252.us-west-2.compute.internal,5,3,2,Add handling for OpenJDK to armhf build
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,3f7160e7211579a3fe9b0e7ce360744cdfb20757,Samuel Audet,2016-08-11T15:12:53Z,samuel.audet@gmail.com,Samuel Audet,2016-08-11T15:12:53Z,samuel.audet@gmail.com,4,2,2,Fix `Parser` incorrectly escaping quotes for multiline `nullValue` of `@ByRef` or `@ByVal`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,ff8b9e3f2c3580b731b4db795a84aa6b5520f67c,Samuel Audet,2016-08-11T15:08:27Z,samuel.audet@gmail.com,GitHub,2016-08-11T15:08:27Z,noreply@github.com,2,1,1,"Merge pull request #122 from mirosval/master

 * Fix `Parser` not expecting `friend class` declarations that start with `::`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,f0c198c7a36ad15866f1e909ac172797055ed6f4,Miroslav Zoricak,2016-08-11T13:34:32Z,miroslav.zoricak@numberfour.eu,Miroslav Zoricak,2016-08-11T13:34:32Z,miroslav.zoricak@numberfour.eu,2,1,1,"Fix #264 unexpected token ::

This problem arose with tensorflow 0.10, javacpp was unable to parse a
file that contained friend class with global scope identifier."
,src/main/java/org/bytedeco/javacpp/Pointer.java,ad0ae659b648dbeeb1d08f6df42fc449418a5144,Samuel Audet,2016-08-10T03:49:18Z,samuel.audet@gmail.com,Samuel Audet,2016-08-10T03:49:18Z,samuel.audet@gmail.com,76,61,15, * Synchronize memory allocation in `Pointer` when low on memory to avoid `OutOfMemoryError`
,src/test/java/org/bytedeco/javacpp/PointerTest.java,ad0ae659b648dbeeb1d08f6df42fc449418a5144,Samuel Audet,2016-08-10T03:49:18Z,samuel.audet@gmail.com,Samuel Audet,2016-08-10T03:49:18Z,samuel.audet@gmail.com,76,61,15, * Synchronize memory allocation in `Pointer` when low on memory to avoid `OutOfMemoryError`
,src/main/java/org/bytedeco/javacpp/indexer/Indexable.java,6ee928f3b6f8edb05299f5d0489ccfddc4f946b1,Samuel Audet,2016-08-06T06:30:47Z,samuel.audet@gmail.com,Samuel Audet,2016-08-06T06:30:47Z,samuel.audet@gmail.com,3,3,0, * Make it clear that `Indexable.createIndexer()` can throw a `NullPointerException` (issue bytedeco/javacv#437)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,0b9f92ff3fc209d7ea2998f72ff0409f1a836669,Samuel Audet,2016-08-05T14:53:20Z,samuel.audet@gmail.com,GitHub,2016-08-05T14:53:20Z,noreply@github.com,3,2,1,"Merge pull request #119 from ashleyj/master

 * Escape quotes when parsing default value for the `nullValue` of `@ByRef` or `@ByVal`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,f00d31371613b04b1d116cc37b5cdf65924f2bb9,Ashley,2016-08-05T13:03:11Z,ashley.wil@gmail.com,Ashley,2016-08-05T13:03:11Z,ashley.wil@gmail.com,3,2,1,escape empty strings for nullValue
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,4c8bcd3b0f0cccf808f95b827999747fa0f81fed,Samuel Audet,2016-08-05T07:24:15Z,samuel.audet@gmail.com,Samuel Audet,2016-08-05T07:24:15Z,samuel.audet@gmail.com,3,2,1, * Let `Parser` accept identifiers in addition to integer literals for bit fields (issue #118)
,src/main/java/org/bytedeco/javacpp/Loader.java,e709aee829609f2b6a8ae22c5cf85088ee28a8fa,Samuel Audet,2016-08-05T01:34:10Z,samuel.audet@gmail.com,Samuel Audet,2016-08-05T01:34:10Z,samuel.audet@gmail.com,4,3,1, * Fix `Loader.load()` not renaming a library when previously loaded under a different name
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,1380e19f51dd12b7083356e3601f6b5fc763da35,Samuel Audet,2016-07-29T05:52:29Z,samuel.audet@gmail.com,Samuel Audet,2016-07-29T05:52:29Z,samuel.audet@gmail.com,193,136,57, * Add support for data member pointers as pseudo-`FunctionPointer` (issue #114)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,1380e19f51dd12b7083356e3601f6b5fc763da35,Samuel Audet,2016-07-29T05:52:29Z,samuel.audet@gmail.com,Samuel Audet,2016-07-29T05:52:29Z,samuel.audet@gmail.com,193,136,57, * Add support for data member pointers as pseudo-`FunctionPointer` (issue #114)
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,d49be20b628fd00350271e429455be0df1604140,Samuel Audet,2016-07-23T07:02:47Z,samuel.audet@gmail.com,Samuel Audet,2016-07-23T07:02:47Z,samuel.audet@gmail.com,175,115,60," * Include new `platform.compiler.debug` options inside the default properties file (pull #90)
 * Always use the `platform.compiler.default` options unless `@Platform(compiler=""!default"", ...)` is specified
 * Move optimization options from `platform.compiler.output` to `platform.compiler.default`, allowing users to override"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,1d3b5de68d6e8bdcba810a50f1fc308400840388,Samuel Audet,2016-07-21T10:59:02Z,samuel.audet@gmail.com,Samuel Audet,2016-07-22T05:30:42Z,samuel.audet@gmail.com,7,6,1, * Create all missing directories in the path to the target file of `Parser`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,307ca4ef668ba2cd9611875b3a818cb502f2ee17,Samuel Audet,2016-07-15T13:53:01Z,samuel.audet@gmail.com,Samuel Audet,2016-07-15T13:53:01Z,samuel.audet@gmail.com,11,6,5," * Parse properly custom `enum` types, found after the ':' token in C++11"
,src/main/java/org/bytedeco/javacpp/Pointer.java,badbc45e9ccdb32df7b9222721ddea1b64bf0ba6,Samuel Audet,2016-07-14T01:37:28Z,samuel.audet@gmail.com,Samuel Audet,2016-07-14T01:37:28Z,samuel.audet@gmail.com,22,18,4," * Output compiled libraries to user specified class path by default for input classes inside JAR files, etc"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,badbc45e9ccdb32df7b9222721ddea1b64bf0ba6,Samuel Audet,2016-07-14T01:37:28Z,samuel.audet@gmail.com,Samuel Audet,2016-07-14T01:37:28Z,samuel.audet@gmail.com,22,18,4," * Output compiled libraries to user specified class path by default for input classes inside JAR files, etc"
,src/main/java/org/bytedeco/javacpp/tools/ClassScanner.java,badbc45e9ccdb32df7b9222721ddea1b64bf0ba6,Samuel Audet,2016-07-14T01:37:28Z,samuel.audet@gmail.com,Samuel Audet,2016-07-14T01:37:28Z,samuel.audet@gmail.com,22,18,4," * Output compiled libraries to user specified class path by default for input classes inside JAR files, etc"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,badbc45e9ccdb32df7b9222721ddea1b64bf0ba6,Samuel Audet,2016-07-14T01:37:28Z,samuel.audet@gmail.com,Samuel Audet,2016-07-14T01:37:28Z,samuel.audet@gmail.com,22,18,4," * Output compiled libraries to user specified class path by default for input classes inside JAR files, etc"
,src/main/java/org/bytedeco/javacpp/indexer/HalfArrayIndexer.java,0098168a51fe3935ae5450f9d90b570f96507a85,Samuel Audet,2016-07-12T05:01:07Z,samuel.audet@gmail.com,Samuel Audet,2016-07-12T05:01:07Z,samuel.audet@gmail.com,645,645,0, * Add `HalfIndexer` to access `short` arrays as half-precision floating point numbers
,src/main/java/org/bytedeco/javacpp/indexer/HalfBufferIndexer.java,0098168a51fe3935ae5450f9d90b570f96507a85,Samuel Audet,2016-07-12T05:01:07Z,samuel.audet@gmail.com,Samuel Audet,2016-07-12T05:01:07Z,samuel.audet@gmail.com,645,645,0, * Add `HalfIndexer` to access `short` arrays as half-precision floating point numbers
,src/main/java/org/bytedeco/javacpp/indexer/HalfIndexer.java,0098168a51fe3935ae5450f9d90b570f96507a85,Samuel Audet,2016-07-12T05:01:07Z,samuel.audet@gmail.com,Samuel Audet,2016-07-12T05:01:07Z,samuel.audet@gmail.com,645,645,0, * Add `HalfIndexer` to access `short` arrays as half-precision floating point numbers
,src/main/java/org/bytedeco/javacpp/indexer/HalfRawIndexer.java,0098168a51fe3935ae5450f9d90b570f96507a85,Samuel Audet,2016-07-12T05:01:07Z,samuel.audet@gmail.com,Samuel Audet,2016-07-12T05:01:07Z,samuel.audet@gmail.com,645,645,0, * Add `HalfIndexer` to access `short` arrays as half-precision floating point numbers
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,0098168a51fe3935ae5450f9d90b570f96507a85,Samuel Audet,2016-07-12T05:01:07Z,samuel.audet@gmail.com,Samuel Audet,2016-07-12T05:01:07Z,samuel.audet@gmail.com,645,645,0, * Add `HalfIndexer` to access `short` arrays as half-precision floating point numbers
,src/test/java/org/bytedeco/javacpp/PointerTest.java,8a7b271b6c8b50af216c22eca5350d951a26cca5,Samuel Audet,2016-07-01T04:47:10Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T04:50:15Z,samuel.audet@gmail.com,20,17,3,Fix potentially failing tests
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/ByteRawIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/CharArrayIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/CharBufferIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/CharRawIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/DoubleArrayIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/DoubleBufferIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/DoubleRawIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/FloatArrayIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/FloatBufferIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/FloatRawIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/IntArrayIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/IntBufferIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/IntRawIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/LongArrayIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/LongBufferIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/LongRawIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/ShortArrayIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/ShortBufferIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/ShortRawIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/UByteArrayIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/UByteBufferIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/UByteRawIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/UShortArrayIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/UShortBufferIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/indexer/UShortRawIndexer.java,104656712d0f51804912378dd5f92d5fc6e1f618,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,Samuel Audet,2016-07-01T03:29:15Z,samuel.audet@gmail.com,75,39,36, * Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)
,src/main/java/org/bytedeco/javacpp/Pointer.java,f56082d24163fbfea233b07904e266211d93a2e5,Samuel Audet,2016-06-30T01:35:27Z,samuel.audet@gmail.com,Samuel Audet,2016-06-30T01:35:27Z,samuel.audet@gmail.com,53,43,10," * Add ""org.bytedeco.javacpp.maxretries"" system property, the number times to call `System.gc()` before giving up (defaults to 10)"
,src/test/java/org/bytedeco/javacpp/PointerTest.java,f56082d24163fbfea233b07904e266211d93a2e5,Samuel Audet,2016-06-30T01:35:27Z,samuel.audet@gmail.com,Samuel Audet,2016-06-30T01:35:27Z,samuel.audet@gmail.com,53,43,10," * Add ""org.bytedeco.javacpp.maxretries"" system property, the number times to call `System.gc()` before giving up (defaults to 10)"
,src/main/java/org/bytedeco/javacpp/Pointer.java,c90d37ed905936aace411fdde7136c05b0f735bb,Samuel Audet,2016-06-29T11:14:15Z,samuel.audet@gmail.com,Samuel Audet,2016-06-29T11:14:15Z,samuel.audet@gmail.com,31,27,4, * Deallocate native memory in a dedicated thread to reduce lock contention (issue #103)
,src/main/java/org/bytedeco/javacpp/Loader.java,9019534988669383159a1d82ecfc9cf38976afba,Samuel Audet,2016-06-23T08:51:13Z,samuel.audet@gmail.com,Samuel Audet,2016-06-23T08:51:13Z,samuel.audet@gmail.com,16,10,6, * Prevent Android system libraries from getting copied or extracted
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,9019534988669383159a1d82ecfc9cf38976afba,Samuel Audet,2016-06-23T08:51:13Z,samuel.audet@gmail.com,Samuel Audet,2016-06-23T08:51:13Z,samuel.audet@gmail.com,16,10,6, * Prevent Android system libraries from getting copied or extracted
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,75f4fb3fd09402c92788015114952ccb11f69937,Samuel Audet,2016-06-21T03:46:27Z,samuel.audet@gmail.com,Samuel Audet,2016-06-21T03:46:27Z,samuel.audet@gmail.com,9,9,0, * Insert in `Indexer` an `indexable` field optionally set by the user for convenience
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,cda036fae61fc3b32485713f88b5f8748ad52e5a,Samuel Audet,2016-06-13T14:06:36Z,samuel.audet@gmail.com,Samuel Audet,2016-06-13T14:06:36Z,samuel.audet@gmail.com,10,7,3, * Fix potential `ParserException` on comments found after annotations before function declarations
,src/main/java/org/bytedeco/javacpp/Loader.java,c731d1df8fda204a58a755bebc35b0d204aec587,Samuel Audet,2016-06-10T13:26:00Z,samuel.audet@gmail.com,Samuel Audet,2016-06-10T13:26:00Z,samuel.audet@gmail.com,112,77,35," * Fix `IndexerTest` potentially failing with `OutOfMemoryError` (issue bytedeco/javacpp-presets#234)
 * Preload libraries to work around some cases when they refuse to load once renamed (issue deeplearning4j/libnd4j#235)
 * Fix compilation error on some `linux-ppc64le` platforms (issue deeplearning4j/libnd4j#232)"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,c731d1df8fda204a58a755bebc35b0d204aec587,Samuel Audet,2016-06-10T13:26:00Z,samuel.audet@gmail.com,Samuel Audet,2016-06-10T13:26:00Z,samuel.audet@gmail.com,112,77,35," * Fix `IndexerTest` potentially failing with `OutOfMemoryError` (issue bytedeco/javacpp-presets#234)
 * Preload libraries to work around some cases when they refuse to load once renamed (issue deeplearning4j/libnd4j#235)
 * Fix compilation error on some `linux-ppc64le` platforms (issue deeplearning4j/libnd4j#232)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,396d19f49c5e6d4b6b3adfc0489b4b7545d0d1ff,Samuel Audet,2016-05-31T03:48:18Z,samuel.audet@gmail.com,Samuel Audet,2016-05-31T03:49:26Z,samuel.audet@gmail.com,3,3,0, * Make sure `JavaCPP_getStringBytes()` is defined to handle exception messages when using callbacks
,src/main/java/org/bytedeco/javacpp/Loader.java,a0bf27ce3cd41c35b3513e0e967f5facb4cda646,Samuel Audet,2016-05-26T04:01:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-26T04:01:30Z,samuel.audet@gmail.com,56,32,24,* Fix `Loader` crashing on Android (issue bytedeco/javacv#412)
,src/main/java/org/bytedeco/javacpp/Loader.java,dbd1826f11af33da8c65f6e6c8b58219e7458c7a,Samuel Audet,2016-05-24T09:15:45Z,samuel.audet@gmail.com,Samuel Audet,2016-05-24T09:15:45Z,samuel.audet@gmail.com,4,4,0," * Fix `NullPointerException` on ""generic"" platforms"
,src/main/java/org/bytedeco/javacpp/BoolPointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/BytePointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/CharPointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/IntPointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/LongPointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,587f9e836d547f4d7ea72306a7846fd7cfd888bc,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,Samuel Audet,2016-05-23T03:42:30Z,samuel.audet@gmail.com,34,34,0, * Throw `OutOfMemoryError` on `allocateArray()` for `Pointer` of primitive types with `size > 0 && address == 0`
,src/main/java/org/bytedeco/javacpp/Loader.java,91762facdb75e7087a8ca65282f5452098e3ed07,Samuel Audet,2016-05-21T14:19:39Z,samuel.audet@gmail.com,Samuel Audet,2016-05-21T14:19:39Z,samuel.audet@gmail.com,89,64,25," * Add the ability the specify, after a `#` character, the output filename of libraries extracted by `Loader.load()`"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,dd7ccdf4fd88ec3ce67cfc0510fda23a79359284,Samuel Audet,2016-05-21T07:54:06Z,samuel.audet@gmail.com,Samuel Audet,2016-05-21T07:54:06Z,samuel.audet@gmail.com,6,6,0, * Consider `FunctionPointer` annotated with empty `@Namespace` as non-member function pointers (issue #99)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,1d971f043afa175175adf90197316df64bb9c69b,Samuel Audet,2016-05-14T23:38:37Z,samuel.audet@gmail.com,Samuel Audet,2016-05-15T16:56:30Z,samuel.audet@gmail.com,22,12,10,Release version 1.2
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,1d971f043afa175175adf90197316df64bb9c69b,Samuel Audet,2016-05-14T23:38:37Z,samuel.audet@gmail.com,Samuel Audet,2016-05-15T16:56:30Z,samuel.audet@gmail.com,22,12,10,Release version 1.2
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,dcf71343a516b0c3c03790701d09d91484215c12,Samuel Audet,2016-05-13T08:49:41Z,samuel.audet@gmail.com,Samuel Audet,2016-05-13T08:49:41Z,samuel.audet@gmail.com,8,6,2, * Fix `NullPointerException` in `Builder` on inaccessible directories
,src/test/java/org/bytedeco/javacpp/PointerTest.java,ad24046000ecf455e94a14865ecca2c56e29fa17,Samuel Audet,2016-05-11T14:00:27Z,samuel.audet@gmail.com,Samuel Audet,2016-05-11T14:00:27Z,samuel.audet@gmail.com,16,16,0,Prevent pointers from getting prematurely garbage collected in test
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,01248c576a6468313ef2e7d11812def7c0456ec8,Samuel Audet,2016-05-08T11:28:48Z,samuel.audet@gmail.com,Samuel Audet,2016-05-08T11:28:48Z,samuel.audet@gmail.com,12,8,4, * Fix `NullPointerException` in `Builder` on invalid `java.home` system property
,src/main/java/org/bytedeco/javacpp/Pointer.java,f55847f442f304fa60af70023604c6eff4262392,Samuel Audet,2016-05-06T14:19:24Z,samuel.audet@gmail.com,Samuel Audet,2016-05-06T14:19:24Z,samuel.audet@gmail.com,11,7,4,Wait a bit longer for `System.gc()` to reclaim memory
,src/main/java/org/bytedeco/javacpp/Loader.java,e987b69e3a818de5cdd81281443eaa837bfd7243,Samuel Audet,2016-05-06T02:23:02Z,samuel.audet@gmail.com,Samuel Audet,2016-05-06T02:23:02Z,samuel.audet@gmail.com,130,76,54, * Add parameters to `Loader.load()` offering more flexibility over the platform properties and library paths
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,e987b69e3a818de5cdd81281443eaa837bfd7243,Samuel Audet,2016-05-06T02:23:02Z,samuel.audet@gmail.com,Samuel Audet,2016-05-06T02:23:02Z,samuel.audet@gmail.com,130,76,54, * Add parameters to `Loader.load()` offering more flexibility over the platform properties and library paths
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,e987b69e3a818de5cdd81281443eaa837bfd7243,Samuel Audet,2016-05-06T02:23:02Z,samuel.audet@gmail.com,Samuel Audet,2016-05-06T02:23:02Z,samuel.audet@gmail.com,130,76,54, * Add parameters to `Loader.load()` offering more flexibility over the platform properties and library paths
,src/main/java/org/bytedeco/javacpp/Pointer.java,ed4efbc7edbf208ef4d847e1dacf9265c9ddf19e,Samuel Audet,2016-04-25T13:33:10Z,samuel.audet@gmail.com,Samuel Audet,2016-04-25T13:33:10Z,samuel.audet@gmail.com,25,18,7,Add `Pointer.maxBytes()` and `totalBytes()` to monitor amount of memory tracked
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,ed4efbc7edbf208ef4d847e1dacf9265c9ddf19e,Samuel Audet,2016-04-25T13:33:10Z,samuel.audet@gmail.com,Samuel Audet,2016-04-25T13:33:10Z,samuel.audet@gmail.com,25,18,7,Add `Pointer.maxBytes()` and `totalBytes()` to monitor amount of memory tracked
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,b8d6b9719b0b778482e9723d88c5abe9356d7802,Samuel Audet,2016-04-17T06:20:53Z,samuel.audet@gmail.com,Samuel Audet,2016-04-17T06:20:53Z,samuel.audet@gmail.com,95,81,14, * Treat all `String` with `Charset.defaultCharset()` (or define `MODIFIED_UTF8_STRING` for old behavior) (issue #70)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,331b93f4bf8e98de72c426c2da29185a48d69c83,Samuel Audet,2016-04-17T05:48:39Z,samuel.audet@gmail.com,Samuel Audet,2016-04-17T05:57:23Z,samuel.audet@gmail.com,35,33,2, * Fix `NullPointerException` in `Parser` on variadic templates (issue #81)
,src/main/java/org/bytedeco/javacpp/tools/TemplateMap.java,331b93f4bf8e98de72c426c2da29185a48d69c83,Samuel Audet,2016-04-17T05:48:39Z,samuel.audet@gmail.com,Samuel Audet,2016-04-17T05:57:23Z,samuel.audet@gmail.com,35,33,2, * Fix `NullPointerException` in `Parser` on variadic templates (issue #81)
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,331b93f4bf8e98de72c426c2da29185a48d69c83,Samuel Audet,2016-04-17T05:48:39Z,samuel.audet@gmail.com,Samuel Audet,2016-04-17T05:57:23Z,samuel.audet@gmail.com,35,33,2, * Fix `NullPointerException` in `Parser` on variadic templates (issue #81)
,src/main/java/org/bytedeco/javacpp/Loader.java,14f5b9abd0ec1d948806e8fa95e1040aa48b6375,Samuel Audet,2016-04-14T06:42:17Z,samuel.audet@gmail.com,Samuel Audet,2016-04-14T06:42:17Z,samuel.audet@gmail.com,33,17,16, * Fix `Loader.load()` error when called right after `Builder.build()` within the same process
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,14f5b9abd0ec1d948806e8fa95e1040aa48b6375,Samuel Audet,2016-04-14T06:42:17Z,samuel.audet@gmail.com,Samuel Audet,2016-04-14T06:42:17Z,samuel.audet@gmail.com,33,17,16, * Fix `Loader.load()` error when called right after `Builder.build()` within the same process
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,14f5b9abd0ec1d948806e8fa95e1040aa48b6375,Samuel Audet,2016-04-14T06:42:17Z,samuel.audet@gmail.com,Samuel Audet,2016-04-14T06:42:17Z,samuel.audet@gmail.com,33,17,16, * Fix `Loader.load()` error when called right after `Builder.build()` within the same process
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,14f5b9abd0ec1d948806e8fa95e1040aa48b6375,Samuel Audet,2016-04-14T06:42:17Z,samuel.audet@gmail.com,Samuel Audet,2016-04-14T06:42:17Z,samuel.audet@gmail.com,33,17,16, * Fix `Loader.load()` error when called right after `Builder.build()` within the same process
,src/test/java/org/bytedeco/javacpp/PointerTest.java,14f5b9abd0ec1d948806e8fa95e1040aa48b6375,Samuel Audet,2016-04-14T06:42:17Z,samuel.audet@gmail.com,Samuel Audet,2016-04-14T06:42:17Z,samuel.audet@gmail.com,33,17,16, * Fix `Loader.load()` error when called right after `Builder.build()` within the same process
,src/main/java/org/bytedeco/javacpp/Loader.java,55edd4c924dcda57c62dca9ff53cff926d79fd9f,Samuel Audet,2016-04-12T02:01:26Z,samuel.audet@gmail.com,Samuel Audet,2016-04-12T02:03:19Z,samuel.audet@gmail.com,54,51,3, * Add properties for the `linux-ppc64` and `linux-ppc64le` platforms
,src/main/java/org/bytedeco/javacpp/tools/Info.java,7f95c9dced124cd241b21ff8290e6f1e1afc562a,Samuel Audet,2016-04-09T08:44:15Z,samuel.audet@gmail.com,Samuel Audet,2016-04-09T08:44:15Z,samuel.audet@gmail.com,36,32,4," * Use `Info.cppTypes` for all `Parser` type substitutions, in addition to macros and templates (issue bytedeco/javacpp-presets#192)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,7f95c9dced124cd241b21ff8290e6f1e1afc562a,Samuel Audet,2016-04-09T08:44:15Z,samuel.audet@gmail.com,Samuel Audet,2016-04-09T08:44:15Z,samuel.audet@gmail.com,36,32,4," * Use `Info.cppTypes` for all `Parser` type substitutions, in addition to macros and templates (issue bytedeco/javacpp-presets#192)"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,e4da76e8f61cc5ed4589f7e38734093e6fa426a0,Samuel Audet,2016-04-07T15:17:08Z,samuel.audet@gmail.com,Samuel Audet,2016-04-07T15:17:08Z,samuel.audet@gmail.com,70,50,20," * Make `Parser` take into account Java keywords not reserved in C++, casting issues with `int64_t`, and `const` value types in basic containers"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,e4da76e8f61cc5ed4589f7e38734093e6fa426a0,Samuel Audet,2016-04-07T15:17:08Z,samuel.audet@gmail.com,Samuel Audet,2016-04-07T15:17:08Z,samuel.audet@gmail.com,70,50,20," * Make `Parser` take into account Java keywords not reserved in C++, casting issues with `int64_t`, and `const` value types in basic containers"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,29208f7369e95219830b60fb37e90bb1e5bd9448,Samuel Audet,2016-04-07T04:31:20Z,samuel.audet@gmail.com,Samuel Audet,2016-04-07T04:33:30Z,samuel.audet@gmail.com,4,2,2,Fix potential compilation error with VectorAdapter
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,24abf3a5d2e54d815ef35b85ffd786023784d073,Samuel Audet,2016-04-05T00:28:00Z,samuel.audet@gmail.com,Samuel Audet,2016-04-05T00:28:00Z,samuel.audet@gmail.com,47,35,12, * Let users define `NATIVE_ALLOCATOR` and `NATIVE_DEALLOCATOR` macros to overload global `new` and `delete` operators
,src/test/java/org/bytedeco/javacpp/PointerTest.java,24abf3a5d2e54d815ef35b85ffd786023784d073,Samuel Audet,2016-04-05T00:28:00Z,samuel.audet@gmail.com,Samuel Audet,2016-04-05T00:28:00Z,samuel.audet@gmail.com,47,35,12, * Let users define `NATIVE_ALLOCATOR` and `NATIVE_DEALLOCATOR` macros to overload global `new` and `delete` operators
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,82c922ce089c7c2438cba796c28bb32219447ead,Samuel Audet,2016-04-04T07:31:33Z,samuel.audet@gmail.com,Samuel Audet,2016-04-04T07:31:33Z,samuel.audet@gmail.com,20,11,9, * Map `jint` to `int` and `jlong` to `long long` on Windows as well as all platforms with GCC (or Clang)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,96b7922185fb7e0fa5ac39497e2eb978f256e592,Samuel Audet,2016-04-02T08:38:03Z,samuel.audet@gmail.com,Samuel Audet,2016-04-02T08:38:03Z,samuel.audet@gmail.com,77,57,20, * Fix corner cases when checking for the platform in `Generator` and `Parser`
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,96b7922185fb7e0fa5ac39497e2eb978f256e592,Samuel Audet,2016-04-02T08:38:03Z,samuel.audet@gmail.com,Samuel Audet,2016-04-02T08:38:03Z,samuel.audet@gmail.com,77,57,20, * Fix corner cases when checking for the platform in `Generator` and `Parser`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,96b7922185fb7e0fa5ac39497e2eb978f256e592,Samuel Audet,2016-04-02T08:38:03Z,samuel.audet@gmail.com,Samuel Audet,2016-04-02T08:38:03Z,samuel.audet@gmail.com,77,57,20, * Fix corner cases when checking for the platform in `Generator` and `Parser`
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,8182d7db98f0bc7f5ecf813bf25098fb723501e7,Samuel Audet,2016-04-02T01:29:29Z,samuel.audet@gmail.com,Samuel Audet,2016-04-02T01:29:29Z,samuel.audet@gmail.com,33,20,13, * Set the internal DT_SONAME field in libraries created for Android (issue bytedeco/javacpp-presets#188)
,src/main/java/org/bytedeco/javacpp/Pointer.java,0bdcabc758a16f15528fd2e0aade7f54f63cadd7,Samuel Audet,2016-03-26T14:10:27Z,samuel.audet@gmail.com,Samuel Audet,2016-03-26T14:10:27Z,samuel.audet@gmail.com,811,720,91," * Add ""org.bytedeco.javacpp.maxbytes"" system property, forcing a call to `System.gc()` when this amount of memory tracked with deallocators is reached"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,0bdcabc758a16f15528fd2e0aade7f54f63cadd7,Samuel Audet,2016-03-26T14:10:27Z,samuel.audet@gmail.com,Samuel Audet,2016-03-26T14:10:27Z,samuel.audet@gmail.com,811,720,91," * Add ""org.bytedeco.javacpp.maxbytes"" system property, forcing a call to `System.gc()` when this amount of memory tracked with deallocators is reached"
,src/test/java/org/bytedeco/javacpp/PointerTest.java,0bdcabc758a16f15528fd2e0aade7f54f63cadd7,Samuel Audet,2016-03-26T14:10:27Z,samuel.audet@gmail.com,Samuel Audet,2016-03-26T14:10:27Z,samuel.audet@gmail.com,811,720,91," * Add ""org.bytedeco.javacpp.maxbytes"" system property, forcing a call to `System.gc()` when this amount of memory tracked with deallocators is reached"
,src/main/java/org/bytedeco/javacpp/annotation/Convention.java,07322ee361a1343b86333779ab97bd60b4715a63,Samuel Audet,2016-03-26T08:18:14Z,samuel.audet@gmail.com,Samuel Audet,2016-03-26T08:18:14Z,samuel.audet@gmail.com,23,22,1," * Let `Parser` pick up `Info.annotations` in the case of function pointers as well
 * Add `@Convention(extern=...)` value to have `Generator` produce `FunctionPointer` with other language linkage than ""C"""
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,07322ee361a1343b86333779ab97bd60b4715a63,Samuel Audet,2016-03-26T08:18:14Z,samuel.audet@gmail.com,Samuel Audet,2016-03-26T08:18:14Z,samuel.audet@gmail.com,23,22,1," * Let `Parser` pick up `Info.annotations` in the case of function pointers as well
 * Add `@Convention(extern=...)` value to have `Generator` produce `FunctionPointer` with other language linkage than ""C"""
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,07322ee361a1343b86333779ab97bd60b4715a63,Samuel Audet,2016-03-26T08:18:14Z,samuel.audet@gmail.com,Samuel Audet,2016-03-26T08:18:14Z,samuel.audet@gmail.com,23,22,1," * Let `Parser` pick up `Info.annotations` in the case of function pointers as well
 * Add `@Convention(extern=...)` value to have `Generator` produce `FunctionPointer` with other language linkage than ""C"""
,src/main/java/org/bytedeco/javacpp/CharPointer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/IntPointer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/ByteRawIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/CharArrayIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/CharBufferIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/CharRawIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleArrayIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleBufferIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleRawIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/FloatArrayIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/FloatBufferIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/FloatRawIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/IntArrayIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/IntBufferIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/IntRawIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/LongArrayIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/LongBufferIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/LongRawIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/Raw.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/ReverseUnsafeRaw.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/ShortArrayIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/ShortBufferIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/ShortRawIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/UByteArrayIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/UByteBufferIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/UByteRawIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/UShortArrayIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/UShortBufferIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/UShortRawIndexer.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/indexer/UnsafeRaw.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,f945c9a48e017d0df926f04b0e30547c9af634b1,Samuel Audet,2016-03-22T05:38:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-22T05:46:29Z,samuel.audet@gmail.com,4065,2875,1190," * Enhance the `indexer` package with `long` indexing, initially via the `sun.misc.Unsafe`, for now"
,src/main/java/org/bytedeco/javacpp/BoolPointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/BytePointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/CharPointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/IntPointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/LongPointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/Pointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/annotation/Allocator.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/annotation/ArrayAllocator.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,32793c76711c928c0b24f535ba66b8953bc14af1,Samuel Audet,2016-03-15T14:56:09Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,190,97,93," * Lengthen the `position`, `limit`, and `capacity` fields of `Pointer` using `long`"
,src/main/java/org/bytedeco/javacpp/BoolPointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/BytePointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/CharPointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/IntPointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/LongPointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,4c1ea9e985737da19ad3ccd6215db1e58b7db24a,Adam Gibson,2016-03-08T19:43:10Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,73,37,36,indexers should be ints since they relied on java constructs
,src/main/java/org/bytedeco/javacpp/BoolPointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/BytePointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/CharPointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/IntPointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/LongPointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/Pointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,6d96d32a48196d66f7ed2255ef8121b2a2303700,Adam Gibson,2016-03-08T19:29:28Z,adam@skymind.io,Samuel Audet,2016-03-19T11:35:43Z,samuel.audet@gmail.com,220,110,110,long pointers
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,0a4080f13f889f659ce9c5269b8776d942b28d64,Samuel Audet,2016-03-19T08:48:00Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T08:48:00Z,samuel.audet@gmail.com,4,2,2,Remove a potential NullPointerException in Parser (pull #74)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,0a4080f13f889f659ce9c5269b8776d942b28d64,Samuel Audet,2016-03-19T08:48:00Z,samuel.audet@gmail.com,Samuel Audet,2016-03-19T08:48:00Z,samuel.audet@gmail.com,4,2,2,Remove a potential NullPointerException in Parser (pull #74)
,src/main/java/org/bytedeco/javacpp/Pointer.java,4f99a941df49c2a756c838389ab21ecdb8306dbe,Samuel Audet,2016-03-15T01:48:08Z,samuel.audet@gmail.com,Samuel Audet,2016-03-15T01:48:08Z,samuel.audet@gmail.com,2,1,1,"Merge pull request #86 from osialr/staging/pointer-close-throws-runtime

 * Remove `throws Exception` from `Pointer.close()`"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,5944112bb41dbeba870a2bcfe190a7ca369c2cda,Samuel Audet,2016-03-13T01:18:57Z,samuel.audet@gmail.com,Samuel Audet,2016-03-13T01:18:57Z,samuel.audet@gmail.com,26,24,2,"Merge pull request #85 from osialr/staging/allow-archiving-cpp-jni

 * Add `-nodelete` flag to keep generated C++ files after compilation"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,5944112bb41dbeba870a2bcfe190a7ca369c2cda,Samuel Audet,2016-03-13T01:18:57Z,samuel.audet@gmail.com,Samuel Audet,2016-03-13T01:18:57Z,samuel.audet@gmail.com,26,24,2,"Merge pull request #85 from osialr/staging/allow-archiving-cpp-jni

 * Add `-nodelete` flag to keep generated C++ files after compilation"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,27be9c977a78d746890e5d5e0df1ed54502856cc,Samuel Audet,2016-03-13T01:11:38Z,samuel.audet@gmail.com,Samuel Audet,2016-03-13T01:11:38Z,samuel.audet@gmail.com,14,13,1,"Merge pull request #87 from osialr/staging/multi-dimension-array-comment

 * Comment with first dimension of multidimensional array inside `@Cast`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,079d3d6dd4cd61f555d3b69501bcb0a16e3b71d6,Samuel Audet,2016-03-13T01:10:07Z,samuel.audet@gmail.com,Samuel Audet,2016-03-13T01:10:07Z,samuel.audet@gmail.com,33,27,6,"Merge pull request #84 from osialr/staging/mark-c-funcs-as-noexception

 * Annotate functions originating from `cinclude` with `@NoException`"
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,079d3d6dd4cd61f555d3b69501bcb0a16e3b71d6,Samuel Audet,2016-03-13T01:10:07Z,samuel.audet@gmail.com,Samuel Audet,2016-03-13T01:10:07Z,samuel.audet@gmail.com,33,27,6,"Merge pull request #84 from osialr/staging/mark-c-funcs-as-noexception

 * Annotate functions originating from `cinclude` with `@NoException`"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,b6cf70463402133a4c62b9bc0b8ba224e0b05d0f,Ryan Osial,2016-03-12T23:26:20Z,ryan.osial@gmail.com,Ryan Osial,2016-03-12T23:26:20Z,ryan.osial@gmail.com,27,24,3,Add flag to keep the generated cpp files
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,b6cf70463402133a4c62b9bc0b8ba224e0b05d0f,Ryan Osial,2016-03-12T23:26:20Z,ryan.osial@gmail.com,Ryan Osial,2016-03-12T23:26:20Z,ryan.osial@gmail.com,27,24,3,Add flag to keep the generated cpp files
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,7c53985d8e9d5311b478e903e80c7ff7c5fde277,Ryan Osial,2016-03-12T16:40:24Z,ryan.osial@gmail.com,Ryan Osial,2016-03-12T16:42:10Z,ryan.osial@gmail.com,2,1,1,Make array comments show up in cpp and java files
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,9086541d99bf80911f7d2588b9635d55c5aa3b16,Ryan Osial,2016-03-12T16:10:03Z,ryan.osial@gmail.com,Ryan Osial,2016-03-12T16:10:03Z,ryan.osial@gmail.com,33,27,6,"Mark functions from c includes with noexception

This allows the Generator to avoid wrapping the function invocations with
try/catch when no exception is possible"
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,9086541d99bf80911f7d2588b9635d55c5aa3b16,Ryan Osial,2016-03-12T16:10:03Z,ryan.osial@gmail.com,Ryan Osial,2016-03-12T16:10:03Z,ryan.osial@gmail.com,33,27,6,"Mark functions from c includes with noexception

This allows the Generator to avoid wrapping the function invocations with
try/catch when no exception is possible"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,0c2b518cb4bc81d77f33381473a1650c8da8dcbe,Samuel Audet,2016-03-12T09:31:56Z,samuel.audet@gmail.com,Samuel Audet,2016-03-12T09:31:56Z,samuel.audet@gmail.com,8,5,3,"Merge pull request #89 from osialr/staging/compiler-working-directory

 * Use the `outputDirectory` as the compiler's working directory"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,1d407797951ccaa09eb994e5401ebe123943cb5c,Samuel Audet,2016-03-12T08:37:49Z,samuel.audet@gmail.com,Samuel Audet,2016-03-12T08:37:49Z,samuel.audet@gmail.com,18,15,3,"Merge pull request #83 from osialr/staging/jni-abort-on-const-arrays

 * Call `JNI_ABORT` on release of `const` arrays"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,49b4f90556a344c1ab3b0cc35f1ac31c72039054,Ryan Osial,2016-03-11T19:36:54Z,ryan.osial@gmail.com,Ryan Osial,2016-03-11T19:36:54Z,ryan.osial@gmail.com,8,5,3,"Use binary output folder as the compiler's working directory

This should prevent MSVC from dumping it's object files
in the project's root directory."
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,02c82f51e030c606f3594c86f177d1117aab2638,Ryan Osial,2016-03-11T19:28:39Z,ryan.osial@gmail.com,Ryan Osial,2016-03-11T19:28:39Z,ryan.osial@gmail.com,14,13,1,Comment with first dimension of multidimensional array inside @Cast
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,6105a24497bd699583bc9f653c88db6db8fa656e,Ryan Osial,2016-02-29T19:44:47Z,ryan.osial@gmail.com,Ryan Osial,2016-03-11T19:23:01Z,ryan.osial@gmail.com,18,15,3,"Call JNI_ABORT on release of constant arrays

This saves a unneeded memcpy back to the JVM"
,src/main/java/org/bytedeco/javacpp/Pointer.java,f201855c53e1f6cd89e3c77d94ace5665d5489f6,Ryan Osial,2016-03-11T19:07:03Z,ryan.osial@gmail.com,Ryan Osial,2016-03-11T19:07:03Z,ryan.osial@gmail.com,2,1,1,"Remove 'throws Exception' from Pointer::close

Pointer throws a RuntimeException on close.  Removing the throws
allows the user's try-with-resource blocks not require a catch(Exception)"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,4604195614ca1e9f68a29a7ed41db4dd789c006e,Samuel Audet,2016-03-07T13:59:48Z,samuel.audet@gmail.com,Samuel Audet,2016-03-07T13:59:48Z,samuel.audet@gmail.com,7,5,2,Clarify `IllegalArgumentException` when it occurs on `new File(URI)` in `Builder`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,5da88881c43c3ab413f040481913612bf0e49b13,Samuel Audet,2016-02-28T14:54:04Z,samuel.audet@gmail.com,Samuel Audet,2016-02-28T14:54:04Z,samuel.audet@gmail.com,14,12,2, * Add support for C++11 `default` and `delete` on function declarations (issue #80)
,src/main/java/org/bytedeco/javacpp/tools/Token.java,5da88881c43c3ab413f040481913612bf0e49b13,Samuel Audet,2016-02-28T14:54:04Z,samuel.audet@gmail.com,Samuel Audet,2016-02-28T14:54:04Z,samuel.audet@gmail.com,14,12,2, * Add support for C++11 `default` and `delete` on function declarations (issue #80)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,bdca59df06947f26e91e7e39aec6523c28547047,Samuel Audet,2016-02-27T14:54:10Z,samuel.audet@gmail.com,Samuel Audet,2016-02-27T14:54:10Z,samuel.audet@gmail.com,28,19,9, * Add support for `enum` without enumerator list (issue #78)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,bbd9eedd7759baf328392542b4f7d2742e6b9f09,Samuel Audet,2016-02-27T07:23:34Z,samuel.audet@gmail.com,Samuel Audet,2016-02-27T07:23:34Z,samuel.audet@gmail.com,35,25,10, * Add support for C++11 typed `enum` (issue #78)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,84babfb88f76ac32b8e07b06bda05a475da36e49,Samuel Audet,2016-02-27T03:24:17Z,samuel.audet@gmail.com,Samuel Audet,2016-02-27T03:24:17Z,samuel.audet@gmail.com,4,4,0, * Add missing space for `const` types when normalizing template arguments in `Parser` (issue bytedeco/javacpp-presets#165)
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,4083b8a1488c394665db713cf8683e2576c769dc,Samuel Audet,2016-02-27T02:44:38Z,samuel.audet@gmail.com,Samuel Audet,2016-02-27T02:44:38Z,samuel.audet@gmail.com,40,18,22, * Make `Builder` fail on `ClassNotFoundException` or `NoClassDefFoundError` instead of logging warnings
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,4083b8a1488c394665db713cf8683e2576c769dc,Samuel Audet,2016-02-27T02:44:38Z,samuel.audet@gmail.com,Samuel Audet,2016-02-27T02:44:38Z,samuel.audet@gmail.com,40,18,22, * Make `Builder` fail on `ClassNotFoundException` or `NoClassDefFoundError` instead of logging warnings
,src/main/java/org/bytedeco/javacpp/tools/ClassScanner.java,4083b8a1488c394665db713cf8683e2576c769dc,Samuel Audet,2016-02-27T02:44:38Z,samuel.audet@gmail.com,Samuel Audet,2016-02-27T02:44:38Z,samuel.audet@gmail.com,40,18,22, * Make `Builder` fail on `ClassNotFoundException` or `NoClassDefFoundError` instead of logging warnings
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,485081f3e3ba67c447ef8dad3d0b313664cb0618,Samuel Audet,2016-02-27T00:50:50Z,samuel.audet@gmail.com,Samuel Audet,2016-02-27T00:50:50Z,samuel.audet@gmail.com,28,20,8, * Allow `Builder` to generate native libraries with empty `@Platform` annotation even without user defined `native` methods
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,485081f3e3ba67c447ef8dad3d0b313664cb0618,Samuel Audet,2016-02-27T00:50:50Z,samuel.audet@gmail.com,Samuel Audet,2016-02-27T00:50:50Z,samuel.audet@gmail.com,28,20,8, * Allow `Builder` to generate native libraries with empty `@Platform` annotation even without user defined `native` methods
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,485081f3e3ba67c447ef8dad3d0b313664cb0618,Samuel Audet,2016-02-27T00:50:50Z,samuel.audet@gmail.com,Samuel Audet,2016-02-27T00:50:50Z,samuel.audet@gmail.com,28,20,8, * Allow `Builder` to generate native libraries with empty `@Platform` annotation even without user defined `native` methods
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,485081f3e3ba67c447ef8dad3d0b313664cb0618,Samuel Audet,2016-02-27T00:50:50Z,samuel.audet@gmail.com,Samuel Audet,2016-02-27T00:50:50Z,samuel.audet@gmail.com,28,20,8, * Allow `Builder` to generate native libraries with empty `@Platform` annotation even without user defined `native` methods
,src/main/java/org/bytedeco/javacpp/tools/Context.java,802fc482e862aa904a5a352f9dc445153d679124,Samuel Audet,2016-02-25T14:33:24Z,samuel.audet@gmail.com,Samuel Audet,2016-02-25T14:33:24Z,samuel.audet@gmail.com,54,38,16, * Enhance `Parser` to support a bit better `&&` tokens and C++11 rvalue references (issue bytedeco/javacpp-presets#160)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,802fc482e862aa904a5a352f9dc445153d679124,Samuel Audet,2016-02-25T14:33:24Z,samuel.audet@gmail.com,Samuel Audet,2016-02-25T14:33:24Z,samuel.audet@gmail.com,54,38,16, * Enhance `Parser` to support a bit better `&&` tokens and C++11 rvalue references (issue bytedeco/javacpp-presets#160)
,src/main/java/org/bytedeco/javacpp/tools/TemplateMap.java,802fc482e862aa904a5a352f9dc445153d679124,Samuel Audet,2016-02-25T14:33:24Z,samuel.audet@gmail.com,Samuel Audet,2016-02-25T14:33:24Z,samuel.audet@gmail.com,54,38,16, * Enhance `Parser` to support a bit better `&&` tokens and C++11 rvalue references (issue bytedeco/javacpp-presets#160)
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,802fc482e862aa904a5a352f9dc445153d679124,Samuel Audet,2016-02-25T14:33:24Z,samuel.audet@gmail.com,Samuel Audet,2016-02-25T14:33:24Z,samuel.audet@gmail.com,54,38,16, * Enhance `Parser` to support a bit better `&&` tokens and C++11 rvalue references (issue bytedeco/javacpp-presets#160)
,src/main/java/org/bytedeco/javacpp/Loader.java,82566a7d88a08a36167d4dd42b4e7f5b4824a57a,Samuel Audet,2016-02-23T08:05:44Z,samuel.audet@gmail.com,Samuel Audet,2016-02-23T08:05:44Z,samuel.audet@gmail.com,3,2,1, * Pick up `macosx` when `os.name` is `darwin`
,src/main/java/org/bytedeco/javacpp/Loader.java,5e6958ff63e19342609dddeacb9f287232dd4ccd,Samuel Audet,2016-02-23T07:53:20Z,samuel.audet@gmail.com,Samuel Audet,2016-02-23T07:53:20Z,samuel.audet@gmail.com,27,26,1,"Merge pull request #77 from vb216/master

Add properties for the `linux-armhf` platform"
,src/main/java/org/bytedeco/javacpp/Loader.java,b5dab9f4c72b3679baca4cc4ea3b1aa1a57c20a1,vb216,2016-02-21T18:34:47Z,ubuntu@ip-172-31-16-33.eu-west-1.compute.internal,vb216,2016-02-21T18:34:47Z,ubuntu@ip-172-31-16-33.eu-west-1.compute.internal,27,26,1,add definition of linux-armhf arch based on sun.arch.abi property
,src/main/java/org/bytedeco/javacpp/Loader.java,4b738fa5c21984e5828f75c270ae17dab9c81b69,Samuel Audet,2016-02-18T12:56:46Z,samuel.audet@gmail.com,Samuel Audet,2016-02-18T12:56:46Z,samuel.audet@gmail.com,28,17,11,"Merge pull request #67 from georgekankava/staging/nested-blocks-of-code-should-not-be-left-empty-fix-1

Do at least something for exceptions we swallow but do not expect"
,src/main/java/org/bytedeco/javacpp/Pointer.java,4b738fa5c21984e5828f75c270ae17dab9c81b69,Samuel Audet,2016-02-18T12:56:46Z,samuel.audet@gmail.com,Samuel Audet,2016-02-18T12:56:46Z,samuel.audet@gmail.com,28,17,11,"Merge pull request #67 from georgekankava/staging/nested-blocks-of-code-should-not-be-left-empty-fix-1

Do at least something for exceptions we swallow but do not expect"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,4b738fa5c21984e5828f75c270ae17dab9c81b69,Samuel Audet,2016-02-18T12:56:46Z,samuel.audet@gmail.com,Samuel Audet,2016-02-18T12:56:46Z,samuel.audet@gmail.com,28,17,11,"Merge pull request #67 from georgekankava/staging/nested-blocks-of-code-should-not-be-left-empty-fix-1

Do at least something for exceptions we swallow but do not expect"
,src/main/java/org/bytedeco/javacpp/Loader.java,7858f2ef7025b1947b30b5b59ab4554c5b594324,George Kankava,2016-02-03T16:13:54Z,george.kankava@aurea.com,George Kankava,2016-02-18T08:00:28Z,george.kankava@devfactory.com,28,17,11,squid:S00108 - Nested blocks of code should not be left empty
,src/main/java/org/bytedeco/javacpp/Pointer.java,7858f2ef7025b1947b30b5b59ab4554c5b594324,George Kankava,2016-02-03T16:13:54Z,george.kankava@aurea.com,George Kankava,2016-02-18T08:00:28Z,george.kankava@devfactory.com,28,17,11,squid:S00108 - Nested blocks of code should not be left empty
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,7858f2ef7025b1947b30b5b59ab4554c5b594324,George Kankava,2016-02-03T16:13:54Z,george.kankava@aurea.com,George Kankava,2016-02-18T08:00:28Z,george.kankava@devfactory.com,28,17,11,squid:S00108 - Nested blocks of code should not be left empty
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,3380ee99b48a9e829339173307a35ac4363f1f44,Samuel Audet,2016-02-17T14:13:49Z,samuel.audet@gmail.com,Samuel Audet,2016-02-17T14:13:49Z,samuel.audet@gmail.com,36,19,17,"Merge pull request #75 from georgekankava/staging/resources-should-be-closed-fix-1

Make sure to close with try-with-resources"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,3380ee99b48a9e829339173307a35ac4363f1f44,Samuel Audet,2016-02-17T14:13:49Z,samuel.audet@gmail.com,Samuel Audet,2016-02-17T14:13:49Z,samuel.audet@gmail.com,36,19,17,"Merge pull request #75 from georgekankava/staging/resources-should-be-closed-fix-1

Make sure to close with try-with-resources"
,src/main/java/org/bytedeco/javacpp/Loader.java,57690d90130d2a38eac25b4d2291cd3df6bba416,Samuel Audet,2016-02-17T14:01:56Z,samuel.audet@gmail.com,Samuel Audet,2016-02-17T14:01:56Z,samuel.audet@gmail.com,9,4,5,"Merge pull request #73 from georgekankava/staging/dead-stores-should-be-removed-fix-1

Remove assigned values that are never used"
,src/main/java/org/bytedeco/javacpp/Pointer.java,57690d90130d2a38eac25b4d2291cd3df6bba416,Samuel Audet,2016-02-17T14:01:56Z,samuel.audet@gmail.com,Samuel Audet,2016-02-17T14:01:56Z,samuel.audet@gmail.com,9,4,5,"Merge pull request #73 from georgekankava/staging/dead-stores-should-be-removed-fix-1

Remove assigned values that are never used"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,57690d90130d2a38eac25b4d2291cd3df6bba416,Samuel Audet,2016-02-17T14:01:56Z,samuel.audet@gmail.com,Samuel Audet,2016-02-17T14:01:56Z,samuel.audet@gmail.com,9,4,5,"Merge pull request #73 from georgekankava/staging/dead-stores-should-be-removed-fix-1

Remove assigned values that are never used"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,57690d90130d2a38eac25b4d2291cd3df6bba416,Samuel Audet,2016-02-17T14:01:56Z,samuel.audet@gmail.com,Samuel Audet,2016-02-17T14:01:56Z,samuel.audet@gmail.com,9,4,5,"Merge pull request #73 from georgekankava/staging/dead-stores-should-be-removed-fix-1

Remove assigned values that are never used"
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,c216413551928fe80cc516904ac226bc558f7a1c,George Kankava,2016-02-16T09:10:57Z,george.kankava@devfactory.com,George Kankava,2016-02-16T12:37:50Z,george.kankava@devfactory.com,36,19,17,squid:S2095 - Resources should be closed
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,c216413551928fe80cc516904ac226bc558f7a1c,George Kankava,2016-02-16T09:10:57Z,george.kankava@devfactory.com,George Kankava,2016-02-16T12:37:50Z,george.kankava@devfactory.com,36,19,17,squid:S2095 - Resources should be closed
,src/main/java/org/bytedeco/javacpp/Loader.java,9d85fa2b6005b8cb09b17f9c412e9da41ffc10b5,George Kankava,2016-02-16T08:30:02Z,george.kankava@devfactory.com,George Kankava,2016-02-16T12:02:35Z,george.kankava@devfactory.com,9,4,5,squid:S1854 - Dead stores should be removed
,src/main/java/org/bytedeco/javacpp/Pointer.java,9d85fa2b6005b8cb09b17f9c412e9da41ffc10b5,George Kankava,2016-02-16T08:30:02Z,george.kankava@devfactory.com,George Kankava,2016-02-16T12:02:35Z,george.kankava@devfactory.com,9,4,5,squid:S1854 - Dead stores should be removed
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,9d85fa2b6005b8cb09b17f9c412e9da41ffc10b5,George Kankava,2016-02-16T08:30:02Z,george.kankava@devfactory.com,George Kankava,2016-02-16T12:02:35Z,george.kankava@devfactory.com,9,4,5,squid:S1854 - Dead stores should be removed
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,9d85fa2b6005b8cb09b17f9c412e9da41ffc10b5,George Kankava,2016-02-16T08:30:02Z,george.kankava@devfactory.com,George Kankava,2016-02-16T12:02:35Z,george.kankava@devfactory.com,9,4,5,squid:S1854 - Dead stores should be removed
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,eabafa4fcab5b06fbd60d85f5c66f7befee45239,Samuel Audet,2016-02-15T13:56:32Z,samuel.audet@gmail.com,Samuel Audet,2016-02-15T13:56:32Z,samuel.audet@gmail.com,6,5,1, * Fix `NullPointerException` in `Parser` on unexpected forms of function pointers (issue #70)
,src/main/java/org/bytedeco/javacpp/Loader.java,6e982f7faf50f8b18b2ccbe2affd84f0dbd77ea3,Samuel Audet,2016-02-15T13:53:41Z,samuel.audet@gmail.com,Samuel Audet,2016-02-15T13:53:41Z,samuel.audet@gmail.com,58,29,29,"Merge pull request #68 from georgekankava/staging/local-variable-and-method-parameter-names-should-comply-with-a-naming-convention-fix-2

Resolve occurrences of Sonar rules"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,6e982f7faf50f8b18b2ccbe2affd84f0dbd77ea3,Samuel Audet,2016-02-15T13:53:41Z,samuel.audet@gmail.com,Samuel Audet,2016-02-15T13:53:41Z,samuel.audet@gmail.com,58,29,29,"Merge pull request #68 from georgekankava/staging/local-variable-and-method-parameter-names-should-comply-with-a-naming-convention-fix-2

Resolve occurrences of Sonar rules"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,6e982f7faf50f8b18b2ccbe2affd84f0dbd77ea3,Samuel Audet,2016-02-15T13:53:41Z,samuel.audet@gmail.com,Samuel Audet,2016-02-15T13:53:41Z,samuel.audet@gmail.com,58,29,29,"Merge pull request #68 from georgekankava/staging/local-variable-and-method-parameter-names-should-comply-with-a-naming-convention-fix-2

Resolve occurrences of Sonar rules"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,66057e6a211346f28d28105422a3f2626dfd90bc,Samuel Audet,2016-02-13T07:19:46Z,samuel.audet@gmail.com,Samuel Audet,2016-02-13T07:19:46Z,samuel.audet@gmail.com,4,3,1, * Make sure `Generator` produces calls to `sizeof()` and `offsetof()` for all `Pointer` classes with allocators
,src/main/java/org/bytedeco/javacpp/Pointer.java,263a9aa0fdc4e3816a2c6aaa9df746c5a8664f25,Samuel Audet,2016-02-12T11:48:47Z,samuel.audet@gmail.com,Samuel Audet,2016-02-12T11:48:47Z,samuel.audet@gmail.com,26,1,25,"Merge pull request #66 from georgekankava/staging/sections-of-code-should-not-be-commented-out-fix-1

squid:CommentedOutCodeLine - Sections of code should not be ""commented out"""
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,263a9aa0fdc4e3816a2c6aaa9df746c5a8664f25,Samuel Audet,2016-02-12T11:48:47Z,samuel.audet@gmail.com,Samuel Audet,2016-02-12T11:48:47Z,samuel.audet@gmail.com,26,1,25,"Merge pull request #66 from georgekankava/staging/sections-of-code-should-not-be-commented-out-fix-1

squid:CommentedOutCodeLine - Sections of code should not be ""commented out"""
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,263a9aa0fdc4e3816a2c6aaa9df746c5a8664f25,Samuel Audet,2016-02-12T11:48:47Z,samuel.audet@gmail.com,Samuel Audet,2016-02-12T11:48:47Z,samuel.audet@gmail.com,26,1,25,"Merge pull request #66 from georgekankava/staging/sections-of-code-should-not-be-commented-out-fix-1

squid:CommentedOutCodeLine - Sections of code should not be ""commented out"""
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,263a9aa0fdc4e3816a2c6aaa9df746c5a8664f25,Samuel Audet,2016-02-12T11:48:47Z,samuel.audet@gmail.com,Samuel Audet,2016-02-12T11:48:47Z,samuel.audet@gmail.com,26,1,25,"Merge pull request #66 from georgekankava/staging/sections-of-code-should-not-be-commented-out-fix-1

squid:CommentedOutCodeLine - Sections of code should not be ""commented out"""
,src/main/java/org/bytedeco/javacpp/Pointer.java,bfa2dd7af52db589785c4bc76a0ac615da1e7806,George Kankava,2016-01-29T12:48:27Z,george.kankava@aurea.com,George Kankava,2016-02-11T13:13:46Z,george.kankava@devfactory.com,26,1,25,"squid:CommentedOutCodeLine - Sections of code should not be ""commented out"""
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,bfa2dd7af52db589785c4bc76a0ac615da1e7806,George Kankava,2016-01-29T12:48:27Z,george.kankava@aurea.com,George Kankava,2016-02-11T13:13:46Z,george.kankava@devfactory.com,26,1,25,"squid:CommentedOutCodeLine - Sections of code should not be ""commented out"""
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,bfa2dd7af52db589785c4bc76a0ac615da1e7806,George Kankava,2016-01-29T12:48:27Z,george.kankava@aurea.com,George Kankava,2016-02-11T13:13:46Z,george.kankava@devfactory.com,26,1,25,"squid:CommentedOutCodeLine - Sections of code should not be ""commented out"""
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,bfa2dd7af52db589785c4bc76a0ac615da1e7806,George Kankava,2016-01-29T12:48:27Z,george.kankava@aurea.com,George Kankava,2016-02-11T13:13:46Z,george.kankava@devfactory.com,26,1,25,"squid:CommentedOutCodeLine - Sections of code should not be ""commented out"""
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,e165acbaed97b18a512d1f5f02623ce5d801340a,Samuel Audet,2016-02-11T04:08:19Z,samuel.audet@gmail.com,Samuel Audet,2016-02-11T04:08:19Z,samuel.audet@gmail.com,7,5,2, * Let `Parser` use adapters in the case `FunctionPointer` as well (issue bytedeco/javacpp-presets#145)
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,1604a0f4880f698572a241de49262556a9377138,Samuel Audet,2016-02-07T14:11:32Z,samuel.audet@gmail.com,Samuel Audet,2016-02-07T14:11:32Z,samuel.audet@gmail.com,219,96,123," * Prepend ""javacpp."" to all properties associated with Maven in `BuildMojo` to avoid name clashes"
,src/main/java/org/bytedeco/javacpp/tools/MethodInformation.java,a14e299b0154fa760c2aaf9ec22fd9c45af9978a,George Kankava,2016-02-02T18:02:39Z,george.kankava@aurea.com,George Kankava,2016-02-02T18:02:39Z,george.kankava@aurea.com,2,1,1,Multiple code improvements 1
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,9113a2ec0cded8fd0e5c6b956254ad55d80c6610,Samuel Audet,2016-02-02T13:21:15Z,samuel.audet@gmail.com,Samuel Audet,2016-02-02T13:21:15Z,samuel.audet@gmail.com,6,5,1, * Let users define the `GENERIC_EXCEPTION_CLASS` macro (default of `std::exception`) to indicate the base exception thrown by native methods
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,35734b5df3c7ed8b48a7f09fb15b58643c967e1f,Samuel Audet,2016-01-31T10:44:08Z,samuel.audet@gmail.com,Samuel Audet,2016-01-31T10:44:08Z,samuel.audet@gmail.com,12,10,2, * Split type names at `::` delimiters before mapping them against templates in `Parser`
,src/main/java/org/bytedeco/javacpp/Loader.java,f7161d04f77798cf9996f2ba64cf1ba8a9f62e9c,Samuel Audet,2016-01-30T02:59:22Z,samuel.audet@gmail.com,Samuel Audet,2016-01-30T02:59:22Z,samuel.audet@gmail.com,12,7,5, * Fix swallowed `InterruptedException` (issue bytedeco/javacv#315)
,src/main/java/org/bytedeco/javacpp/Loader.java,186efe62dcce19ba123e378aa42d7832d63cc75b,George Kankava,2016-01-29T17:44:36Z,george.kankava@aurea.com,George Kankava,2016-01-29T17:44:36Z,george.kankava@aurea.com,60,30,30,"squid:S00117 - Local variable and method parameter names should comply with a naming convention
squid:S1197 - Array designators ""[]"" should be on the type, not the variable
squid:S00115 - Constant names should comply with a naming convention"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,186efe62dcce19ba123e378aa42d7832d63cc75b,George Kankava,2016-01-29T17:44:36Z,george.kankava@aurea.com,George Kankava,2016-01-29T17:44:36Z,george.kankava@aurea.com,60,30,30,"squid:S00117 - Local variable and method parameter names should comply with a naming convention
squid:S1197 - Array designators ""[]"" should be on the type, not the variable
squid:S00115 - Constant names should comply with a naming convention"
,src/main/java/org/bytedeco/javacpp/tools/MethodInformation.java,186efe62dcce19ba123e378aa42d7832d63cc75b,George Kankava,2016-01-29T17:44:36Z,george.kankava@aurea.com,George Kankava,2016-01-29T17:44:36Z,george.kankava@aurea.com,60,30,30,"squid:S00117 - Local variable and method parameter names should comply with a naming convention
squid:S1197 - Array designators ""[]"" should be on the type, not the variable
squid:S00115 - Constant names should comply with a naming convention"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,186efe62dcce19ba123e378aa42d7832d63cc75b,George Kankava,2016-01-29T17:44:36Z,george.kankava@aurea.com,George Kankava,2016-01-29T17:44:36Z,george.kankava@aurea.com,60,30,30,"squid:S00117 - Local variable and method parameter names should comply with a naming convention
squid:S1197 - Array designators ""[]"" should be on the type, not the variable
squid:S00115 - Constant names should comply with a naming convention"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,2f16e6bbf21b51c4564cfc35b53624f7109c0dcf,Samuel Audet,2016-01-27T14:17:31Z,samuel.audet@gmail.com,Samuel Audet,2016-01-27T14:17:31Z,samuel.audet@gmail.com,45,26,19, * Adjust a few things in `Generator` preventing `@Virtual` from working properly in some cases (issue bytedeco/javacpp-presets#143)
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,fda60443eb4bd9d146c37e7cef2c4ba56d6a2b11,Samuel Audet,2016-01-24T02:11:05Z,samuel.audet@gmail.com,Samuel Audet,2016-01-24T02:11:05Z,samuel.audet@gmail.com,9,7,2, * Fix `TokenIndexer` inserting an invalid token while expanding macros ending with a backslash (issue #63)
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,fda60443eb4bd9d146c37e7cef2c4ba56d6a2b11,Samuel Audet,2016-01-24T02:11:05Z,samuel.audet@gmail.com,Samuel Audet,2016-01-24T02:11:05Z,samuel.audet@gmail.com,9,7,2, * Fix `TokenIndexer` inserting an invalid token while expanding macros ending with a backslash (issue #63)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,c16206e3dd3df6bd4a04c46be84000edebe1e0ff,Samuel Audet,2016-01-16T08:01:12Z,samuel.audet@gmail.com,Samuel Audet,2016-01-16T08:01:12Z,samuel.audet@gmail.com,34,20,14, * Make `Parser` take `Info.skip` into account for `enum` declarations as well
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,7f3202dac72136c4ed830944c87c1ef3d77f373d,Samuel Audet,2016-01-14T11:39:11Z,samuel.audet@gmail.com,Samuel Audet,2016-01-14T11:39:11Z,samuel.audet@gmail.com,11,6,5,"Merge pull request #62 from 243826/master

Fix `Builder` potentially generating code multiple times for the same class (issue #61)"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,6eb70522278a0a86187f60041026ffd0b9492a90,Chetan Narsude,2016-01-12T07:16:04Z,cnarsude@cisco.com,Chetan Narsude,2016-01-14T03:45:33Z,cnarsude@cisco.com,11,6,5,#61 dedup all the classes for which the code needs to be generated
,src/main/java/org/bytedeco/javacpp/Pointer.java,193fab81868560ac674a938b294afe3e8eaedb89,Samuel Audet,2016-01-09T04:50:01Z,samuel.audet@gmail.com,Samuel Audet,2016-01-09T04:50:01Z,samuel.audet@gmail.com,42,32,10,Fix up functionality for `Info.flatten`
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,193fab81868560ac674a938b294afe3e8eaedb89,Samuel Audet,2016-01-09T04:50:01Z,samuel.audet@gmail.com,Samuel Audet,2016-01-09T04:50:01Z,samuel.audet@gmail.com,42,32,10,Fix up functionality for `Info.flatten`
,src/main/java/org/bytedeco/javacpp/tools/Info.java,193fab81868560ac674a938b294afe3e8eaedb89,Samuel Audet,2016-01-09T04:50:01Z,samuel.audet@gmail.com,Samuel Audet,2016-01-09T04:50:01Z,samuel.audet@gmail.com,42,32,10,Fix up functionality for `Info.flatten`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,193fab81868560ac674a938b294afe3e8eaedb89,Samuel Audet,2016-01-09T04:50:01Z,samuel.audet@gmail.com,Samuel Audet,2016-01-09T04:50:01Z,samuel.audet@gmail.com,42,32,10,Fix up functionality for `Info.flatten`
,src/main/java/org/bytedeco/javacpp/BytePointer.java,e4208cc3b52a36a9b09a8f822a5c10226d9f4a7d,Samuel Audet,2015-12-28T03:30:12Z,samuel.audet@gmail.com,Samuel Audet,2015-12-28T03:30:12Z,samuel.audet@gmail.com,48,28,20, * Improve the performance of `BytePointer.getString()` by using `strlen()`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,e4208cc3b52a36a9b09a8f822a5c10226d9f4a7d,Samuel Audet,2015-12-28T03:30:12Z,samuel.audet@gmail.com,Samuel Audet,2015-12-28T03:30:12Z,samuel.audet@gmail.com,48,28,20, * Improve the performance of `BytePointer.getString()` by using `strlen()`
,src/main/java/org/bytedeco/javacpp/Loader.java,c290c326f9d16b127e60f8ec3f14fac8d3e5d1fc,Samuel Audet,2015-12-26T10:45:16Z,samuel.audet@gmail.com,Samuel Audet,2015-12-26T10:45:16Z,samuel.audet@gmail.com,70,43,27," * Prevent `Generator` from initializing classes when preloading them, which can cause problems (issue bytedeco/javacpp-presets#126)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,c290c326f9d16b127e60f8ec3f14fac8d3e5d1fc,Samuel Audet,2015-12-26T10:45:16Z,samuel.audet@gmail.com,Samuel Audet,2015-12-26T10:45:16Z,samuel.audet@gmail.com,70,43,27," * Prevent `Generator` from initializing classes when preloading them, which can cause problems (issue bytedeco/javacpp-presets#126)"
,src/main/java/org/bytedeco/javacpp/tools/Logger.java,c290c326f9d16b127e60f8ec3f14fac8d3e5d1fc,Samuel Audet,2015-12-26T10:45:16Z,samuel.audet@gmail.com,Samuel Audet,2015-12-26T10:45:16Z,samuel.audet@gmail.com,70,43,27," * Prevent `Generator` from initializing classes when preloading them, which can cause problems (issue bytedeco/javacpp-presets#126)"
,src/main/java/org/bytedeco/javacpp/tools/Info.java,cbee6ca6a7b6756b7fdfd3e86c55868c86a39534,Samuel Audet,2015-12-26T03:44:40Z,samuel.audet@gmail.com,Samuel Audet,2015-12-26T03:44:40Z,samuel.audet@gmail.com,17,15,2," * Add `Info.flatten` to duplicate class declarations into their subclasses, useful when a subclass pointer cannot be used for the base class as well"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,cbee6ca6a7b6756b7fdfd3e86c55868c86a39534,Samuel Audet,2015-12-26T03:44:40Z,samuel.audet@gmail.com,Samuel Audet,2015-12-26T03:44:40Z,samuel.audet@gmail.com,17,15,2," * Add `Info.flatten` to duplicate class declarations into their subclasses, useful when a subclass pointer cannot be used for the base class as well"
,src/main/java/org/bytedeco/javacpp/Loader.java,ffab0a367c6e57455f8be3117cd7a75167d50000,Samuel Audet,2015-12-20T02:18:39Z,samuel.audet@gmail.com,Samuel Audet,2015-12-20T02:18:39Z,samuel.audet@gmail.com,14,11,3," * Prevent `Loader` from extracting libraries more than once, which can cause problems (issue bytedeco/javacpp-presets#126)
 * Make `Indexer implements AutoCloseable` to let us try-with-resources"
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,ffab0a367c6e57455f8be3117cd7a75167d50000,Samuel Audet,2015-12-20T02:18:39Z,samuel.audet@gmail.com,Samuel Audet,2015-12-20T02:18:39Z,samuel.audet@gmail.com,14,11,3," * Prevent `Loader` from extracting libraries more than once, which can cause problems (issue bytedeco/javacpp-presets#126)
 * Make `Indexer implements AutoCloseable` to let us try-with-resources"
,src/main/java/org/bytedeco/javacpp/Loader.java,4bfc68ba0a31384ec103233cdf3bd56673c8af05,Samuel Audet,2015-12-12T12:43:57Z,samuel.audet@gmail.com,Samuel Audet,2015-12-12T12:43:57Z,samuel.audet@gmail.com,87,22,65," * Add missing calls to `close()` for `InputStream` and `OutputStream` in `Loader` (issue #53)
 * Remove `Piper` class no longer needed with Java SE 7"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,4bfc68ba0a31384ec103233cdf3bd56673c8af05,Samuel Audet,2015-12-12T12:43:57Z,samuel.audet@gmail.com,Samuel Audet,2015-12-12T12:43:57Z,samuel.audet@gmail.com,87,22,65," * Add missing calls to `close()` for `InputStream` and `OutputStream` in `Loader` (issue #53)
 * Remove `Piper` class no longer needed with Java SE 7"
,src/main/java/org/bytedeco/javacpp/tools/Piper.java,4bfc68ba0a31384ec103233cdf3bd56673c8af05,Samuel Audet,2015-12-12T12:43:57Z,samuel.audet@gmail.com,Samuel Audet,2015-12-12T12:43:57Z,samuel.audet@gmail.com,87,22,65," * Add missing calls to `close()` for `InputStream` and `OutputStream` in `Loader` (issue #53)
 * Remove `Piper` class no longer needed with Java SE 7"
,src/main/java/org/bytedeco/javacpp/annotation/Adapter.java,a5c38602dd7a6affd8a6d8f9b0aec044eb726777,Samuel Audet,2015-12-06T15:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-12-06T15:22:29Z,samuel.audet@gmail.com,18,10,8,Update documentation for the @Adapter annotation with SharedPtrAdapter
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,1f57946c425c89d0afc81b15d12c5ae35016562c,Samuel Audet,2015-12-06T04:14:59Z,samuel.audet@gmail.com,Samuel Audet,2015-12-06T04:14:59Z,samuel.audet@gmail.com,4,2,2, * Fix the `Parser` producing invalid comments for macros
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,42e2b1f5205915976687e624c464b8d030b8a2de,Samuel Audet,2015-12-05T15:56:43Z,samuel.audet@gmail.com,Samuel Audet,2015-12-05T15:56:43Z,samuel.audet@gmail.com,6,4,2, * Let `Parser` place appropriate `Info.javaText()` provided by users in the case of destructors as well
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,947f8db641e731f1365c1968efba0790c95301bc,Samuel Audet,2015-12-03T15:26:17Z,samuel.audet@gmail.com,Samuel Audet,2015-12-03T15:26:17Z,samuel.audet@gmail.com,18,15,3," * Fix the `Parser` skipping over some declarations by mistake
 * To let users specify `...` varargs as `Info.pointerTypes()`, have the `Parser` replace them with array `[]` when not found on the last parameter"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,947f8db641e731f1365c1968efba0790c95301bc,Samuel Audet,2015-12-03T15:26:17Z,samuel.audet@gmail.com,Samuel Audet,2015-12-03T15:26:17Z,samuel.audet@gmail.com,18,15,3," * Fix the `Parser` skipping over some declarations by mistake
 * To let users specify `...` varargs as `Info.pointerTypes()`, have the `Parser` replace them with array `[]` when not found on the last parameter"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,3cee39fe898ed1fc3e039ab80d43a1858132fcae,Samuel Audet,2015-11-29T15:07:05Z,samuel.audet@gmail.com,Samuel Audet,2015-11-29T15:07:05Z,samuel.audet@gmail.com,59,54,5," * Enhance basic support for containers of the style `std::vector<std::pair< ... > >` with user-friendly array-based setter methods
 * Fix `Generator` not passing function objects even when annotating `FunctionPointer` parameters with `@ByVal` or `@ByRef`
 * Map `bool*` to `boolean[]` tentatively in `Parser` since `sizeof(bool) == sizeof(jboolean)` on most platforms"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,3cee39fe898ed1fc3e039ab80d43a1858132fcae,Samuel Audet,2015-11-29T15:07:05Z,samuel.audet@gmail.com,Samuel Audet,2015-11-29T15:07:05Z,samuel.audet@gmail.com,59,54,5," * Enhance basic support for containers of the style `std::vector<std::pair< ... > >` with user-friendly array-based setter methods
 * Fix `Generator` not passing function objects even when annotating `FunctionPointer` parameters with `@ByVal` or `@ByRef`
 * Map `bool*` to `boolean[]` tentatively in `Parser` since `sizeof(bool) == sizeof(jboolean)` on most platforms"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,3cee39fe898ed1fc3e039ab80d43a1858132fcae,Samuel Audet,2015-11-29T15:07:05Z,samuel.audet@gmail.com,Samuel Audet,2015-11-29T15:07:05Z,samuel.audet@gmail.com,59,54,5," * Enhance basic support for containers of the style `std::vector<std::pair< ... > >` with user-friendly array-based setter methods
 * Fix `Generator` not passing function objects even when annotating `FunctionPointer` parameters with `@ByVal` or `@ByRef`
 * Map `bool*` to `boolean[]` tentatively in `Parser` since `sizeof(bool) == sizeof(jboolean)` on most platforms"
,src/main/java/org/bytedeco/javacpp/tools/Context.java,45daaa690059ca65a12fdbc965beb8f0aebb6dbc,Samuel Audet,2015-11-22T00:29:11Z,samuel.audet@gmail.com,Samuel Audet,2015-11-22T00:29:11Z,samuel.audet@gmail.com,172,119,53," * Allow `Parser` to generate `@Cast()` annotations and overloaded `put()` methods in basic containers too
 * Move list of basic containers and types to `Info.cppTypes` of the ""basic/containers"" and ""basic/types"" `InfoMap` entries, letting users change them at build time
 * Fix some `Parser` issues with `typedef` and forward declarations inside `class` definitions"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,45daaa690059ca65a12fdbc965beb8f0aebb6dbc,Samuel Audet,2015-11-22T00:29:11Z,samuel.audet@gmail.com,Samuel Audet,2015-11-22T00:29:11Z,samuel.audet@gmail.com,172,119,53," * Allow `Parser` to generate `@Cast()` annotations and overloaded `put()` methods in basic containers too
 * Move list of basic containers and types to `Info.cppTypes` of the ""basic/containers"" and ""basic/types"" `InfoMap` entries, letting users change them at build time
 * Fix some `Parser` issues with `typedef` and forward declarations inside `class` definitions"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,45daaa690059ca65a12fdbc965beb8f0aebb6dbc,Samuel Audet,2015-11-22T00:29:11Z,samuel.audet@gmail.com,Samuel Audet,2015-11-22T00:29:11Z,samuel.audet@gmail.com,172,119,53," * Allow `Parser` to generate `@Cast()` annotations and overloaded `put()` methods in basic containers too
 * Move list of basic containers and types to `Info.cppTypes` of the ""basic/containers"" and ""basic/types"" `InfoMap` entries, letting users change them at build time
 * Fix some `Parser` issues with `typedef` and forward declarations inside `class` definitions"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,45daaa690059ca65a12fdbc965beb8f0aebb6dbc,Samuel Audet,2015-11-22T00:29:11Z,samuel.audet@gmail.com,Samuel Audet,2015-11-22T00:29:11Z,samuel.audet@gmail.com,172,119,53," * Allow `Parser` to generate `@Cast()` annotations and overloaded `put()` methods in basic containers too
 * Move list of basic containers and types to `Info.cppTypes` of the ""basic/containers"" and ""basic/types"" `InfoMap` entries, letting users change them at build time
 * Fix some `Parser` issues with `typedef` and forward declarations inside `class` definitions"
,src/main/java/org/bytedeco/javacpp/tools/Type.java,45daaa690059ca65a12fdbc965beb8f0aebb6dbc,Samuel Audet,2015-11-22T00:29:11Z,samuel.audet@gmail.com,Samuel Audet,2015-11-22T00:29:11Z,samuel.audet@gmail.com,172,119,53," * Allow `Parser` to generate `@Cast()` annotations and overloaded `put()` methods in basic containers too
 * Move list of basic containers and types to `Info.cppTypes` of the ""basic/containers"" and ""basic/types"" `InfoMap` entries, letting users change them at build time
 * Fix some `Parser` issues with `typedef` and forward declarations inside `class` definitions"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,bc444bccd0801730ab226fcf94207779169edfc9,Samuel Audet,2015-11-19T14:20:11Z,samuel.audet@gmail.com,Samuel Audet,2015-11-19T14:20:11Z,samuel.audet@gmail.com,12,11,1, * Insure `Parser` maps 64-bit values in C++ `enum` to `long` variables (issue #48)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,03f91d7e79eb537a4a53958803ef478efd0caa78,Samuel Audet,2015-11-16T14:35:09Z,samuel.audet@gmail.com,Samuel Audet,2015-11-16T14:35:09Z,samuel.audet@gmail.com,30,16,14," * Fix `Generator` trying to cast improperly objects on return from  `@Virtual` functions
 * Make `Parser` take `constexpr` into account"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,03f91d7e79eb537a4a53958803ef478efd0caa78,Samuel Audet,2015-11-16T14:35:09Z,samuel.audet@gmail.com,Samuel Audet,2015-11-16T14:35:09Z,samuel.audet@gmail.com,30,16,14," * Fix `Generator` trying to cast improperly objects on return from  `@Virtual` functions
 * Make `Parser` take `constexpr` into account"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,03f91d7e79eb537a4a53958803ef478efd0caa78,Samuel Audet,2015-11-16T14:35:09Z,samuel.audet@gmail.com,Samuel Audet,2015-11-16T14:35:09Z,samuel.audet@gmail.com,30,16,14," * Fix `Generator` trying to cast improperly objects on return from  `@Virtual` functions
 * Make `Parser` take `constexpr` into account"
,src/main/java/org/bytedeco/javacpp/tools/Token.java,03f91d7e79eb537a4a53958803ef478efd0caa78,Samuel Audet,2015-11-16T14:35:09Z,samuel.audet@gmail.com,Samuel Audet,2015-11-16T14:35:09Z,samuel.audet@gmail.com,30,16,14," * Fix `Generator` trying to cast improperly objects on return from  `@Virtual` functions
 * Make `Parser` take `constexpr` into account"
,src/main/java/org/bytedeco/javacpp/tools/Context.java,2eeb49f6613ff02d20f741e4051773bfd5bcfe85,Samuel Audet,2015-11-15T14:41:30Z,samuel.audet@gmail.com,Samuel Audet,2015-11-15T14:41:30Z,samuel.audet@gmail.com,88,68,20," * Make `Parser` take namespace aliases into account, and fix a couple of preprocessing issues with `TokenIndexer`"
,src/main/java/org/bytedeco/javacpp/tools/Declaration.java,2eeb49f6613ff02d20f741e4051773bfd5bcfe85,Samuel Audet,2015-11-15T14:41:30Z,samuel.audet@gmail.com,Samuel Audet,2015-11-15T14:41:30Z,samuel.audet@gmail.com,88,68,20," * Make `Parser` take namespace aliases into account, and fix a couple of preprocessing issues with `TokenIndexer`"
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,2eeb49f6613ff02d20f741e4051773bfd5bcfe85,Samuel Audet,2015-11-15T14:41:30Z,samuel.audet@gmail.com,Samuel Audet,2015-11-15T14:41:30Z,samuel.audet@gmail.com,88,68,20," * Make `Parser` take namespace aliases into account, and fix a couple of preprocessing issues with `TokenIndexer`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,2eeb49f6613ff02d20f741e4051773bfd5bcfe85,Samuel Audet,2015-11-15T14:41:30Z,samuel.audet@gmail.com,Samuel Audet,2015-11-15T14:41:30Z,samuel.audet@gmail.com,88,68,20," * Make `Parser` take namespace aliases into account, and fix a couple of preprocessing issues with `TokenIndexer`"
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,2eeb49f6613ff02d20f741e4051773bfd5bcfe85,Samuel Audet,2015-11-15T14:41:30Z,samuel.audet@gmail.com,Samuel Audet,2015-11-15T14:41:30Z,samuel.audet@gmail.com,88,68,20," * Make `Parser` take namespace aliases into account, and fix a couple of preprocessing issues with `TokenIndexer`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,1268a92291ff51c6a4179b87b43fe1c0a4534828,Samuel Audet,2015-11-12T13:26:12Z,samuel.audet@gmail.com,Samuel Audet,2015-11-12T13:26:12Z,samuel.audet@gmail.com,10,10,0, * Make `Parser` ignore namespace aliases
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,1e3a64b6a8eb91d8b9f9cd7b27216137851f1c5c,Samuel Audet,2015-11-10T14:47:12Z,samuel.audet@gmail.com,Samuel Audet,2015-11-10T14:47:12Z,samuel.audet@gmail.com,66,45,21," * Fix primitive arrays and NIO buffers not getting updated on return when used as arguments with adapters (issue bytedeco/javacpp-presets#109)
 * Remove confusing and now unnecessary empty constructors"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,1e3a64b6a8eb91d8b9f9cd7b27216137851f1c5c,Samuel Audet,2015-11-10T14:47:12Z,samuel.audet@gmail.com,Samuel Audet,2015-11-10T14:47:12Z,samuel.audet@gmail.com,66,45,21," * Fix primitive arrays and NIO buffers not getting updated on return when used as arguments with adapters (issue bytedeco/javacpp-presets#109)
 * Remove confusing and now unnecessary empty constructors"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,85d86231c0504faa4247e096384510aaaeb7d78c,Samuel Audet,2015-11-07T11:21:24Z,samuel.audet@gmail.com,Samuel Audet,2015-11-07T11:21:24Z,samuel.audet@gmail.com,86,73,13,"Update version in the `pom.xml` file to 1.2-SNAPSHOT

 * Enhance a bit the conversion from Doxygen-style documentation comments to Javadoc-style
 * Remove class check in allocators, which prevented peer classes from being extended in Java, instead relying on `super((Pointer)null)` in child peer classes"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,85d86231c0504faa4247e096384510aaaeb7d78c,Samuel Audet,2015-11-07T11:21:24Z,samuel.audet@gmail.com,Samuel Audet,2015-11-07T11:21:24Z,samuel.audet@gmail.com,86,73,13,"Update version in the `pom.xml` file to 1.2-SNAPSHOT

 * Enhance a bit the conversion from Doxygen-style documentation comments to Javadoc-style
 * Remove class check in allocators, which prevented peer classes from being extended in Java, instead relying on `super((Pointer)null)` in child peer classes"
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,358ae48f19102856bf33bfe61c07e0b4654c8590,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,217,112,105,Remove unnecessary use of `LinkedList` and switch to `ArrayList` for overall efficiency
,src/main/java/org/bytedeco/javacpp/Loader.java,358ae48f19102856bf33bfe61c07e0b4654c8590,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,217,112,105,Remove unnecessary use of `LinkedList` and switch to `ArrayList` for overall efficiency
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,358ae48f19102856bf33bfe61c07e0b4654c8590,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,217,112,105,Remove unnecessary use of `LinkedList` and switch to `ArrayList` for overall efficiency
,src/main/java/org/bytedeco/javacpp/tools/Context.java,358ae48f19102856bf33bfe61c07e0b4654c8590,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,217,112,105,Remove unnecessary use of `LinkedList` and switch to `ArrayList` for overall efficiency
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,358ae48f19102856bf33bfe61c07e0b4654c8590,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,217,112,105,Remove unnecessary use of `LinkedList` and switch to `ArrayList` for overall efficiency
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,358ae48f19102856bf33bfe61c07e0b4654c8590,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,217,112,105,Remove unnecessary use of `LinkedList` and switch to `ArrayList` for overall efficiency
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,358ae48f19102856bf33bfe61c07e0b4654c8590,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,217,112,105,Remove unnecessary use of `LinkedList` and switch to `ArrayList` for overall efficiency
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,358ae48f19102856bf33bfe61c07e0b4654c8590,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,217,112,105,Remove unnecessary use of `LinkedList` and switch to `ArrayList` for overall efficiency
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,358ae48f19102856bf33bfe61c07e0b4654c8590,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,217,112,105,Remove unnecessary use of `LinkedList` and switch to `ArrayList` for overall efficiency
,src/main/java/org/bytedeco/javacpp/tools/UserClassLoader.java,358ae48f19102856bf33bfe61c07e0b4654c8590,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,Samuel Audet,2015-10-24T03:04:58Z,samuel.audet@gmail.com,217,112,105,Remove unnecessary use of `LinkedList` and switch to `ArrayList` for overall efficiency
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,9c1b8ebd4aa4cb1fcc39094eb3bdc99a522e21f9,Samuel Audet,2015-10-18T14:15:28Z,samuel.audet@gmail.com,Samuel Audet,2015-10-18T14:15:28Z,samuel.audet@gmail.com,12,11,1," * Make `Generator` use actual C++ operators for commonly overloaded ones instead of calling `operator??()` functions, for better portability"
,src/main/java/org/bytedeco/javacpp/Pointer.java,ed752d299900fc92ebd639a1b5b7139f6902b8db,Samuel Audet,2015-10-17T04:37:15Z,samuel.audet@gmail.com,Samuel Audet,2015-10-17T04:37:15Z,samuel.audet@gmail.com,10,5,5, * Fix potential race condition when deallocating `Pointer` objects from multiple threads
,src/main/java/org/bytedeco/javacpp/tools/Info.java,ed752d299900fc92ebd639a1b5b7139f6902b8db,Samuel Audet,2015-10-17T04:37:15Z,samuel.audet@gmail.com,Samuel Audet,2015-10-17T04:37:15Z,samuel.audet@gmail.com,10,5,5, * Fix potential race condition when deallocating `Pointer` objects from multiple threads
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,ed752d299900fc92ebd639a1b5b7139f6902b8db,Samuel Audet,2015-10-17T04:37:15Z,samuel.audet@gmail.com,Samuel Audet,2015-10-17T04:37:15Z,samuel.audet@gmail.com,10,5,5, * Fix potential race condition when deallocating `Pointer` objects from multiple threads
,src/main/java/org/bytedeco/javacpp/Loader.java,21e3e4e4f8e38589f77eabe56d2baec5831009eb,Samuel Audet,2015-10-11T02:02:42Z,samuel.audet@gmail.com,Samuel Audet,2015-10-11T02:02:42Z,samuel.audet@gmail.com,24,23,1, * Add logging to `Loader.loadLibrary()` to help diagnose loading problems (issue #41)
,src/main/java/org/bytedeco/javacpp/tools/Logger.java,21e3e4e4f8e38589f77eabe56d2baec5831009eb,Samuel Audet,2015-10-11T02:02:42Z,samuel.audet@gmail.com,Samuel Audet,2015-10-11T02:02:42Z,samuel.audet@gmail.com,24,23,1, * Add logging to `Loader.loadLibrary()` to help diagnose loading problems (issue #41)
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,c0b20be489f57b51971d96008d6bdb946c1b1855,Samuel Audet,2015-10-10T07:59:48Z,samuel.audet@gmail.com,Samuel Audet,2015-10-10T07:59:48Z,samuel.audet@gmail.com,13,11,2, * Provide new `@Platform(pragma=...)` value to have `Generator` output `#pragma` directives
,src/main/java/org/bytedeco/javacpp/Loader.java,c0b20be489f57b51971d96008d6bdb946c1b1855,Samuel Audet,2015-10-10T07:59:48Z,samuel.audet@gmail.com,Samuel Audet,2015-10-10T07:59:48Z,samuel.audet@gmail.com,13,11,2, * Provide new `@Platform(pragma=...)` value to have `Generator` output `#pragma` directives
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,c0b20be489f57b51971d96008d6bdb946c1b1855,Samuel Audet,2015-10-10T07:59:48Z,samuel.audet@gmail.com,Samuel Audet,2015-10-10T07:59:48Z,samuel.audet@gmail.com,13,11,2, * Provide new `@Platform(pragma=...)` value to have `Generator` output `#pragma` directives
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,c0b20be489f57b51971d96008d6bdb946c1b1855,Samuel Audet,2015-10-10T07:59:48Z,samuel.audet@gmail.com,Samuel Audet,2015-10-10T07:59:48Z,samuel.audet@gmail.com,13,11,2, * Provide new `@Platform(pragma=...)` value to have `Generator` output `#pragma` directives
,src/main/java/org/bytedeco/javacpp/Loader.java,fd663f16aed6d7702572850da61a692c64d94cd7,Samuel Audet,2015-09-27T10:47:07Z,samuel.audet@gmail.com,Samuel Audet,2015-09-27T10:47:07Z,samuel.audet@gmail.com,40,36,4," * Add new ""org.bytedeco.javacpp.cachedir"" system property to specify where to extract and leave native libraries to share across multiple JVM instances"
,src/main/java/org/bytedeco/javacpp/annotation/Virtual.java,5070834a7ebec8453c3d50384652ac33b59fcd99,Samuel Audet,2015-09-25T07:44:12Z,samuel.audet@gmail.com,Samuel Audet,2015-09-25T07:44:12Z,samuel.audet@gmail.com,40,25,15," * Provide `@Virtual(true)` to specify pure virtual functions and prevent `Generator` from making undefined calls
 * Update properties for Android to detect undefined symbols at compile time"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,5070834a7ebec8453c3d50384652ac33b59fcd99,Samuel Audet,2015-09-25T07:44:12Z,samuel.audet@gmail.com,Samuel Audet,2015-09-25T07:44:12Z,samuel.audet@gmail.com,40,25,15," * Provide `@Virtual(true)` to specify pure virtual functions and prevent `Generator` from making undefined calls
 * Update properties for Android to detect undefined symbols at compile time"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,5070834a7ebec8453c3d50384652ac33b59fcd99,Samuel Audet,2015-09-25T07:44:12Z,samuel.audet@gmail.com,Samuel Audet,2015-09-25T07:44:12Z,samuel.audet@gmail.com,40,25,15," * Provide `@Virtual(true)` to specify pure virtual functions and prevent `Generator` from making undefined calls
 * Update properties for Android to detect undefined symbols at compile time"
,src/main/java/org/bytedeco/javacpp/Pointer.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/main/java/org/bytedeco/javacpp/annotation/Allocator.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/main/java/org/bytedeco/javacpp/annotation/ArrayAllocator.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/main/java/org/bytedeco/javacpp/tools/Logger.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/main/java/org/bytedeco/javacpp/tools/Slf4jLogger.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,9ff6d936641c8fa279348ebe8ba84ad9f6830bc3,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,Samuel Audet,2015-09-20T13:54:59Z,samuel.audet@gmail.com,207,168,39," * Log when `Pointer.deallocator` gets registered, garbage collected, or deallocated manually, if `Logger.isDebugEnabled()` (redirectable to SLF4J)
 * Make `Pointer implements AutoCloseable` to let us try-with-resources, thus bumping requirements to Java SE 7 and Android 4.0"
,src/main/java/org/bytedeco/javacpp/Pointer.java,f61ac32ec07bb0c1e0e96e40480ebac40823c6bd,Samuel Audet,2015-09-15T14:48:38Z,samuel.audet@gmail.com,Samuel Audet,2015-09-15T14:48:38Z,samuel.audet@gmail.com,340,248,92,"Update version in the `pom.xml` file to 1.1-SNAPSHOT

 * Introduce the concept of ""owner address"" to integrate `Pointer` transparently with `std::shared_ptr`, etc (Thanks to Cyprien Noel for the idea!)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,f61ac32ec07bb0c1e0e96e40480ebac40823c6bd,Samuel Audet,2015-09-15T14:48:38Z,samuel.audet@gmail.com,Samuel Audet,2015-09-15T14:48:38Z,samuel.audet@gmail.com,340,248,92,"Update version in the `pom.xml` file to 1.1-SNAPSHOT

 * Introduce the concept of ""owner address"" to integrate `Pointer` transparently with `std::shared_ptr`, etc (Thanks to Cyprien Noel for the idea!)"
,src/test/java/org/bytedeco/javacpp/AdapterTest.java,f61ac32ec07bb0c1e0e96e40480ebac40823c6bd,Samuel Audet,2015-09-15T14:48:38Z,samuel.audet@gmail.com,Samuel Audet,2015-09-15T14:48:38Z,samuel.audet@gmail.com,340,248,92,"Update version in the `pom.xml` file to 1.1-SNAPSHOT

 * Introduce the concept of ""owner address"" to integrate `Pointer` transparently with `std::shared_ptr`, etc (Thanks to Cyprien Noel for the idea!)"
,src/test/resources/org/bytedeco/javacpp/AdapterTest.h,f61ac32ec07bb0c1e0e96e40480ebac40823c6bd,Samuel Audet,2015-09-15T14:48:38Z,samuel.audet@gmail.com,Samuel Audet,2015-09-15T14:48:38Z,samuel.audet@gmail.com,340,248,92,"Update version in the `pom.xml` file to 1.1-SNAPSHOT

 * Introduce the concept of ""owner address"" to integrate `Pointer` transparently with `std::shared_ptr`, etc (Thanks to Cyprien Noel for the idea!)"
,src/test/resources/org/bytedeco/javacpp/StringTest.h,f61ac32ec07bb0c1e0e96e40480ebac40823c6bd,Samuel Audet,2015-09-15T14:48:38Z,samuel.audet@gmail.com,Samuel Audet,2015-09-15T14:48:38Z,samuel.audet@gmail.com,340,248,92,"Update version in the `pom.xml` file to 1.1-SNAPSHOT

 * Introduce the concept of ""owner address"" to integrate `Pointer` transparently with `std::shared_ptr`, etc (Thanks to Cyprien Noel for the idea!)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,466d6a97abe4ef11f6454d147f65220c1b27741d,Samuel Audet,2015-09-14T14:04:08Z,samuel.audet@gmail.com,Samuel Audet,2015-09-14T14:04:08Z,samuel.audet@gmail.com,8,5,3, * Fix `Parser` support for the `interface` keyword of the Microsoft C/C++ Compiler
,src/main/java/org/bytedeco/javacpp/tools/Token.java,466d6a97abe4ef11f6454d147f65220c1b27741d,Samuel Audet,2015-09-14T14:04:08Z,samuel.audet@gmail.com,Samuel Audet,2015-09-14T14:04:08Z,samuel.audet@gmail.com,8,5,3, * Fix `Parser` support for the `interface` keyword of the Microsoft C/C++ Compiler
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,5047c36d4b5d1ccfc59c44336360370b7688d85b,Samuel Audet,2015-09-13T04:02:26Z,samuel.audet@gmail.com,Samuel Audet,2015-09-13T04:02:26Z,samuel.audet@gmail.com,33,31,2, * Let `Parser` pick up names from `Info.pointerTypes` in the case of function pointers as well
,src/main/java/org/bytedeco/javacpp/Pointer.java,28f840add57aeb1b9d867fa57186501ebb27bcb2,Samuel Audet,2015-09-11T14:21:47Z,samuel.audet@gmail.com,Samuel Audet,2015-09-11T14:21:47Z,samuel.audet@gmail.com,36,21,15," * Add new ""org.bytedeco.javacpp.nopointergc"" system property to prevent `Pointer` from registering deallocators with the garbage collector"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,fbcd62c6b0716aa37d1d17a13d641a0550589415,Samuel Audet,2015-09-11T14:20:32Z,samuel.audet@gmail.com,Samuel Audet,2015-09-11T14:20:32Z,samuel.audet@gmail.com,4,2,2, * Fix `Parser` bug involving simple types and skipped identifiers
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,12b526a058c2f0202592adcba3d860342742e230,Samuel Audet,2015-09-06T07:05:54Z,samuel.audet@gmail.com,Samuel Audet,2015-09-06T07:05:54Z,samuel.audet@gmail.com,14,12,2, * Add `@Properties(names=...)` value to specify a list of default platform names that can be inherited by other classes
,src/main/java/org/bytedeco/javacpp/annotation/Properties.java,12b526a058c2f0202592adcba3d860342742e230,Samuel Audet,2015-09-06T07:05:54Z,samuel.audet@gmail.com,Samuel Audet,2015-09-06T07:05:54Z,samuel.audet@gmail.com,14,12,2, * Add `@Properties(names=...)` value to specify a list of default platform names that can be inherited by other classes
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,12b526a058c2f0202592adcba3d860342742e230,Samuel Audet,2015-09-06T07:05:54Z,samuel.audet@gmail.com,Samuel Audet,2015-09-06T07:05:54Z,samuel.audet@gmail.com,14,12,2, * Add `@Properties(names=...)` value to specify a list of default platform names that can be inherited by other classes
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,f424004a0f39a88d13e1a1197a823778740b7493,Samuel Audet,2015-09-03T14:36:44Z,samuel.audet@gmail.com,Samuel Audet,2015-09-03T14:36:44Z,samuel.audet@gmail.com,74,46,28, * Fix a couple of `Parser` issues on complex template types (issue #37)
,src/main/java/org/bytedeco/javacpp/tools/Type.java,f424004a0f39a88d13e1a1197a823778740b7493,Samuel Audet,2015-09-03T14:36:44Z,samuel.audet@gmail.com,Samuel Audet,2015-09-03T14:36:44Z,samuel.audet@gmail.com,74,46,28, * Fix a couple of `Parser` issues on complex template types (issue #37)
,src/main/java/org/bytedeco/javacpp/BytePointer.java,aaa803a33f55ed078844493b1f4c4709e06e7fc4,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,29,15,14, * Take into account `Buffer.arrayOffset()` when creating a `Pointer` from a buffer backed by an array (issue bytedeco/javacv#190)
,src/main/java/org/bytedeco/javacpp/CharPointer.java,aaa803a33f55ed078844493b1f4c4709e06e7fc4,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,29,15,14, * Take into account `Buffer.arrayOffset()` when creating a `Pointer` from a buffer backed by an array (issue bytedeco/javacv#190)
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,aaa803a33f55ed078844493b1f4c4709e06e7fc4,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,29,15,14, * Take into account `Buffer.arrayOffset()` when creating a `Pointer` from a buffer backed by an array (issue bytedeco/javacv#190)
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,aaa803a33f55ed078844493b1f4c4709e06e7fc4,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,29,15,14, * Take into account `Buffer.arrayOffset()` when creating a `Pointer` from a buffer backed by an array (issue bytedeco/javacv#190)
,src/main/java/org/bytedeco/javacpp/IntPointer.java,aaa803a33f55ed078844493b1f4c4709e06e7fc4,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,29,15,14, * Take into account `Buffer.arrayOffset()` when creating a `Pointer` from a buffer backed by an array (issue bytedeco/javacv#190)
,src/main/java/org/bytedeco/javacpp/LongPointer.java,aaa803a33f55ed078844493b1f4c4709e06e7fc4,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,29,15,14, * Take into account `Buffer.arrayOffset()` when creating a `Pointer` from a buffer backed by an array (issue bytedeco/javacv#190)
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,aaa803a33f55ed078844493b1f4c4709e06e7fc4,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,Samuel Audet,2015-09-01T12:54:45Z,samuel.audet@gmail.com,29,15,14, * Take into account `Buffer.arrayOffset()` when creating a `Pointer` from a buffer backed by an array (issue bytedeco/javacv#190)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,b94b057d702fc3d579589cbfa33cc5adf3ec2ba4,Samuel Audet,2015-08-24T14:43:55Z,samuel.audet@gmail.com,Samuel Audet,2015-08-24T14:43:55Z,samuel.audet@gmail.com,17,15,2, * Fix some incorrectly translated comments in `Parser` (issue #32)
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,1e799612a0867f8445e87055df62423897d6ed9b,Samuel Audet,2015-08-22T14:09:28Z,samuel.audet@gmail.com,Samuel Audet,2015-08-22T14:09:28Z,samuel.audet@gmail.com,9,8,1," * Add `Parser` support for the `std::bitset` ""container"""
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,1e799612a0867f8445e87055df62423897d6ed9b,Samuel Audet,2015-08-22T14:09:28Z,samuel.audet@gmail.com,Samuel Audet,2015-08-22T14:09:28Z,samuel.audet@gmail.com,9,8,1," * Add `Parser` support for the `std::bitset` ""container"""
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,5c259e1ee08c65a89dd4af4a4ee8c12af9547fc8,Samuel Audet,2015-08-17T13:14:22Z,samuel.audet@gmail.com,Samuel Audet,2015-08-17T13:14:22Z,samuel.audet@gmail.com,2,1,1, * Fix one more potential `NullPointerException` in `Parser` (issue #30)
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,9ed94ed61c01c711b08f9fe290701ecc5f008b00,Samuel Audet,2015-08-16T07:02:01Z,samuel.audet@gmail.com,Samuel Audet,2015-08-16T07:02:01Z,samuel.audet@gmail.com,108,56,52," * Properly parse overloaded `new` and `delete` operators, `friend` declarations, and default constructors with an explicit `void` parameter (issue #31)
 * Fix a couple of potential `NullPointerException` in `Parser` (issue #30)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,9ed94ed61c01c711b08f9fe290701ecc5f008b00,Samuel Audet,2015-08-16T07:02:01Z,samuel.audet@gmail.com,Samuel Audet,2015-08-16T07:02:01Z,samuel.audet@gmail.com,108,56,52," * Properly parse overloaded `new` and `delete` operators, `friend` declarations, and default constructors with an explicit `void` parameter (issue #31)
 * Fix a couple of potential `NullPointerException` in `Parser` (issue #30)"
,src/main/java/org/bytedeco/javacpp/tools/Token.java,9ed94ed61c01c711b08f9fe290701ecc5f008b00,Samuel Audet,2015-08-16T07:02:01Z,samuel.audet@gmail.com,Samuel Audet,2015-08-16T07:02:01Z,samuel.audet@gmail.com,108,56,52," * Properly parse overloaded `new` and `delete` operators, `friend` declarations, and default constructors with an explicit `void` parameter (issue #31)
 * Fix a couple of potential `NullPointerException` in `Parser` (issue #30)"
,src/main/java/org/bytedeco/javacpp/tools/Type.java,9ed94ed61c01c711b08f9fe290701ecc5f008b00,Samuel Audet,2015-08-16T07:02:01Z,samuel.audet@gmail.com,Samuel Audet,2015-08-16T07:02:01Z,samuel.audet@gmail.com,108,56,52," * Properly parse overloaded `new` and `delete` operators, `friend` declarations, and default constructors with an explicit `void` parameter (issue #31)
 * Fix a couple of potential `NullPointerException` in `Parser` (issue #30)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,5d374eb83f23da870d1fd0f84f27a1991fd26946,Samuel Audet,2015-08-12T16:23:20Z,samuel.audet@gmail.com,Samuel Audet,2015-08-12T16:23:20Z,samuel.audet@gmail.com,40,28,12, * Have the `Parser` wrap the `iterator` of some standard C++ containers when useful
,src/main/java/org/bytedeco/javacpp/BytePointer.java,13ce836beb73cb992aaf12af0569976d680c7809,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,207,185,22," * Adjust `BytePointer`, `CharPointer`, `IntPointer`, and `StringAdapter` to work with data strings that are not null-terminated (issue #24)"
,src/main/java/org/bytedeco/javacpp/CharPointer.java,13ce836beb73cb992aaf12af0569976d680c7809,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,207,185,22," * Adjust `BytePointer`, `CharPointer`, `IntPointer`, and `StringAdapter` to work with data strings that are not null-terminated (issue #24)"
,src/main/java/org/bytedeco/javacpp/IntPointer.java,13ce836beb73cb992aaf12af0569976d680c7809,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,207,185,22," * Adjust `BytePointer`, `CharPointer`, `IntPointer`, and `StringAdapter` to work with data strings that are not null-terminated (issue #24)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,13ce836beb73cb992aaf12af0569976d680c7809,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,207,185,22," * Adjust `BytePointer`, `CharPointer`, `IntPointer`, and `StringAdapter` to work with data strings that are not null-terminated (issue #24)"
,src/test/java/org/bytedeco/javacpp/StringTest.java,13ce836beb73cb992aaf12af0569976d680c7809,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,207,185,22," * Adjust `BytePointer`, `CharPointer`, `IntPointer`, and `StringAdapter` to work with data strings that are not null-terminated (issue #24)"
,src/test/resources/org/bytedeco/javacpp/StringTest.h,13ce836beb73cb992aaf12af0569976d680c7809,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,Samuel Audet,2015-08-01T07:56:18Z,samuel.audet@gmail.com,207,185,22," * Adjust `BytePointer`, `CharPointer`, `IntPointer`, and `StringAdapter` to work with data strings that are not null-terminated (issue #24)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,3b3b1c8cf4af364d125dc762859f1b2c2fad7159,Samuel Audet,2015-07-31T14:05:11Z,samuel.audet@gmail.com,Samuel Audet,2015-07-31T14:05:11Z,samuel.audet@gmail.com,9,3,6," * Forbid `Parser` from producing `abstract` classes, preventing C++ factory methods and such from working properly (issue #25)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,9ea091c265fd7525d51b4c9477a5632a371016a0,Samuel Audet,2015-07-30T12:20:28Z,samuel.audet@gmail.com,Samuel Audet,2015-07-30T12:20:28Z,samuel.audet@gmail.com,10,7,3," * Fix crash when trying to create objects from abstract classes, to let the exception be thrown on return (issue #26)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,3d48cb5d856f5e17cbf216d0ef31dcc270430999,Samuel Audet,2015-07-14T13:29:15Z,samuel.audet@gmail.com,Samuel Audet,2015-07-14T13:29:15Z,samuel.audet@gmail.com,8,5,3, * Insure `Generator` casts properly to `jweak` when calling `DeleteWeakGlobalRef()` (issue #23)
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,a5865974b482b0284bfb23c98265af01e2544588,Samuel Audet,2015-07-10T23:35:11Z,samuel.audet@gmail.com,Samuel Audet,2015-07-10T23:35:11Z,samuel.audet@gmail.com,30,21,9," * Add `-undefined dynamic_lookup` option to Mac OS X compiler, making its native linker behave a bit better, plus search for libraries suffixed with "".so"" too"
,src/main/java/org/bytedeco/javacpp/Loader.java,a5865974b482b0284bfb23c98265af01e2544588,Samuel Audet,2015-07-10T23:35:11Z,samuel.audet@gmail.com,Samuel Audet,2015-07-10T23:35:11Z,samuel.audet@gmail.com,30,21,9," * Add `-undefined dynamic_lookup` option to Mac OS X compiler, making its native linker behave a bit better, plus search for libraries suffixed with "".so"" too"
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,6f8181f29ae3a4dc470964a978de0f2b143bb1d8,Samuel Audet,2015-06-27T14:11:22Z,samuel.audet@gmail.com,Samuel Audet,2015-06-27T14:11:22Z,samuel.audet@gmail.com,28,25,3, * Add missing `@Platform(frameworkpath=...)` value and corresponding property to set custom framework paths for the linker
,src/main/java/org/bytedeco/javacpp/Loader.java,6f8181f29ae3a4dc470964a978de0f2b143bb1d8,Samuel Audet,2015-06-27T14:11:22Z,samuel.audet@gmail.com,Samuel Audet,2015-06-27T14:11:22Z,samuel.audet@gmail.com,28,25,3, * Add missing `@Platform(frameworkpath=...)` value and corresponding property to set custom framework paths for the linker
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,6f8181f29ae3a4dc470964a978de0f2b143bb1d8,Samuel Audet,2015-06-27T14:11:22Z,samuel.audet@gmail.com,Samuel Audet,2015-06-27T14:11:22Z,samuel.audet@gmail.com,28,25,3, * Add missing `@Platform(frameworkpath=...)` value and corresponding property to set custom framework paths for the linker
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,6f8181f29ae3a4dc470964a978de0f2b143bb1d8,Samuel Audet,2015-06-27T14:11:22Z,samuel.audet@gmail.com,Samuel Audet,2015-06-27T14:11:22Z,samuel.audet@gmail.com,28,25,3, * Add missing `@Platform(frameworkpath=...)` value and corresponding property to set custom framework paths for the linker
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,de9c9191d2daddbb13a848be4aef2f5339e5723f,Samuel Audet,2015-06-27T07:28:56Z,samuel.audet@gmail.com,Samuel Audet,2015-06-27T07:28:56Z,samuel.audet@gmail.com,13,9,4," * Fix `Parser` errors caused by constructors in nested `typedef struct` constructs, and skip over pointer names too (issue bytedeco/javacpp-presets#62)"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,27ec6825ead26c73d5ebb5ce5807b88992493a79,Samuel Audet,2015-06-26T14:39:56Z,samuel.audet@gmail.com,Samuel Audet,2015-06-26T14:39:56Z,samuel.audet@gmail.com,16,9,7, * Add `Parser` support for the `interface` keyword of the Microsoft C/C++ Compiler
,src/main/java/org/bytedeco/javacpp/tools/Token.java,27ec6825ead26c73d5ebb5ce5807b88992493a79,Samuel Audet,2015-06-26T14:39:56Z,samuel.audet@gmail.com,Samuel Audet,2015-06-26T14:39:56Z,samuel.audet@gmail.com,16,9,7, * Add `Parser` support for the `interface` keyword of the Microsoft C/C++ Compiler
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,9922f748f9c9112b8ae5cf82b29c8f659652cc2a,Samuel Audet,2015-06-20T13:42:33Z,samuel.audet@gmail.com,Samuel Audet,2015-06-20T13:42:33Z,samuel.audet@gmail.com,51,29,22,* Fix `Generator` performance issue on classes with a lot of methods (issue bytedeco/javacpp-presets#36)
,src/main/java/org/bytedeco/javacpp/BoolPointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/BytePointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/CharPointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/FunctionPointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/IntPointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/Loader.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/LongPointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/Pointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/CharArrayIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/CharBufferIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleArrayIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleBufferIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/FloatArrayIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/FloatBufferIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/Indexable.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/IntArrayIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/IntBufferIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/LongArrayIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/LongBufferIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/ShortArrayIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/ShortBufferIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/UByteArrayIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/UByteBufferIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/UShortArrayIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/UShortBufferIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/AdapterInformation.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Attribute.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/ClassScanner.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Context.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Declaration.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Declarator.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/IndexedSet.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Info.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/InfoMapper.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Logger.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/MethodInformation.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Parameters.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/ParserException.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Piper.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/TemplateMap.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Token.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/Type.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/tools/UserClassLoader.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,bc4f0090a4bed47b2a9a09428cf22ce9b9b9a0da,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,Samuel Audet,2015-06-14T03:22:38Z,samuel.audet@gmail.com,2278,1320,958," * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception"
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,9ff00146a99561e42806f92f2576e8d2bb49d1f1,Samuel Audet,2015-06-01T11:44:52Z,samuel.audet@gmail.com,Samuel Audet,2015-06-01T11:44:52Z,samuel.audet@gmail.com,8,5,3, * Fix `NullPointerException` when trying to process an `interface` class
,src/main/java/org/bytedeco/javacpp/annotation/ByRef.java,9ff00146a99561e42806f92f2576e8d2bb49d1f1,Samuel Audet,2015-06-01T11:44:52Z,samuel.audet@gmail.com,Samuel Audet,2015-06-01T11:44:52Z,samuel.audet@gmail.com,8,5,3, * Fix `NullPointerException` when trying to process an `interface` class
,src/main/java/org/bytedeco/javacpp/annotation/ByVal.java,9ff00146a99561e42806f92f2576e8d2bb49d1f1,Samuel Audet,2015-06-01T11:44:52Z,samuel.audet@gmail.com,Samuel Audet,2015-06-01T11:44:52Z,samuel.audet@gmail.com,8,5,3, * Fix `NullPointerException` when trying to process an `interface` class
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,beecf1b58a13af09771a36dbbb0d3d9ad21dd888,Samuel Audet,2015-05-30T04:25:07Z,samuel.audet@gmail.com,Samuel Audet,2015-05-30T04:25:07Z,samuel.audet@gmail.com,39,24,15," * Fix `Parser` errors on unnamed `namespace` blocks, preprocessor directives with comments, and empty macros"
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,beecf1b58a13af09771a36dbbb0d3d9ad21dd888,Samuel Audet,2015-05-30T04:25:07Z,samuel.audet@gmail.com,Samuel Audet,2015-05-30T04:25:07Z,samuel.audet@gmail.com,39,24,15," * Fix `Parser` errors on unnamed `namespace` blocks, preprocessor directives with comments, and empty macros"
,src/main/java/org/bytedeco/javacpp/annotation/ByRef.java,8bd2194be4afc76afa52d12f0489a1d1634737dd,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,140,98,42, * Introduce a `nullValue` to `@ByRef` and `@ByVal` annotations to let us specify what to do when passed `null`
,src/main/java/org/bytedeco/javacpp/annotation/ByVal.java,8bd2194be4afc76afa52d12f0489a1d1634737dd,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,140,98,42, * Introduce a `nullValue` to `@ByRef` and `@ByVal` annotations to let us specify what to do when passed `null`
,src/main/java/org/bytedeco/javacpp/tools/Declarator.java,8bd2194be4afc76afa52d12f0489a1d1634737dd,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,140,98,42, * Introduce a `nullValue` to `@ByRef` and `@ByVal` annotations to let us specify what to do when passed `null`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,8bd2194be4afc76afa52d12f0489a1d1634737dd,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,140,98,42, * Introduce a `nullValue` to `@ByRef` and `@ByVal` annotations to let us specify what to do when passed `null`
,src/main/java/org/bytedeco/javacpp/tools/Info.java,8bd2194be4afc76afa52d12f0489a1d1634737dd,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,140,98,42, * Introduce a `nullValue` to `@ByRef` and `@ByVal` annotations to let us specify what to do when passed `null`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,8bd2194be4afc76afa52d12f0489a1d1634737dd,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,Samuel Audet,2015-05-24T02:50:40Z,samuel.audet@gmail.com,140,98,42, * Introduce a `nullValue` to `@ByRef` and `@ByVal` annotations to let us specify what to do when passed `null`
,src/main/java/org/bytedeco/javacpp/Loader.java,977fbd266cbe7e6725e8c6f6b745e15ed571bed1,Samuel Audet,2015-05-17T13:12:24Z,samuel.audet@gmail.com,Samuel Audet,2015-05-17T13:12:24Z,samuel.audet@gmail.com,74,73,1," * Add properties for `android-arm64`, `android-x86_64`, and `linux-arm64` platforms"
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,d0093ee79cd65e71a41244fd340145bb82de288b,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,14,13,1, * Add slow but generic `Indexer.putDouble()` to complement existing `Indexer.getDouble()` (useful for testing)
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,d0093ee79cd65e71a41244fd340145bb82de288b,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,14,13,1, * Add slow but generic `Indexer.putDouble()` to complement existing `Indexer.getDouble()` (useful for testing)
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,d0093ee79cd65e71a41244fd340145bb82de288b,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,14,13,1, * Add slow but generic `Indexer.putDouble()` to complement existing `Indexer.getDouble()` (useful for testing)
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,d0093ee79cd65e71a41244fd340145bb82de288b,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,14,13,1, * Add slow but generic `Indexer.putDouble()` to complement existing `Indexer.getDouble()` (useful for testing)
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,d0093ee79cd65e71a41244fd340145bb82de288b,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,14,13,1, * Add slow but generic `Indexer.putDouble()` to complement existing `Indexer.getDouble()` (useful for testing)
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,d0093ee79cd65e71a41244fd340145bb82de288b,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,14,13,1, * Add slow but generic `Indexer.putDouble()` to complement existing `Indexer.getDouble()` (useful for testing)
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,d0093ee79cd65e71a41244fd340145bb82de288b,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,14,13,1, * Add slow but generic `Indexer.putDouble()` to complement existing `Indexer.getDouble()` (useful for testing)
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,d0093ee79cd65e71a41244fd340145bb82de288b,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,14,13,1, * Add slow but generic `Indexer.putDouble()` to complement existing `Indexer.getDouble()` (useful for testing)
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,d0093ee79cd65e71a41244fd340145bb82de288b,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,14,13,1, * Add slow but generic `Indexer.putDouble()` to complement existing `Indexer.getDouble()` (useful for testing)
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,d0093ee79cd65e71a41244fd340145bb82de288b,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,Samuel Audet,2015-05-10T12:22:29Z,samuel.audet@gmail.com,14,13,1, * Add slow but generic `Indexer.putDouble()` to complement existing `Indexer.getDouble()` (useful for testing)
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,da07a988a06b07a03bb0b117606b6a7882dc258d,Samuel Audet,2015-04-26T13:38:07Z,samuel.audet@gmail.com,Samuel Audet,2015-04-26T13:38:07Z,samuel.audet@gmail.com,156,112,44," * Fix and enhance in various ways the support of `Parser` and `Generator` for function pointers, virtual functions, and abstract classes
 * Improve `Parser` check for `const` references and pointers required to output appropriate `@Const` annotation
 * Add `Info.purify` to force the `Parser` in producing abstract classes"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,da07a988a06b07a03bb0b117606b6a7882dc258d,Samuel Audet,2015-04-26T13:38:07Z,samuel.audet@gmail.com,Samuel Audet,2015-04-26T13:38:07Z,samuel.audet@gmail.com,156,112,44," * Fix and enhance in various ways the support of `Parser` and `Generator` for function pointers, virtual functions, and abstract classes
 * Improve `Parser` check for `const` references and pointers required to output appropriate `@Const` annotation
 * Add `Info.purify` to force the `Parser` in producing abstract classes"
,src/main/java/org/bytedeco/javacpp/tools/Info.java,da07a988a06b07a03bb0b117606b6a7882dc258d,Samuel Audet,2015-04-26T13:38:07Z,samuel.audet@gmail.com,Samuel Audet,2015-04-26T13:38:07Z,samuel.audet@gmail.com,156,112,44," * Fix and enhance in various ways the support of `Parser` and `Generator` for function pointers, virtual functions, and abstract classes
 * Improve `Parser` check for `const` references and pointers required to output appropriate `@Const` annotation
 * Add `Info.purify` to force the `Parser` in producing abstract classes"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,da07a988a06b07a03bb0b117606b6a7882dc258d,Samuel Audet,2015-04-26T13:38:07Z,samuel.audet@gmail.com,Samuel Audet,2015-04-26T13:38:07Z,samuel.audet@gmail.com,156,112,44," * Fix and enhance in various ways the support of `Parser` and `Generator` for function pointers, virtual functions, and abstract classes
 * Improve `Parser` check for `const` references and pointers required to output appropriate `@Const` annotation
 * Add `Info.purify` to force the `Parser` in producing abstract classes"
,src/main/java/org/bytedeco/javacpp/tools/Type.java,da07a988a06b07a03bb0b117606b6a7882dc258d,Samuel Audet,2015-04-26T13:38:07Z,samuel.audet@gmail.com,Samuel Audet,2015-04-26T13:38:07Z,samuel.audet@gmail.com,156,112,44," * Fix and enhance in various ways the support of `Parser` and `Generator` for function pointers, virtual functions, and abstract classes
 * Improve `Parser` check for `const` references and pointers required to output appropriate `@Const` annotation
 * Add `Info.purify` to force the `Parser` in producing abstract classes"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,d4281196c8b10c1e7ac2cb3566d1fc718eae2781,Samuel Audet,2015-04-19T13:50:20Z,samuel.audet@gmail.com,Samuel Audet,2015-04-19T13:50:20Z,samuel.audet@gmail.com,2,2,0," * Let `StringAdapter` (via the `@StdString` annotation) support `std::string*`, that is to say, pointers to strings"
,src/main/java/org/bytedeco/javacpp/tools/Context.java,7d2ec678cc403a22875fd943132ea22786b30d88,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,156,97,59," * Fix `Tokenizer` failing on some character and string literals
 * Fix `Parser` errors caused by constructors in `typedef struct` constructs
 * Generalize `Info.virtualize` to let non-pure virtual functions get annotated with `@Virtual native`
 * Make `VectorAdapter` work even with elements that have no default constructor
 * Add `Parser` support for `std::pair` as a sort of zero-dimensional container type"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,7d2ec678cc403a22875fd943132ea22786b30d88,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,156,97,59," * Fix `Tokenizer` failing on some character and string literals
 * Fix `Parser` errors caused by constructors in `typedef struct` constructs
 * Generalize `Info.virtualize` to let non-pure virtual functions get annotated with `@Virtual native`
 * Make `VectorAdapter` work even with elements that have no default constructor
 * Add `Parser` support for `std::pair` as a sort of zero-dimensional container type"
,src/main/java/org/bytedeco/javacpp/tools/Info.java,7d2ec678cc403a22875fd943132ea22786b30d88,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,156,97,59," * Fix `Tokenizer` failing on some character and string literals
 * Fix `Parser` errors caused by constructors in `typedef struct` constructs
 * Generalize `Info.virtualize` to let non-pure virtual functions get annotated with `@Virtual native`
 * Make `VectorAdapter` work even with elements that have no default constructor
 * Add `Parser` support for `std::pair` as a sort of zero-dimensional container type"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,7d2ec678cc403a22875fd943132ea22786b30d88,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,156,97,59," * Fix `Tokenizer` failing on some character and string literals
 * Fix `Parser` errors caused by constructors in `typedef struct` constructs
 * Generalize `Info.virtualize` to let non-pure virtual functions get annotated with `@Virtual native`
 * Make `VectorAdapter` work even with elements that have no default constructor
 * Add `Parser` support for `std::pair` as a sort of zero-dimensional container type"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,7d2ec678cc403a22875fd943132ea22786b30d88,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,156,97,59," * Fix `Tokenizer` failing on some character and string literals
 * Fix `Parser` errors caused by constructors in `typedef struct` constructs
 * Generalize `Info.virtualize` to let non-pure virtual functions get annotated with `@Virtual native`
 * Make `VectorAdapter` work even with elements that have no default constructor
 * Add `Parser` support for `std::pair` as a sort of zero-dimensional container type"
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,7d2ec678cc403a22875fd943132ea22786b30d88,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,156,97,59," * Fix `Tokenizer` failing on some character and string literals
 * Fix `Parser` errors caused by constructors in `typedef struct` constructs
 * Generalize `Info.virtualize` to let non-pure virtual functions get annotated with `@Virtual native`
 * Make `VectorAdapter` work even with elements that have no default constructor
 * Add `Parser` support for `std::pair` as a sort of zero-dimensional container type"
,src/main/java/org/bytedeco/javacpp/tools/Type.java,7d2ec678cc403a22875fd943132ea22786b30d88,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,Samuel Audet,2015-04-19T11:29:59Z,samuel.audet@gmail.com,156,97,59," * Fix `Tokenizer` failing on some character and string literals
 * Fix `Parser` errors caused by constructors in `typedef struct` constructs
 * Generalize `Info.virtualize` to let non-pure virtual functions get annotated with `@Virtual native`
 * Make `VectorAdapter` work even with elements that have no default constructor
 * Add `Parser` support for `std::pair` as a sort of zero-dimensional container type"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,91183d50b328b507410c7a1dc9bb340cb2902757,Samuel Audet,2015-04-15T12:20:24Z,samuel.audet@gmail.com,Samuel Audet,2015-04-15T12:20:24Z,samuel.audet@gmail.com,8,5,3, * Fix `Parser` crash on empty comments (issue #14)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,29dd71a15c5c0028d614bd3b5cdd939bacf9db90,Samuel Audet,2015-04-02T13:57:40Z,samuel.audet@gmail.com,Samuel Audet,2015-04-02T13:57:40Z,samuel.audet@gmail.com,21,17,4, * Clarify with documentation comments various constructors produced by the `Parser`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,2d0055ede1937b69fc7fd5e3d16990b65c987378,Samuel Audet,2015-03-11T14:17:51Z,samuel.audet@gmail.com,Samuel Audet,2015-03-11T14:17:51Z,samuel.audet@gmail.com,15,10,5, * Work around a few additional corner cases with the `Parser`
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,26d83ac42f8e2f5c89a36fe6131d0545140e55df,Samuel Audet,2015-03-10T13:24:21Z,samuel.audet@gmail.com,Samuel Audet,2015-03-10T13:24:21Z,samuel.audet@gmail.com,175,95,80, * Fix a few more small issues with the `Parser` and the `Generator`
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,26d83ac42f8e2f5c89a36fe6131d0545140e55df,Samuel Audet,2015-03-10T13:24:21Z,samuel.audet@gmail.com,Samuel Audet,2015-03-10T13:24:21Z,samuel.audet@gmail.com,175,95,80, * Fix a few more small issues with the `Parser` and the `Generator`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,26d83ac42f8e2f5c89a36fe6131d0545140e55df,Samuel Audet,2015-03-10T13:24:21Z,samuel.audet@gmail.com,Samuel Audet,2015-03-10T13:24:21Z,samuel.audet@gmail.com,175,95,80, * Fix a few more small issues with the `Parser` and the `Generator`
,src/main/java/org/bytedeco/javacpp/annotation/SharedPtr.java,ebfea68ae0bbe99c17105bbc14b3535d355ea8c3,Samuel Audet,2015-03-09T13:49:26Z,samuel.audet@gmail.com,Samuel Audet,2015-03-09T13:49:26Z,samuel.audet@gmail.com,77,73,4," * Add `SharedPtrAdapter` and corresponding `@SharedPtr` annotation to support `shared_ptr` containers
 * Fix a few small issues with the `Parser` and the `Generator`"
,src/main/java/org/bytedeco/javacpp/tools/Context.java,ebfea68ae0bbe99c17105bbc14b3535d355ea8c3,Samuel Audet,2015-03-09T13:49:26Z,samuel.audet@gmail.com,Samuel Audet,2015-03-09T13:49:26Z,samuel.audet@gmail.com,77,73,4," * Add `SharedPtrAdapter` and corresponding `@SharedPtr` annotation to support `shared_ptr` containers
 * Fix a few small issues with the `Parser` and the `Generator`"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,ebfea68ae0bbe99c17105bbc14b3535d355ea8c3,Samuel Audet,2015-03-09T13:49:26Z,samuel.audet@gmail.com,Samuel Audet,2015-03-09T13:49:26Z,samuel.audet@gmail.com,77,73,4," * Add `SharedPtrAdapter` and corresponding `@SharedPtr` annotation to support `shared_ptr` containers
 * Fix a few small issues with the `Parser` and the `Generator`"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,ebfea68ae0bbe99c17105bbc14b3535d355ea8c3,Samuel Audet,2015-03-09T13:49:26Z,samuel.audet@gmail.com,Samuel Audet,2015-03-09T13:49:26Z,samuel.audet@gmail.com,77,73,4," * Add `SharedPtrAdapter` and corresponding `@SharedPtr` annotation to support `shared_ptr` containers
 * Fix a few small issues with the `Parser` and the `Generator`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,ebfea68ae0bbe99c17105bbc14b3535d355ea8c3,Samuel Audet,2015-03-09T13:49:26Z,samuel.audet@gmail.com,Samuel Audet,2015-03-09T13:49:26Z,samuel.audet@gmail.com,77,73,4," * Add `SharedPtrAdapter` and corresponding `@SharedPtr` annotation to support `shared_ptr` containers
 * Fix a few small issues with the `Parser` and the `Generator`"
,src/main/java/org/bytedeco/javacpp/indexer/UByteArrayIndexer.java,9bf3ec486b76d932b18da6c55d5632fcc22f4650,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,790,788,2,"Update version in the `pom.xml` file to 0.11-SNAPSHOT
 * Provide `UByteIndexer` and `UShortIndexer`, treating array and buffer data as unsigned integers, for ease of use
 * Clean up Windows `java.io.tmpdir` even when program messes with `java.class.path` (issue #12)"
,src/main/java/org/bytedeco/javacpp/indexer/UByteBufferIndexer.java,9bf3ec486b76d932b18da6c55d5632fcc22f4650,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,790,788,2,"Update version in the `pom.xml` file to 0.11-SNAPSHOT
 * Provide `UByteIndexer` and `UShortIndexer`, treating array and buffer data as unsigned integers, for ease of use
 * Clean up Windows `java.io.tmpdir` even when program messes with `java.class.path` (issue #12)"
,src/main/java/org/bytedeco/javacpp/indexer/UByteIndexer.java,9bf3ec486b76d932b18da6c55d5632fcc22f4650,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,790,788,2,"Update version in the `pom.xml` file to 0.11-SNAPSHOT
 * Provide `UByteIndexer` and `UShortIndexer`, treating array and buffer data as unsigned integers, for ease of use
 * Clean up Windows `java.io.tmpdir` even when program messes with `java.class.path` (issue #12)"
,src/main/java/org/bytedeco/javacpp/indexer/UShortArrayIndexer.java,9bf3ec486b76d932b18da6c55d5632fcc22f4650,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,790,788,2,"Update version in the `pom.xml` file to 0.11-SNAPSHOT
 * Provide `UByteIndexer` and `UShortIndexer`, treating array and buffer data as unsigned integers, for ease of use
 * Clean up Windows `java.io.tmpdir` even when program messes with `java.class.path` (issue #12)"
,src/main/java/org/bytedeco/javacpp/indexer/UShortBufferIndexer.java,9bf3ec486b76d932b18da6c55d5632fcc22f4650,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,790,788,2,"Update version in the `pom.xml` file to 0.11-SNAPSHOT
 * Provide `UByteIndexer` and `UShortIndexer`, treating array and buffer data as unsigned integers, for ease of use
 * Clean up Windows `java.io.tmpdir` even when program messes with `java.class.path` (issue #12)"
,src/main/java/org/bytedeco/javacpp/indexer/UShortIndexer.java,9bf3ec486b76d932b18da6c55d5632fcc22f4650,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,790,788,2,"Update version in the `pom.xml` file to 0.11-SNAPSHOT
 * Provide `UByteIndexer` and `UShortIndexer`, treating array and buffer data as unsigned integers, for ease of use
 * Clean up Windows `java.io.tmpdir` even when program messes with `java.class.path` (issue #12)"
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,9bf3ec486b76d932b18da6c55d5632fcc22f4650,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,Samuel Audet,2015-02-28T12:44:17Z,samuel.audet@gmail.com,790,788,2,"Update version in the `pom.xml` file to 0.11-SNAPSHOT
 * Provide `UByteIndexer` and `UShortIndexer`, treating array and buffer data as unsigned integers, for ease of use
 * Clean up Windows `java.io.tmpdir` even when program messes with `java.class.path` (issue #12)"
,src/main/java/org/bytedeco/javacpp/Loader.java,e2af6ce967b1ea4711ac0b7a54f0cec961b87b43,Samuel Audet,2015-02-24T22:29:29Z,samuel.audet@gmail.com,Samuel Audet,2015-02-24T22:29:29Z,samuel.audet@gmail.com,5,4,1,"Merge pull request #13 from mabruce/tempfile-deleter

 * Clean up Windows `java.io.tmpdir` even when program messes with `java.class.path` (issue #12)"
,src/main/java/org/bytedeco/javacpp/Loader.java,146674f290dc0456288f2ebc12218f34ab719416,mabruce,2015-02-24T19:47:03Z,mabruce@users.noreply.github.com,mabruce,2015-02-24T19:47:03Z,mabruce@users.noreply.github.com,5,4,1,"Feed javacpp.jar path to temp file deleter

Get OS-localized file path to jar file enclosing Loader class, and feed this path to the temp file deleter on Windows instead of java.class.path. If the java program is launched through a dedicated classpath loader, java.class.path may not contain the javacpp jar. By locating the correct jar, this circumstance should be avoided."
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,ab7237e3a313d40124e9e3abfb433023ad0332ad,Samuel Audet,2015-02-18T13:17:52Z,samuel.audet@gmail.com,Samuel Audet,2015-02-18T13:17:52Z,samuel.audet@gmail.com,32,32,0," * In addition to direct NIO buffers, also accept as function arguments non-direct ones backed by arrays (issue bytedeco/javacpp-presets#36)"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,52b7ee1c7cd31f4e8f51ab75d07990151c171335,Samuel Audet,2015-01-15T13:41:57Z,samuel.audet@gmail.com,Samuel Audet,2015-01-15T13:41:57Z,samuel.audet@gmail.com,4,3,1, * Fix `@Virtual` callback functions defined inside a `@Namespace`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,58bb45d315de49d9c966a310279cd05baff1aa05,Samuel Audet,2015-01-12T04:30:03Z,samuel.audet@gmail.com,Samuel Audet,2015-01-12T04:30:03Z,samuel.audet@gmail.com,61,45,16," * Adjust `TokenIndexer` and `Parser` to handle `#if`, `#ifdef`, `#ifndef`, `#elif`, `#else`, and `#endif` preprocessor directives more appropriately, even when placed in the middle of declarations"
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,58bb45d315de49d9c966a310279cd05baff1aa05,Samuel Audet,2015-01-12T04:30:03Z,samuel.audet@gmail.com,Samuel Audet,2015-01-12T04:30:03Z,samuel.audet@gmail.com,61,45,16," * Adjust `TokenIndexer` and `Parser` to handle `#if`, `#ifdef`, `#ifndef`, `#elif`, `#else`, and `#endif` preprocessor directives more appropriately, even when placed in the middle of declarations"
,src/main/java/org/bytedeco/javacpp/annotation/Adapter.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Allocator.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/ArrayAllocator.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/ByPtr.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/ByPtrPtr.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/ByPtrRef.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/ByRef.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/ByVal.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Cast.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Const.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Convention.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Function.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Index.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/MemberGetter.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/MemberSetter.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Name.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Namespace.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/NoDeallocator.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/NoException.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/NoOffset.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Opaque.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Properties.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Raw.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/StdString.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/StdVector.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/ValueGetter.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/ValueSetter.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/annotation/Virtual.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,5a157cbc4b2f43375c97ad3d16b6cc84be371583,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,Samuel Audet,2015-01-06T13:37:19Z,samuel.audet@gmail.com,110,72,38," * Append `@Documented` to annotation types to have them picked up by Javadoc
 * Fix `friend` functions not getting skipped by the `Parser`
 * Add `Info` for `__int8`, `__int16`, `__int32`, and `__int64` to `InfoMap.defaults`"
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,02d978a1dced566678c0680fd9865ab28447460a,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,70,70,0,Implement `Indexer.toString()` to display vectors and matrices
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,02d978a1dced566678c0680fd9865ab28447460a,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,70,70,0,Implement `Indexer.toString()` to display vectors and matrices
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,02d978a1dced566678c0680fd9865ab28447460a,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,70,70,0,Implement `Indexer.toString()` to display vectors and matrices
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,02d978a1dced566678c0680fd9865ab28447460a,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,70,70,0,Implement `Indexer.toString()` to display vectors and matrices
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,02d978a1dced566678c0680fd9865ab28447460a,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,70,70,0,Implement `Indexer.toString()` to display vectors and matrices
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,02d978a1dced566678c0680fd9865ab28447460a,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,70,70,0,Implement `Indexer.toString()` to display vectors and matrices
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,02d978a1dced566678c0680fd9865ab28447460a,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,70,70,0,Implement `Indexer.toString()` to display vectors and matrices
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,02d978a1dced566678c0680fd9865ab28447460a,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,70,70,0,Implement `Indexer.toString()` to display vectors and matrices
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,02d978a1dced566678c0680fd9865ab28447460a,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,Samuel Audet,2014-12-14T14:10:37Z,samuel.audet@gmail.com,70,70,0,Implement `Indexer.toString()` to display vectors and matrices
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,b235b7629f53a1f5f1c893b0f7415c42d4204cc1,Samuel Audet,2014-12-14T13:53:55Z,samuel.audet@gmail.com,Samuel Audet,2014-12-14T13:53:55Z,samuel.audet@gmail.com,10,7,3," * Fix multiple ""platform.preload"" or ""platform.preloadpath"" properties not getting considered by the `Loader`"
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/CharArrayIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/CharBufferIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/DoubleArrayIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/DoubleBufferIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/FloatArrayIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/FloatBufferIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/IntArrayIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/IntBufferIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/LongArrayIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/LongBufferIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/ShortArrayIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/ShortBufferIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,1b26d886cf9b7ef7594d2ba809e110e822603920,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T13:03:09Z,samuel.audet@gmail.com,676,674,2,Enhance indexers with bulk `get()` and `put()` methods
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,92d3f0f112c833ef8c6d8e179770a3a0e263e595,Samuel Audet,2014-11-16T12:54:54Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T12:54:54Z,samuel.audet@gmail.com,38,26,12, * Fix some `Parser` exceptions on valid declarations with macro expansions or overloaded cast operators
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,92d3f0f112c833ef8c6d8e179770a3a0e263e595,Samuel Audet,2014-11-16T12:54:54Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T12:54:54Z,samuel.audet@gmail.com,38,26,12, * Fix some `Parser` exceptions on valid declarations with macro expansions or overloaded cast operators
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,92d3f0f112c833ef8c6d8e179770a3a0e263e595,Samuel Audet,2014-11-16T12:54:54Z,samuel.audet@gmail.com,Samuel Audet,2014-11-16T12:54:54Z,samuel.audet@gmail.com,38,26,12, * Fix some `Parser` exceptions on valid declarations with macro expansions or overloaded cast operators
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/CharArrayIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/CharBufferIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/DoubleArrayIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/DoubleBufferIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/FloatArrayIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/FloatBufferIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/IntArrayIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/IntBufferIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/LongArrayIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/LongBufferIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/ShortArrayIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/ShortBufferIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,cd632cfb0421639355a9622ce1285469dd5ffadd,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,Samuel Audet,2014-11-09T12:47:03Z,samuel.audet@gmail.com,452,309,143,Add factory methods to create from pointers indexers with proper `release()` methods
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,8afa67a5047268fee82cd9558f0b4124801d3001,Samuel Audet,2014-11-03T12:47:58Z,samuel.audet@gmail.com,Samuel Audet,2014-11-03T12:47:58Z,samuel.audet@gmail.com,46,31,15," * Fix some `Parser` exceptions on valid declarations with template arguments, and make `Info.javaName` usable in the case of `enum`"
,src/main/java/org/bytedeco/javacpp/Pointer.java,d4df1d396b7fca234fab61755ddf1c9a68dce6d2,Samuel Audet,2014-11-01T07:47:39Z,samuel.audet@gmail.com,Samuel Audet,2014-11-01T07:47:39Z,samuel.audet@gmail.com,21,20,1," * Disable DocLint, which prevents the build from succeeding on Java 8 (issue #5)"
,src/main/java/org/bytedeco/javacpp/indexer/ByteArrayIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/ByteBufferIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/ByteIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/CharArrayIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/CharBufferIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/CharIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/DoubleArrayIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/DoubleBufferIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/DoubleIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/FloatArrayIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/FloatBufferIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/FloatIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/Indexable.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/Indexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/IntArrayIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/IntBufferIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/IntIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/LongArrayIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/LongBufferIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/LongIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/ShortArrayIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/ShortBufferIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/ShortIndexer.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/indexer/package-info.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/test/java/org/bytedeco/javacpp/IndexerTest.java,4d8dc9d8b244b79ca3c9d9355e476f028f3f36f9,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,Samuel Audet,2014-10-19T12:21:44Z,samuel.audet@gmail.com,2072,2072,0, * Add new `indexer` package containing a set of `Indexer` for easy and efficient multidimensional access of arrays and buffers ([issue javacv:317](http://code.google.com/p/javacv/issues/detail?id=317))
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,6dac3bb911048634e16b36354bdca0982fc7f2ce,Samuel Audet,2014-10-05T13:17:04Z,samuel.audet@gmail.com,Samuel Audet,2014-10-05T13:17:04Z,samuel.audet@gmail.com,40,30,10," * Use `Long.decode()` inside the `Tokenizer` to test more precisely when integer values are larger than 32 bits
 * Have the `Parser` produce `@Name(""operator="") ... put(... )` methods for standard C++ containers, avoiding mistaken calls to `Pointer.put(Pointer)` ([issue javacv:34](https://github.com/bytedeco/javacv/issues/34))
 * Let the `Parser` apply `Info.skip` in the case of macros as well
 * Remove warning log messages when using the `@Raw` annotation"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,6dac3bb911048634e16b36354bdca0982fc7f2ce,Samuel Audet,2014-10-05T13:17:04Z,samuel.audet@gmail.com,Samuel Audet,2014-10-05T13:17:04Z,samuel.audet@gmail.com,40,30,10," * Use `Long.decode()` inside the `Tokenizer` to test more precisely when integer values are larger than 32 bits
 * Have the `Parser` produce `@Name(""operator="") ... put(... )` methods for standard C++ containers, avoiding mistaken calls to `Pointer.put(Pointer)` ([issue javacv:34](https://github.com/bytedeco/javacv/issues/34))
 * Let the `Parser` apply `Info.skip` in the case of macros as well
 * Remove warning log messages when using the `@Raw` annotation"
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,6dac3bb911048634e16b36354bdca0982fc7f2ce,Samuel Audet,2014-10-05T13:17:04Z,samuel.audet@gmail.com,Samuel Audet,2014-10-05T13:17:04Z,samuel.audet@gmail.com,40,30,10," * Use `Long.decode()` inside the `Tokenizer` to test more precisely when integer values are larger than 32 bits
 * Have the `Parser` produce `@Name(""operator="") ... put(... )` methods for standard C++ containers, avoiding mistaken calls to `Pointer.put(Pointer)` ([issue javacv:34](https://github.com/bytedeco/javacv/issues/34))
 * Let the `Parser` apply `Info.skip` in the case of macros as well
 * Remove warning log messages when using the `@Raw` annotation"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,cf57c44d5bda003ed6916e1ab57400be61f36c01,Samuel Audet,2014-09-20T02:37:51Z,samuel.audet@gmail.com,Samuel Audet,2014-09-20T02:37:51Z,samuel.audet@gmail.com,31,20,11," * Let `@Virtual @MemberGetter` annotated methods return member function pointers of functions defined with `@Virtual`, useful for frameworks like Cocos2d-x"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,0c7bd3a37c6d190fa113fc01d58008b886727be7,Samuel Audet,2014-09-06T09:02:42Z,samuel.audet@gmail.com,Samuel Audet,2014-09-06T09:02:42Z,samuel.audet@gmail.com,7,4,3," * Fix `NullPointerException` when leaving the `includePath`, `linkPath`, or `preloadPath` Mojo parameter empty"
,src/main/java/org/bytedeco/javacpp/annotation/Virtual.java,0a2c26b07586041cec9bdd3d185e737bc0711a83,Samuel Audet,2014-08-26T09:57:28Z,samuel.audet@gmail.com,Samuel Audet,2014-08-26T09:57:28Z,samuel.audet@gmail.com,456,347,109,"Add support for virtual functions to let C++ call back methods implemented in Java

 * Add `Info.virtualize` to have the `Parser` generate `@Virtual abstract` for pure virtual functions in the given classes
 * Add `@Virtual` annotation and update `Generator` to support callback by overriding such annotated `native` or `abstract` methods"
,src/main/java/org/bytedeco/javacpp/tools/Context.java,0a2c26b07586041cec9bdd3d185e737bc0711a83,Samuel Audet,2014-08-26T09:57:28Z,samuel.audet@gmail.com,Samuel Audet,2014-08-26T09:57:28Z,samuel.audet@gmail.com,456,347,109,"Add support for virtual functions to let C++ call back methods implemented in Java

 * Add `Info.virtualize` to have the `Parser` generate `@Virtual abstract` for pure virtual functions in the given classes
 * Add `@Virtual` annotation and update `Generator` to support callback by overriding such annotated `native` or `abstract` methods"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,0a2c26b07586041cec9bdd3d185e737bc0711a83,Samuel Audet,2014-08-26T09:57:28Z,samuel.audet@gmail.com,Samuel Audet,2014-08-26T09:57:28Z,samuel.audet@gmail.com,456,347,109,"Add support for virtual functions to let C++ call back methods implemented in Java

 * Add `Info.virtualize` to have the `Parser` generate `@Virtual abstract` for pure virtual functions in the given classes
 * Add `@Virtual` annotation and update `Generator` to support callback by overriding such annotated `native` or `abstract` methods"
,src/main/java/org/bytedeco/javacpp/tools/Info.java,0a2c26b07586041cec9bdd3d185e737bc0711a83,Samuel Audet,2014-08-26T09:57:28Z,samuel.audet@gmail.com,Samuel Audet,2014-08-26T09:57:28Z,samuel.audet@gmail.com,456,347,109,"Add support for virtual functions to let C++ call back methods implemented in Java

 * Add `Info.virtualize` to have the `Parser` generate `@Virtual abstract` for pure virtual functions in the given classes
 * Add `@Virtual` annotation and update `Generator` to support callback by overriding such annotated `native` or `abstract` methods"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,0a2c26b07586041cec9bdd3d185e737bc0711a83,Samuel Audet,2014-08-26T09:57:28Z,samuel.audet@gmail.com,Samuel Audet,2014-08-26T09:57:28Z,samuel.audet@gmail.com,456,347,109,"Add support for virtual functions to let C++ call back methods implemented in Java

 * Add `Info.virtualize` to have the `Parser` generate `@Virtual abstract` for pure virtual functions in the given classes
 * Add `@Virtual` annotation and update `Generator` to support callback by overriding such annotated `native` or `abstract` methods"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,ec16d8c53a105b309ddfb0b8cb5a8d3fba029b7b,Samuel Audet,2014-08-09T10:30:59Z,samuel.audet@gmail.com,Samuel Audet,2014-08-09T10:30:59Z,samuel.audet@gmail.com,20,13,7, * Add hack for `typedef void*` definitions and parameters with a double indirection to them
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,ec16d8c53a105b309ddfb0b8cb5a8d3fba029b7b,Samuel Audet,2014-08-09T10:30:59Z,samuel.audet@gmail.com,Samuel Audet,2014-08-09T10:30:59Z,samuel.audet@gmail.com,20,13,7, * Add hack for `typedef void*` definitions and parameters with a double indirection to them
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,329e4338fa22e61bf9e4e61e24eedfbc9ea53b90,Samuel Audet,2014-07-26T14:03:36Z,samuel.audet@gmail.com,Samuel Audet,2014-07-26T14:03:36Z,samuel.audet@gmail.com,12,11,1, * Fix `Generator.checkPlatform()` not checking super classes
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,329e4338fa22e61bf9e4e61e24eedfbc9ea53b90,Samuel Audet,2014-07-26T14:03:36Z,samuel.audet@gmail.com,Samuel Audet,2014-07-26T14:03:36Z,samuel.audet@gmail.com,12,11,1, * Fix `Generator.checkPlatform()` not checking super classes
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,9d71d86330cbdacd33b33cc8918a672662089333,Samuel Audet,2014-07-21T03:42:11Z,samuel.audet@gmail.com,Samuel Audet,2014-07-21T03:42:11Z,samuel.audet@gmail.com,11,6,5, * Fix issues with pointers to function pointers
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,9d71d86330cbdacd33b33cc8918a672662089333,Samuel Audet,2014-07-21T03:42:11Z,samuel.audet@gmail.com,Samuel Audet,2014-07-21T03:42:11Z,samuel.audet@gmail.com,11,6,5, * Fix issues with pointers to function pointers
,src/main/java/org/bytedeco/javacpp/tools/Context.java,379a9a55ebed63ead840ee2f8811cc4235e3e2bf,Samuel Audet,2014-07-19T12:44:26Z,samuel.audet@gmail.com,Samuel Audet,2014-07-19T12:44:26Z,samuel.audet@gmail.com,239,201,38," * Fix issues in the `Parser` with the `long double`, `ptrdiff_t`, `intptr_t`, `uintptr_t`, `off_t` types, optional parentheses, const data types in templates, declarator names equal to a type name, friend functions, inline constructors, `typedef void` declarations within namespaces"
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,379a9a55ebed63ead840ee2f8811cc4235e3e2bf,Samuel Audet,2014-07-19T12:44:26Z,samuel.audet@gmail.com,Samuel Audet,2014-07-19T12:44:26Z,samuel.audet@gmail.com,239,201,38," * Fix issues in the `Parser` with the `long double`, `ptrdiff_t`, `intptr_t`, `uintptr_t`, `off_t` types, optional parentheses, const data types in templates, declarator names equal to a type name, friend functions, inline constructors, `typedef void` declarations within namespaces"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,379a9a55ebed63ead840ee2f8811cc4235e3e2bf,Samuel Audet,2014-07-19T12:44:26Z,samuel.audet@gmail.com,Samuel Audet,2014-07-19T12:44:26Z,samuel.audet@gmail.com,239,201,38," * Fix issues in the `Parser` with the `long double`, `ptrdiff_t`, `intptr_t`, `uintptr_t`, `off_t` types, optional parentheses, const data types in templates, declarator names equal to a type name, friend functions, inline constructors, `typedef void` declarations within namespaces"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,379a9a55ebed63ead840ee2f8811cc4235e3e2bf,Samuel Audet,2014-07-19T12:44:26Z,samuel.audet@gmail.com,Samuel Audet,2014-07-19T12:44:26Z,samuel.audet@gmail.com,239,201,38," * Fix issues in the `Parser` with the `long double`, `ptrdiff_t`, `intptr_t`, `uintptr_t`, `off_t` types, optional parentheses, const data types in templates, declarator names equal to a type name, friend functions, inline constructors, `typedef void` declarations within namespaces"
,src/main/java/org/bytedeco/javacpp/tools/Type.java,379a9a55ebed63ead840ee2f8811cc4235e3e2bf,Samuel Audet,2014-07-19T12:44:26Z,samuel.audet@gmail.com,Samuel Audet,2014-07-19T12:44:26Z,samuel.audet@gmail.com,239,201,38," * Fix issues in the `Parser` with the `long double`, `ptrdiff_t`, `intptr_t`, `uintptr_t`, `off_t` types, optional parentheses, const data types in templates, declarator names equal to a type name, friend functions, inline constructors, `typedef void` declarations within namespaces"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,0f4e6c97b76daa7c04d05ad4caf75f872bebe338,Samuel Audet,2014-07-06T01:49:49Z,samuel.audet@gmail.com,Samuel Audet,2014-07-06T01:49:49Z,samuel.audet@gmail.com,236,138,98," * Add `includePath`, `linkPath`, and `preloadPath` parameters to `BuildMojo` to let Maven users append paths to the properties easily
 * In consequence, remove too arbitrary ""local"" paths from the default platform properties"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,0f4e6c97b76daa7c04d05ad4caf75f872bebe338,Samuel Audet,2014-07-06T01:49:49Z,samuel.audet@gmail.com,Samuel Audet,2014-07-06T01:49:49Z,samuel.audet@gmail.com,236,138,98," * Add `includePath`, `linkPath`, and `preloadPath` parameters to `BuildMojo` to let Maven users append paths to the properties easily
 * In consequence, remove too arbitrary ""local"" paths from the default platform properties"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,dd145115fdd1ccf68c16c3acf99c700ea3a46ec3,Samuel Audet,2014-06-28T03:11:02Z,samuel.audet@gmail.com,Samuel Audet,2014-06-28T03:11:02Z,samuel.audet@gmail.com,16,11,5, * Fix issues in the `Parser` with access specifiers and casting of const values by reference
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,14c8b1c690bbbd1e868a0bf03c1b4ed2df164f62,Samuel Audet,2014-06-17T14:04:35Z,samuel.audet@gmail.com,Samuel Audet,2014-06-17T14:04:35Z,samuel.audet@gmail.com,8,6,2, * Fix a few other minor issues in the `Parser`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,14c8b1c690bbbd1e868a0bf03c1b4ed2df164f62,Samuel Audet,2014-06-17T14:04:35Z,samuel.audet@gmail.com,Samuel Audet,2014-06-17T14:04:35Z,samuel.audet@gmail.com,8,6,2, * Fix a few other minor issues in the `Parser`
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,14c8b1c690bbbd1e868a0bf03c1b4ed2df164f62,Samuel Audet,2014-06-17T14:04:35Z,samuel.audet@gmail.com,Samuel Audet,2014-06-17T14:04:35Z,samuel.audet@gmail.com,8,6,2, * Fix a few other minor issues in the `Parser`
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,f05099fb3db966925199f2b398a273b4c279239f,Samuel Audet,2014-06-08T00:54:31Z,samuel.audet@gmail.com,Samuel Audet,2014-06-08T00:54:31Z,samuel.audet@gmail.com,75,55,20," * Allow users to instruct the `Parser` to skip the expansion of specific macro invocations
 * Let `Parser` concatenate tokens when expanding macros containing the `##` operator"
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,f05099fb3db966925199f2b398a273b4c279239f,Samuel Audet,2014-06-08T00:54:31Z,samuel.audet@gmail.com,Samuel Audet,2014-06-08T00:54:31Z,samuel.audet@gmail.com,75,55,20," * Allow users to instruct the `Parser` to skip the expansion of specific macro invocations
 * Let `Parser` concatenate tokens when expanding macros containing the `##` operator"
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,f05099fb3db966925199f2b398a273b4c279239f,Samuel Audet,2014-06-08T00:54:31Z,samuel.audet@gmail.com,Samuel Audet,2014-06-08T00:54:31Z,samuel.audet@gmail.com,75,55,20," * Allow users to instruct the `Parser` to skip the expansion of specific macro invocations
 * Let `Parser` concatenate tokens when expanding macros containing the `##` operator"
,src/main/java/org/bytedeco/javacpp/tools/Info.java,7f64d9e41923314ab433055d8647aa332d96ee83,Samuel Audet,2014-05-18T14:37:42Z,samuel.audet@gmail.com,Samuel Audet,2014-05-18T14:37:42Z,samuel.audet@gmail.com,180,133,47," * Add some documentation for `Info`, `InfoMap`, `InfoMapper`, and `Parser`
 * Fix the `Parser` not filtering and expanding properly some preprocessor directives, as well as producing wrong code for `typedef struct *`"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,7f64d9e41923314ab433055d8647aa332d96ee83,Samuel Audet,2014-05-18T14:37:42Z,samuel.audet@gmail.com,Samuel Audet,2014-05-18T14:37:42Z,samuel.audet@gmail.com,180,133,47," * Add some documentation for `Info`, `InfoMap`, `InfoMapper`, and `Parser`
 * Fix the `Parser` not filtering and expanding properly some preprocessor directives, as well as producing wrong code for `typedef struct *`"
,src/main/java/org/bytedeco/javacpp/tools/InfoMapper.java,7f64d9e41923314ab433055d8647aa332d96ee83,Samuel Audet,2014-05-18T14:37:42Z,samuel.audet@gmail.com,Samuel Audet,2014-05-18T14:37:42Z,samuel.audet@gmail.com,180,133,47," * Add some documentation for `Info`, `InfoMap`, `InfoMapper`, and `Parser`
 * Fix the `Parser` not filtering and expanding properly some preprocessor directives, as well as producing wrong code for `typedef struct *`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,7f64d9e41923314ab433055d8647aa332d96ee83,Samuel Audet,2014-05-18T14:37:42Z,samuel.audet@gmail.com,Samuel Audet,2014-05-18T14:37:42Z,samuel.audet@gmail.com,180,133,47," * Add some documentation for `Info`, `InfoMap`, `InfoMapper`, and `Parser`
 * Fix the `Parser` not filtering and expanding properly some preprocessor directives, as well as producing wrong code for `typedef struct *`"
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,7f64d9e41923314ab433055d8647aa332d96ee83,Samuel Audet,2014-05-18T14:37:42Z,samuel.audet@gmail.com,Samuel Audet,2014-05-18T14:37:42Z,samuel.audet@gmail.com,180,133,47," * Add some documentation for `Info`, `InfoMap`, `InfoMapper`, and `Parser`
 * Fix the `Parser` not filtering and expanding properly some preprocessor directives, as well as producing wrong code for `typedef struct *`"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,11bdc998f74362c29d3a9c71cf2cb774e4498cea,Samuel Audet,2014-05-16T12:10:54Z,samuel.audet@gmail.com,Samuel Audet,2014-05-16T12:10:54Z,samuel.audet@gmail.com,7,6,1, * Skip Java path search when building for Android to prevent including some random `jni.h` file (issue #3)
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,662fdc3804d8f2d0325d277a9bf8a59ace85db70,Samuel Audet,2014-05-09T23:39:40Z,samuel.audet@gmail.com,Samuel Audet,2014-05-09T23:39:40Z,samuel.audet@gmail.com,9,7,2, * Fix the `Parser` losing some keywords like `static` on methods annotated with an `@Adapter` (issue #2)
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,282926e489f67375d51f23d221bc640a95e13420,Samuel Audet,2014-05-03T13:33:53Z,samuel.audet@gmail.com,Samuel Audet,2014-05-03T13:33:53Z,samuel.audet@gmail.com,32,23,9, * Fix `Loader.load()` not properly force loading all inherited target classes (issue #1)
,src/main/java/org/bytedeco/javacpp/Loader.java,282926e489f67375d51f23d221bc640a95e13420,Samuel Audet,2014-05-03T13:33:53Z,samuel.audet@gmail.com,Samuel Audet,2014-05-03T13:33:53Z,samuel.audet@gmail.com,32,23,9, * Fix `Loader.load()` not properly force loading all inherited target classes (issue #1)
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,5e0ed47f781793795d779f9362bd660ec6558821,Samuel Audet,2014-04-28T11:44:27Z,samuel.audet@gmail.com,Samuel Audet,2014-04-28T11:44:27Z,samuel.audet@gmail.com,60,40,20,Release version 0.8
,src/main/java/org/bytedeco/javacpp/tools/IndexedSet.java,5e0ed47f781793795d779f9362bd660ec6558821,Samuel Audet,2014-04-28T11:44:27Z,samuel.audet@gmail.com,Samuel Audet,2014-04-28T11:44:27Z,samuel.audet@gmail.com,60,40,20,Release version 0.8
,src/main/java/com/googlecode/javacpp/package-info.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/BoolPointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/BytePointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/CLongPointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/CharPointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/ClassProperties.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/DoublePointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/FloatPointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/FunctionPointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/IntPointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/Loader.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/LongPointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/Pointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/PointerPointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/ShortPointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/SizeTPointer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Adapter.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Allocator.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/ArrayAllocator.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/ByPtr.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/ByPtrPtr.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/ByPtrRef.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/ByRef.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/ByVal.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Cast.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Const.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Convention.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Function.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Index.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/MemberGetter.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/MemberSetter.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Name.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Namespace.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/NoDeallocator.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/NoException.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/NoOffset.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Opaque.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Platform.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Properties.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/Raw.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/StdString.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/StdVector.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/ValueGetter.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/ValueSetter.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/annotation/package-info.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/package-info.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/AdapterInformation.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Attribute.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/BuildMojo.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Builder.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/ClassScanner.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Context.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Declaration.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/DeclarationList.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Declarator.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Generator.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/IndexedSet.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Info.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/InfoMap.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/InfoMapper.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Logger.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/MethodInformation.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Parameters.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Parser.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/ParserException.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Piper.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/TemplateMap.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Token.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/TokenIndexer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Tokenizer.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/Type.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/UserClassLoader.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/org/bytedeco/javacpp/tools/package-info.java,37b70e00dc463533455bb8ebcf467d3a5feb4991,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,Samuel Audet,2014-04-21T13:13:06Z,samuel.audet@gmail.com,4525,2577,1948," * Move from Google Code to GitHub as main source code repository
 * Place build-time classes in the `org.bytedeco.javacpp.tools` package and bring out static nested classes, in an effort to avoid conflicts and ease development
 * Rename the `com.googlecode.javacpp` package to `org.bytedeco.javacpp`"
,src/main/java/com/googlecode/javacpp/Parser.java,e5173585a30f1e24afcb8a1eeb67c5f70c3f9f60,Samuel Audet,2014-04-06T13:28:11Z,samuel.audet@gmail.com,Samuel Audet,2014-04-06T13:28:11Z,samuel.audet@gmail.com,1125,29,1096," * Added `public long Pointer.address()` getter method, useful when one needs to subtract two pointers
 * Removed old NetBeans project files that cause a conflict when trying to open as a Maven project (issue javacv:210)"
,src/main/java/com/googlecode/javacpp/Pointer.java,e5173585a30f1e24afcb8a1eeb67c5f70c3f9f60,Samuel Audet,2014-04-06T13:28:11Z,samuel.audet@gmail.com,Samuel Audet,2014-04-06T13:28:11Z,samuel.audet@gmail.com,1125,29,1096," * Added `public long Pointer.address()` getter method, useful when one needs to subtract two pointers
 * Removed old NetBeans project files that cause a conflict when trying to open as a Maven project (issue javacv:210)"
,src/main/java/com/googlecode/javacpp/Generator.java,80ff38cbda8cd68d6d177725c4a1e42b4a7d55cf,Samuel Audet,2014-03-30T13:49:13Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T13:49:13Z,samuel.audet@gmail.com,46,24,22," * Fixed compilation error on `FunctionPointer` classes containing no native callback methods
 * Continued to clean up the `Parser` and improve the support of enumerations"
,src/main/java/com/googlecode/javacpp/Parser.java,80ff38cbda8cd68d6d177725c4a1e42b4a7d55cf,Samuel Audet,2014-03-30T13:49:13Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T13:49:13Z,samuel.audet@gmail.com,46,24,22," * Fixed compilation error on `FunctionPointer` classes containing no native callback methods
 * Continued to clean up the `Parser` and improve the support of enumerations"
,src/main/java/com/googlecode/javacpp/BoolPointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/Builder.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/BytePointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/CLongPointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/CharPointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/DoublePointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/FloatPointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/IntPointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/Loader.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/LongPointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/Parser.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/PointerPointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/ShortPointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/SizeTPointer.java,93bbeb9e7ac72f528ccab7c45c779523d79fc618,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,Samuel Audet,2014-03-30T05:05:11Z,samuel.audet@gmail.com,129,91,38," * Added a `platform.library.path` property, such as ""lib/armeabi/"" in the case of the ""android-arm"" platform, to be used instead of ""package/platform"" (issue javacv:427)
 * Generalized references to the path of the Android NDK
 * Improved a few small things in the set of `Pointer` classes`"
,src/main/java/com/googlecode/javacpp/Builder.java,121050d063095152fc323da8685f8ae631ae9d2e,Samuel Audet,2014-03-23T13:00:19Z,samuel.audet@gmail.com,Samuel Audet,2014-03-23T13:00:19Z,samuel.audet@gmail.com,433,237,196," * Upgraded references of the Android NDK to version r9d
 * Continued to clean up the `Parser` and improve the support of, for the most part, functions pointers and anonymous `struct` or `union`"
,src/main/java/com/googlecode/javacpp/Loader.java,121050d063095152fc323da8685f8ae631ae9d2e,Samuel Audet,2014-03-23T13:00:19Z,samuel.audet@gmail.com,Samuel Audet,2014-03-23T13:00:19Z,samuel.audet@gmail.com,433,237,196," * Upgraded references of the Android NDK to version r9d
 * Continued to clean up the `Parser` and improve the support of, for the most part, functions pointers and anonymous `struct` or `union`"
,src/main/java/com/googlecode/javacpp/Parser.java,121050d063095152fc323da8685f8ae631ae9d2e,Samuel Audet,2014-03-23T13:00:19Z,samuel.audet@gmail.com,Samuel Audet,2014-03-23T13:00:19Z,samuel.audet@gmail.com,433,237,196," * Upgraded references of the Android NDK to version r9d
 * Continued to clean up the `Parser` and improve the support of, for the most part, functions pointers and anonymous `struct` or `union`"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/Builder.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/Generator.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/Loader.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/Logger.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/Parser.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/Pointer.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/annotation/Const.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/annotation/Index.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/annotation/Name.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/annotation/Properties.java,afe454f9d3926941ef9663b14ea82e1089e9518d,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,Samuel Audet,2014-03-16T06:07:08Z,samuel.audet@gmail.com,568,349,219," * Introduced a simple `Logger` class and unified the logging output calls around it
 * Continued to clean up the `Parser` and improve the support of, for the most part, default parameter arguments, multiple inheritance, custom names of wrapped declarators, and helper classes written in Java"
,src/main/java/com/googlecode/javacpp/Builder.java,412642dd802ee8787e0b09e68c694e4537cc9066,Samuel Audet,2014-03-08T14:50:44Z,samuel.audet@gmail.com,Samuel Audet,2014-03-08T14:50:44Z,samuel.audet@gmail.com,156,100,56,Cleaned up the code a bit
,src/main/java/com/googlecode/javacpp/Generator.java,412642dd802ee8787e0b09e68c694e4537cc9066,Samuel Audet,2014-03-08T14:50:44Z,samuel.audet@gmail.com,Samuel Audet,2014-03-08T14:50:44Z,samuel.audet@gmail.com,156,100,56,Cleaned up the code a bit
,src/main/java/com/googlecode/javacpp/Loader.java,412642dd802ee8787e0b09e68c694e4537cc9066,Samuel Audet,2014-03-08T14:50:44Z,samuel.audet@gmail.com,Samuel Audet,2014-03-08T14:50:44Z,samuel.audet@gmail.com,156,100,56,Cleaned up the code a bit
,src/main/java/com/googlecode/javacpp/Parser.java,412642dd802ee8787e0b09e68c694e4537cc9066,Samuel Audet,2014-03-08T14:50:44Z,samuel.audet@gmail.com,Samuel Audet,2014-03-08T14:50:44Z,samuel.audet@gmail.com,156,100,56,Cleaned up the code a bit
,src/main/java/com/googlecode/javacpp/PointerPointer.java,412642dd802ee8787e0b09e68c694e4537cc9066,Samuel Audet,2014-03-08T14:50:44Z,samuel.audet@gmail.com,Samuel Audet,2014-03-08T14:50:44Z,samuel.audet@gmail.com,156,100,56,Cleaned up the code a bit
,src/main/java/com/googlecode/javacpp/BuildMojo.java,9ad301f81625c0e5eda06d9b43473e5fee4cbed6,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,1041,521,520, * Unified the property names with the `@Properties` and `@Platform` annotations into a consistent naming scheme
,src/main/java/com/googlecode/javacpp/Builder.java,9ad301f81625c0e5eda06d9b43473e5fee4cbed6,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,1041,521,520, * Unified the property names with the `@Properties` and `@Platform` annotations into a consistent naming scheme
,src/main/java/com/googlecode/javacpp/Generator.java,9ad301f81625c0e5eda06d9b43473e5fee4cbed6,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,1041,521,520, * Unified the property names with the `@Properties` and `@Platform` annotations into a consistent naming scheme
,src/main/java/com/googlecode/javacpp/Loader.java,9ad301f81625c0e5eda06d9b43473e5fee4cbed6,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,1041,521,520, * Unified the property names with the `@Properties` and `@Platform` annotations into a consistent naming scheme
,src/main/java/com/googlecode/javacpp/Parser.java,9ad301f81625c0e5eda06d9b43473e5fee4cbed6,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,1041,521,520, * Unified the property names with the `@Properties` and `@Platform` annotations into a consistent naming scheme
,src/main/java/com/googlecode/javacpp/annotation/Platform.java,9ad301f81625c0e5eda06d9b43473e5fee4cbed6,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,Samuel Audet,2014-03-05T13:54:18Z,samuel.audet@gmail.com,1041,521,520, * Unified the property names with the `@Properties` and `@Platform` annotations into a consistent naming scheme
,src/main/java/com/googlecode/javacpp/Builder.java,446fe46e573300b4bf79069f26e38c24a069c3f5,Samuel Audet,2014-03-02T03:14:14Z,samuel.audet@gmail.com,Samuel Audet,2014-03-02T03:14:14Z,samuel.audet@gmail.com,942,604,338," * Continued to clean up the `Parser` and improve the support of comments, templates, overloaded operators, namespaces, and standard containers, for the most part"
,src/main/java/com/googlecode/javacpp/Loader.java,446fe46e573300b4bf79069f26e38c24a069c3f5,Samuel Audet,2014-03-02T03:14:14Z,samuel.audet@gmail.com,Samuel Audet,2014-03-02T03:14:14Z,samuel.audet@gmail.com,942,604,338," * Continued to clean up the `Parser` and improve the support of comments, templates, overloaded operators, namespaces, and standard containers, for the most part"
,src/main/java/com/googlecode/javacpp/Parser.java,446fe46e573300b4bf79069f26e38c24a069c3f5,Samuel Audet,2014-03-02T03:14:14Z,samuel.audet@gmail.com,Samuel Audet,2014-03-02T03:14:14Z,samuel.audet@gmail.com,942,604,338," * Continued to clean up the `Parser` and improve the support of comments, templates, overloaded operators, namespaces, and standard containers, for the most part"
,src/main/java/com/googlecode/javacpp/PointerPointer.java,446fe46e573300b4bf79069f26e38c24a069c3f5,Samuel Audet,2014-03-02T03:14:14Z,samuel.audet@gmail.com,Samuel Audet,2014-03-02T03:14:14Z,samuel.audet@gmail.com,942,604,338," * Continued to clean up the `Parser` and improve the support of comments, templates, overloaded operators, namespaces, and standard containers, for the most part"
,src/main/java/com/googlecode/javacpp/Generator.java,2acbe76f9232a801fc052ff0b155f8a18e664dd7,Samuel Audet,2014-03-01T09:07:42Z,samuel.audet@gmail.com,Samuel Audet,2014-03-01T09:07:42Z,samuel.audet@gmail.com,242,166,76," * Annotations such as `@Adapter` or `@ByVal` are no longer ignored on parameters of getters or setters annotated with `@Index`
 * Fixed some other corner cases in `Generator`
 * Added for convenience to `PointerPointer` a generic parameter `<P extends Pointer>` and the associated `get(Class<P> ...)` getters, as well as `String` getters and setters
 * Passing a `Class` object as first argument to a native method that returns a `Pointer` now determines the runtime type of that returned object"
,src/main/java/com/googlecode/javacpp/PointerPointer.java,2acbe76f9232a801fc052ff0b155f8a18e664dd7,Samuel Audet,2014-03-01T09:07:42Z,samuel.audet@gmail.com,Samuel Audet,2014-03-01T09:07:42Z,samuel.audet@gmail.com,242,166,76," * Annotations such as `@Adapter` or `@ByVal` are no longer ignored on parameters of getters or setters annotated with `@Index`
 * Fixed some other corner cases in `Generator`
 * Added for convenience to `PointerPointer` a generic parameter `<P extends Pointer>` and the associated `get(Class<P> ...)` getters, as well as `String` getters and setters
 * Passing a `Class` object as first argument to a native method that returns a `Pointer` now determines the runtime type of that returned object"
,src/main/java/com/googlecode/javacpp/Generator.java,c49c3535fb4454d9862934ca8118356bafe38a74,Samuel Audet,2014-02-16T02:24:54Z,samuel.audet@gmail.com,Samuel Audet,2014-02-16T02:24:54Z,samuel.audet@gmail.com,1566,919,647," * Continued to clean up the `Parser` and improve the support of comments, templates, overloaded operators, and namespaces, for the most part
 * Unified the function pointer type of native deallocators to `void (*)(void*)`
 * Removed dependency on (efficient) `AllocObject()` and `CallNonvirtualVoidMethodA()` JNI functions, which are not supported by Avian"
,src/main/java/com/googlecode/javacpp/Parser.java,c49c3535fb4454d9862934ca8118356bafe38a74,Samuel Audet,2014-02-16T02:24:54Z,samuel.audet@gmail.com,Samuel Audet,2014-02-16T02:24:54Z,samuel.audet@gmail.com,1566,919,647," * Continued to clean up the `Parser` and improve the support of comments, templates, overloaded operators, and namespaces, for the most part
 * Unified the function pointer type of native deallocators to `void (*)(void*)`
 * Removed dependency on (efficient) `AllocObject()` and `CallNonvirtualVoidMethodA()` JNI functions, which are not supported by Avian"
,src/main/java/com/googlecode/javacpp/Loader.java,f32c55cf0b7f62d7ab684d99e6d947d5bba99f42,Samuel Audet,2014-02-15T14:12:01Z,samuel.audet@gmail.com,Samuel Audet,2014-02-15T14:12:01Z,samuel.audet@gmail.com,68,42,26," * Fixed a few potential issues with the hacks in `Loader`
 * Generalized somewhat more the compiler options used inside `linux-arm.properties` (issue javacv:418)"
,src/main/java/com/googlecode/javacpp/annotation/MemberGetter.java,f32c55cf0b7f62d7ab684d99e6d947d5bba99f42,Samuel Audet,2014-02-15T14:12:01Z,samuel.audet@gmail.com,Samuel Audet,2014-02-15T14:12:01Z,samuel.audet@gmail.com,68,42,26," * Fixed a few potential issues with the hacks in `Loader`
 * Generalized somewhat more the compiler options used inside `linux-arm.properties` (issue javacv:418)"
,src/main/java/com/googlecode/javacpp/annotation/MemberSetter.java,f32c55cf0b7f62d7ab684d99e6d947d5bba99f42,Samuel Audet,2014-02-15T14:12:01Z,samuel.audet@gmail.com,Samuel Audet,2014-02-15T14:12:01Z,samuel.audet@gmail.com,68,42,26," * Fixed a few potential issues with the hacks in `Loader`
 * Generalized somewhat more the compiler options used inside `linux-arm.properties` (issue javacv:418)"
,src/main/java/com/googlecode/javacpp/annotation/ValueGetter.java,f32c55cf0b7f62d7ab684d99e6d947d5bba99f42,Samuel Audet,2014-02-15T14:12:01Z,samuel.audet@gmail.com,Samuel Audet,2014-02-15T14:12:01Z,samuel.audet@gmail.com,68,42,26," * Fixed a few potential issues with the hacks in `Loader`
 * Generalized somewhat more the compiler options used inside `linux-arm.properties` (issue javacv:418)"
,src/main/java/com/googlecode/javacpp/annotation/ValueSetter.java,f32c55cf0b7f62d7ab684d99e6d947d5bba99f42,Samuel Audet,2014-02-15T14:12:01Z,samuel.audet@gmail.com,Samuel Audet,2014-02-15T14:12:01Z,samuel.audet@gmail.com,68,42,26," * Fixed a few potential issues with the hacks in `Loader`
 * Generalized somewhat more the compiler options used inside `linux-arm.properties` (issue javacv:418)"
,src/main/java/com/googlecode/javacpp/Generator.java,0f003f0639fe9eafd9beca40df164da19d49718d,Samuel Audet,2014-01-19T03:45:33Z,samuel.audet@gmail.com,Samuel Audet,2014-01-19T03:45:33Z,samuel.audet@gmail.com,670,358,312," * Cleaned up and optimized `Generator` a bit, and fixed a crash that could occur when `FindClass()` returns NULL"
,src/main/java/com/googlecode/javacpp/Builder.java,1104907b29ff7b42b562c5495672a51f9a46af7c,Samuel Audet,2014-01-06T12:59:01Z,samuel.audet@gmail.com,Samuel Audet,2014-01-06T12:59:01Z,samuel.audet@gmail.com,1811,1081,730,"Released version 0.7
 * Tweaked a few things to support RoboVM and target iOS, but `JNI_OnLoad()` does not appear to get called...
 * Upgraded references of the Android NDK to version r9c
 * Improved the C++ support of the `Parser` for templates and overloaded operators"
,src/main/java/com/googlecode/javacpp/Generator.java,1104907b29ff7b42b562c5495672a51f9a46af7c,Samuel Audet,2014-01-06T12:59:01Z,samuel.audet@gmail.com,Samuel Audet,2014-01-06T12:59:01Z,samuel.audet@gmail.com,1811,1081,730,"Released version 0.7
 * Tweaked a few things to support RoboVM and target iOS, but `JNI_OnLoad()` does not appear to get called...
 * Upgraded references of the Android NDK to version r9c
 * Improved the C++ support of the `Parser` for templates and overloaded operators"
,src/main/java/com/googlecode/javacpp/Loader.java,1104907b29ff7b42b562c5495672a51f9a46af7c,Samuel Audet,2014-01-06T12:59:01Z,samuel.audet@gmail.com,Samuel Audet,2014-01-06T12:59:01Z,samuel.audet@gmail.com,1811,1081,730,"Released version 0.7
 * Tweaked a few things to support RoboVM and target iOS, but `JNI_OnLoad()` does not appear to get called...
 * Upgraded references of the Android NDK to version r9c
 * Improved the C++ support of the `Parser` for templates and overloaded operators"
,src/main/java/com/googlecode/javacpp/Parser.java,1104907b29ff7b42b562c5495672a51f9a46af7c,Samuel Audet,2014-01-06T12:59:01Z,samuel.audet@gmail.com,Samuel Audet,2014-01-06T12:59:01Z,samuel.audet@gmail.com,1811,1081,730,"Released version 0.7
 * Tweaked a few things to support RoboVM and target iOS, but `JNI_OnLoad()` does not appear to get called...
 * Upgraded references of the Android NDK to version r9c
 * Improved the C++ support of the `Parser` for templates and overloaded operators"
,src/main/java/com/googlecode/javacpp/Loader.java,e192b1eacc824bd2fef5ca8bf8e5f32578b61d6b,Samuel Audet,2013-12-17T12:43:15Z,samuel.audet@gmail.com,Samuel Audet,2013-12-17T12:43:15Z,samuel.audet@gmail.com,15,9,6,"Fixed a Windows bug that caused immediate crash (issue #41)

In Windows, File.separator returns ""\"" which is also an escape character in Regex. This caused an exception that crashed the program immediately.

Remove Regex and use '/' the character for clarity."
,src/main/java/com/googlecode/javacpp/Generator.java,a9bcf01c04868c1f1036cf0f2d6a90e9d1265300,Samuel Audet,2013-12-12T13:57:55Z,samuel.audet@gmail.com,Samuel Audet,2013-12-12T13:57:55Z,samuel.audet@gmail.com,788,467,321," * Made `Loader.load()` work, within reason, even when all annotations and resources have been removed, for example, by ProGuard
 * Fixed compile error when using a `FunctionPointer` as parameter from outside its top-level enclosing class
 * The `Parser` now filters tokens appropriately with preprocessor directives
 * Improved the C++ support of the `Parser` for macros, templates, etc"
,src/main/java/com/googlecode/javacpp/Loader.java,a9bcf01c04868c1f1036cf0f2d6a90e9d1265300,Samuel Audet,2013-12-12T13:57:55Z,samuel.audet@gmail.com,Samuel Audet,2013-12-12T13:57:55Z,samuel.audet@gmail.com,788,467,321," * Made `Loader.load()` work, within reason, even when all annotations and resources have been removed, for example, by ProGuard
 * Fixed compile error when using a `FunctionPointer` as parameter from outside its top-level enclosing class
 * The `Parser` now filters tokens appropriately with preprocessor directives
 * Improved the C++ support of the `Parser` for macros, templates, etc"
,src/main/java/com/googlecode/javacpp/Parser.java,a9bcf01c04868c1f1036cf0f2d6a90e9d1265300,Samuel Audet,2013-12-12T13:57:55Z,samuel.audet@gmail.com,Samuel Audet,2013-12-12T13:57:55Z,samuel.audet@gmail.com,788,467,321," * Made `Loader.load()` work, within reason, even when all annotations and resources have been removed, for example, by ProGuard
 * Fixed compile error when using a `FunctionPointer` as parameter from outside its top-level enclosing class
 * The `Parser` now filters tokens appropriately with preprocessor directives
 * Improved the C++ support of the `Parser` for macros, templates, etc"
,src/main/java/com/googlecode/javacpp/annotation/Platform.java,a9bcf01c04868c1f1036cf0f2d6a90e9d1265300,Samuel Audet,2013-12-12T13:57:55Z,samuel.audet@gmail.com,Samuel Audet,2013-12-12T13:57:55Z,samuel.audet@gmail.com,788,467,321," * Made `Loader.load()` work, within reason, even when all annotations and resources have been removed, for example, by ProGuard
 * Fixed compile error when using a `FunctionPointer` as parameter from outside its top-level enclosing class
 * The `Parser` now filters tokens appropriately with preprocessor directives
 * Improved the C++ support of the `Parser` for macros, templates, etc"
,src/main/java/com/googlecode/javacpp/Pointer.java,61c0c0b6a4f65f3a0b3633a2db66bccc59accbf2,Samuel Audet,2013-11-28T11:37:50Z,samuel.audet@gmail.com,Samuel Audet,2013-11-28T11:37:50Z,samuel.audet@gmail.com,37,31,6," * Added new `Pointer.deallocate(false)` call to disable garbage collection on a per object basis, allowing users to deal with memory leaks in other ways
 * Changed the default compiler option `-mfpu=vfpv` for ARM to `-mfpu=vfpv3-d16`, because the former is not supported by Tegra 2"
,src/main/java/com/googlecode/javacpp/Loader.java,2718ef7fd3a1ad18c095556e3f87b77b00329869,Samuel Audet,2013-11-17T06:07:22Z,samuel.audet@gmail.com,Samuel Audet,2013-11-17T06:07:22Z,samuel.audet@gmail.com,5,4,1," * Removed call to `Arrays.copyOf()` in `Loader.findLibrary()`, which would prevent it from working on Android 2.2 (issue #39)"
,src/main/java/com/googlecode/javacpp/Generator.java,fad2ca5c8b15431ef3188eb890acb4c0a33dad7a,Samuel Audet,2013-11-03T03:15:50Z,samuel.audet@gmail.com,Samuel Audet,2013-11-03T03:15:50Z,samuel.audet@gmail.com,19,14,5, * Fixed invalid code generated for `FunctionPointer` parameters annotated with `@Const @ByRef`
,src/main/java/com/googlecode/javacpp/Loader.java,88d011c350b5bff956c27b83caf45b686e8b45df,Samuel Audet,2013-10-20T13:46:00Z,samuel.audet@gmail.com,Samuel Audet,2013-10-20T13:46:00Z,samuel.audet@gmail.com,727,468,259," * Fixed `NullPointerException` in `Loader.load()` when no `@Platform` annotation is provided (issue #38)
 * Parsing for anonymous `struct` or `union` and for `typedef void` (mapped to `@Opaque Pointer`) now outputs something
 * The `Parser` now expands preprocessor macros and outputs all unprocessed directives as comments"
,src/main/java/com/googlecode/javacpp/Parser.java,88d011c350b5bff956c27b83caf45b686e8b45df,Samuel Audet,2013-10-20T13:46:00Z,samuel.audet@gmail.com,Samuel Audet,2013-10-20T13:46:00Z,samuel.audet@gmail.com,727,468,259," * Fixed `NullPointerException` in `Loader.load()` when no `@Platform` annotation is provided (issue #38)
 * Parsing for anonymous `struct` or `union` and for `typedef void` (mapped to `@Opaque Pointer`) now outputs something
 * The `Parser` now expands preprocessor macros and outputs all unprocessed directives as comments"
,src/main/java/com/googlecode/javacpp/Builder.java,c897cd1d8ae681eb5aff7cff354b64163bdc3bcc,Samuel Audet,2013-10-06T14:20:09Z,samuel.audet@gmail.com,Samuel Audet,2013-10-06T14:20:09Z,samuel.audet@gmail.com,630,469,161," * Added support for parsing namespaces, derived classes, access specifiers, custom constructors, vector types, and updated a bunch of other stuff in `Parser`"
,src/main/java/com/googlecode/javacpp/Loader.java,c897cd1d8ae681eb5aff7cff354b64163bdc3bcc,Samuel Audet,2013-10-06T14:20:09Z,samuel.audet@gmail.com,Samuel Audet,2013-10-06T14:20:09Z,samuel.audet@gmail.com,630,469,161," * Added support for parsing namespaces, derived classes, access specifiers, custom constructors, vector types, and updated a bunch of other stuff in `Parser`"
,src/main/java/com/googlecode/javacpp/Parser.java,c897cd1d8ae681eb5aff7cff354b64163bdc3bcc,Samuel Audet,2013-10-06T14:20:09Z,samuel.audet@gmail.com,Samuel Audet,2013-10-06T14:20:09Z,samuel.audet@gmail.com,630,469,161," * Added support for parsing namespaces, derived classes, access specifiers, custom constructors, vector types, and updated a bunch of other stuff in `Parser`"
,src/main/java/com/googlecode/javacpp/Loader.java,e0f63f9012e48190d30839f5abcf0000c44261b0,Samuel Audet,2013-09-28T02:52:19Z,samuel.audet@gmail.com,Samuel Audet,2013-09-28T02:52:19Z,samuel.audet@gmail.com,156,56,100," * Fixed `typedef` of function pointers and a few code formatting issues with `Parser`
 * Supplied checks to prevent `Loader.load()` from throwing `java.lang.IllegalStateException: Can't overwrite cause`"
,src/main/java/com/googlecode/javacpp/Parser.java,e0f63f9012e48190d30839f5abcf0000c44261b0,Samuel Audet,2013-09-28T02:52:19Z,samuel.audet@gmail.com,Samuel Audet,2013-09-28T02:52:19Z,samuel.audet@gmail.com,156,56,100," * Fixed `typedef` of function pointers and a few code formatting issues with `Parser`
 * Supplied checks to prevent `Loader.load()` from throwing `java.lang.IllegalStateException: Can't overwrite cause`"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,55b2a62a058495b73f45b5a54bd4fd42d6ceb0f5,Samuel Audet,2013-09-15T12:24:02Z,samuel.audet@gmail.com,Samuel Audet,2013-09-15T12:24:02Z,samuel.audet@gmail.com,1661,1651,10,"Released version 0.6
 * Added new very preliminary `Parser` to produce Java interface files almost automatically from C/C++ header files; please refer to the new JavaCPP Presets subproject for details"
,src/main/java/com/googlecode/javacpp/Builder.java,55b2a62a058495b73f45b5a54bd4fd42d6ceb0f5,Samuel Audet,2013-09-15T12:24:02Z,samuel.audet@gmail.com,Samuel Audet,2013-09-15T12:24:02Z,samuel.audet@gmail.com,1661,1651,10,"Released version 0.6
 * Added new very preliminary `Parser` to produce Java interface files almost automatically from C/C++ header files; please refer to the new JavaCPP Presets subproject for details"
,src/main/java/com/googlecode/javacpp/Loader.java,55b2a62a058495b73f45b5a54bd4fd42d6ceb0f5,Samuel Audet,2013-09-15T12:24:02Z,samuel.audet@gmail.com,Samuel Audet,2013-09-15T12:24:02Z,samuel.audet@gmail.com,1661,1651,10,"Released version 0.6
 * Added new very preliminary `Parser` to produce Java interface files almost automatically from C/C++ header files; please refer to the new JavaCPP Presets subproject for details"
,src/main/java/com/googlecode/javacpp/Parser.java,55b2a62a058495b73f45b5a54bd4fd42d6ceb0f5,Samuel Audet,2013-09-15T12:24:02Z,samuel.audet@gmail.com,Samuel Audet,2013-09-15T12:24:02Z,samuel.audet@gmail.com,1661,1651,10,"Released version 0.6
 * Added new very preliminary `Parser` to produce Java interface files almost automatically from C/C++ header files; please refer to the new JavaCPP Presets subproject for details"
,src/main/java/com/googlecode/javacpp/annotation/Properties.java,55b2a62a058495b73f45b5a54bd4fd42d6ceb0f5,Samuel Audet,2013-09-15T12:24:02Z,samuel.audet@gmail.com,Samuel Audet,2013-09-15T12:24:02Z,samuel.audet@gmail.com,1661,1651,10,"Released version 0.6
 * Added new very preliminary `Parser` to produce Java interface files almost automatically from C/C++ header files; please refer to the new JavaCPP Presets subproject for details"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,605e77b7b746531b5f1377ecbd104af3e4537905,Samuel Audet,2013-08-31T04:32:47Z,samuel.audet@gmail.com,Samuel Audet,2013-08-31T04:32:47Z,samuel.audet@gmail.com,172,98,74," * When catching a C++ exception, the first class declared after `throws` now gets thrown (issue #36) instead of `RuntimeException`, which is still used by default
 * Fixed Java resource leak after catching a C++ exception"
,src/main/java/com/googlecode/javacpp/Builder.java,605e77b7b746531b5f1377ecbd104af3e4537905,Samuel Audet,2013-08-31T04:32:47Z,samuel.audet@gmail.com,Samuel Audet,2013-08-31T04:32:47Z,samuel.audet@gmail.com,172,98,74," * When catching a C++ exception, the first class declared after `throws` now gets thrown (issue #36) instead of `RuntimeException`, which is still used by default
 * Fixed Java resource leak after catching a C++ exception"
,src/main/java/com/googlecode/javacpp/Generator.java,605e77b7b746531b5f1377ecbd104af3e4537905,Samuel Audet,2013-08-31T04:32:47Z,samuel.audet@gmail.com,Samuel Audet,2013-08-31T04:32:47Z,samuel.audet@gmail.com,172,98,74," * When catching a C++ exception, the first class declared after `throws` now gets thrown (issue #36) instead of `RuntimeException`, which is still used by default
 * Fixed Java resource leak after catching a C++ exception"
,src/main/java/com/googlecode/javacpp/Generator.java,dc4b8be35e27fc3b02609b3157b525eebb3dc382,Samuel Audet,2013-08-25T01:57:51Z,samuel.audet@gmail.com,Samuel Audet,2013-08-25T01:57:51Z,samuel.audet@gmail.com,73,55,18, * Let `Buffer` or arrays of primitive values be valid callback arguments
,src/main/java/com/googlecode/javacpp/BuildMojo.java,d23f4f472966eef1c656478d8863feee1e221f8f,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,888,500,388," * Upgraded references of the Android NDK to version r9
 * Added new `Builder` option ""-copylibs"" that copies into the build directory any dependent shared libraries listed in the `@Platform(link={...}, preload={...})` annotation
 * `Loader.getPlatformName()` can now be overridden by setting the `com.googlecode.javacpp.platform.name` system property
 * Refactored the loading code for `@Properties()` into a neat `Loader.ClassProperties` class, among a few other small changes in `Loader`, `Builder`, `Generator`, and the properties"
,src/main/java/com/googlecode/javacpp/Builder.java,d23f4f472966eef1c656478d8863feee1e221f8f,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,888,500,388," * Upgraded references of the Android NDK to version r9
 * Added new `Builder` option ""-copylibs"" that copies into the build directory any dependent shared libraries listed in the `@Platform(link={...}, preload={...})` annotation
 * `Loader.getPlatformName()` can now be overridden by setting the `com.googlecode.javacpp.platform.name` system property
 * Refactored the loading code for `@Properties()` into a neat `Loader.ClassProperties` class, among a few other small changes in `Loader`, `Builder`, `Generator`, and the properties"
,src/main/java/com/googlecode/javacpp/Generator.java,d23f4f472966eef1c656478d8863feee1e221f8f,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,888,500,388," * Upgraded references of the Android NDK to version r9
 * Added new `Builder` option ""-copylibs"" that copies into the build directory any dependent shared libraries listed in the `@Platform(link={...}, preload={...})` annotation
 * `Loader.getPlatformName()` can now be overridden by setting the `com.googlecode.javacpp.platform.name` system property
 * Refactored the loading code for `@Properties()` into a neat `Loader.ClassProperties` class, among a few other small changes in `Loader`, `Builder`, `Generator`, and the properties"
,src/main/java/com/googlecode/javacpp/Loader.java,d23f4f472966eef1c656478d8863feee1e221f8f,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,888,500,388," * Upgraded references of the Android NDK to version r9
 * Added new `Builder` option ""-copylibs"" that copies into the build directory any dependent shared libraries listed in the `@Platform(link={...}, preload={...})` annotation
 * `Loader.getPlatformName()` can now be overridden by setting the `com.googlecode.javacpp.platform.name` system property
 * Refactored the loading code for `@Properties()` into a neat `Loader.ClassProperties` class, among a few other small changes in `Loader`, `Builder`, `Generator`, and the properties"
,src/main/java/com/googlecode/javacpp/annotation/Platform.java,d23f4f472966eef1c656478d8863feee1e221f8f,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,888,500,388," * Upgraded references of the Android NDK to version r9
 * Added new `Builder` option ""-copylibs"" that copies into the build directory any dependent shared libraries listed in the `@Platform(link={...}, preload={...})` annotation
 * `Loader.getPlatformName()` can now be overridden by setting the `com.googlecode.javacpp.platform.name` system property
 * Refactored the loading code for `@Properties()` into a neat `Loader.ClassProperties` class, among a few other small changes in `Loader`, `Builder`, `Generator`, and the properties"
,src/main/java/com/googlecode/javacpp/annotation/Properties.java,d23f4f472966eef1c656478d8863feee1e221f8f,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,Samuel Audet,2013-08-03T06:00:05Z,samuel.audet@gmail.com,888,500,388," * Upgraded references of the Android NDK to version r9
 * Added new `Builder` option ""-copylibs"" that copies into the build directory any dependent shared libraries listed in the `@Platform(link={...}, preload={...})` annotation
 * `Loader.getPlatformName()` can now be overridden by setting the `com.googlecode.javacpp.platform.name` system property
 * Refactored the loading code for `@Properties()` into a neat `Loader.ClassProperties` class, among a few other small changes in `Loader`, `Builder`, `Generator`, and the properties"
,src/main/java/com/googlecode/javacpp/Generator.java,630823d135f6705cbee059c091361539d314dc3b,Samuel Audet,2013-07-20T04:37:07Z,samuel.audet@gmail.com,Samuel Audet,2013-07-20T04:37:07Z,samuel.audet@gmail.com,169,97,72," * Included often used directories such as `/usr/local/include/` and `/usr/local/lib/` to `compiler.includepath` and `compiler.linkpath` default properties
 * New `@Properties(inherit={Class})` value lets users specify properties in common on a similarly annotated shared config class of sorts"
,src/main/java/com/googlecode/javacpp/Loader.java,630823d135f6705cbee059c091361539d314dc3b,Samuel Audet,2013-07-20T04:37:07Z,samuel.audet@gmail.com,Samuel Audet,2013-07-20T04:37:07Z,samuel.audet@gmail.com,169,97,72," * Included often used directories such as `/usr/local/include/` and `/usr/local/lib/` to `compiler.includepath` and `compiler.linkpath` default properties
 * New `@Properties(inherit={Class})` value lets users specify properties in common on a similarly annotated shared config class of sorts"
,src/main/java/com/googlecode/javacpp/annotation/Properties.java,630823d135f6705cbee059c091361539d314dc3b,Samuel Audet,2013-07-20T04:37:07Z,samuel.audet@gmail.com,Samuel Audet,2013-07-20T04:37:07Z,samuel.audet@gmail.com,169,97,72," * Included often used directories such as `/usr/local/include/` and `/usr/local/lib/` to `compiler.includepath` and `compiler.linkpath` default properties
 * New `@Properties(inherit={Class})` value lets users specify properties in common on a similarly annotated shared config class of sorts"
,src/main/java/com/googlecode/javacpp/Generator.java,85e6dc635bb2b495bfb6ff17dee9438e84664b01,Samuel Audet,2013-07-15T00:59:23Z,samuel.audet@gmail.com,Samuel Audet,2013-07-15T00:59:23Z,samuel.audet@gmail.com,38,24,14," * Let `Buffer` objects be valid return arguments, mostly useful when used along with the `@StdVector` annotation, or some other custom adapter"
,src/main/java/com/googlecode/javacpp/Generator.java,f481d9aef24c175d54fa01a4beb76a3561807a3c,Samuel Audet,2013-07-13T09:41:00Z,samuel.audet@gmail.com,Samuel Audet,2013-07-13T09:41:00Z,samuel.audet@gmail.com,7,3,4, * Fixed callbacks when used with custom class loaders such as with Web containers
,src/main/java/com/googlecode/javacpp/Generator.java,2b3ce614120d0b813dd83901294e0064b62f97cb,Samuel Audet,2013-07-07T01:13:07Z,samuel.audet@gmail.com,Samuel Audet,2013-07-07T01:13:07Z,samuel.audet@gmail.com,41,29,12," * Fixed using `@StdString` (or other `@Adapter` with `@Cast` annotations) on callbacks (issue #34), incidentally allowing them to return a `String`"
,src/main/java/com/googlecode/javacpp/Builder.java,81a627b83de1e76d491297299265a76736f747fd,Samuel Audet,2013-06-15T05:01:11Z,samuel.audet@gmail.com,Samuel Audet,2013-06-15T05:01:11Z,samuel.audet@gmail.com,25,17,8," * By default, `Builder` now links to the `jvm` library only when required, when using the `-header` command line option (issue #33)"
,src/main/java/com/googlecode/javacpp/Generator.java,81a627b83de1e76d491297299265a76736f747fd,Samuel Audet,2013-06-15T05:01:11Z,samuel.audet@gmail.com,Samuel Audet,2013-06-15T05:01:11Z,samuel.audet@gmail.com,25,17,8," * By default, `Builder` now links to the `jvm` library only when required, when using the `-header` command line option (issue #33)"
,src/main/java/com/googlecode/javacpp/Generator.java,f658734b2cf5b1974d66ae61d773e7fe6df472a3,Samuel Audet,2013-06-08T02:54:28Z,samuel.audet@gmail.com,Samuel Audet,2013-06-08T02:54:28Z,samuel.audet@gmail.com,6,4,2, * Incorporated missing explicit cast on return values when using the `@Cast` annotation
,src/main/java/com/googlecode/javacpp/Builder.java,455f8a6fe91eb1f44d014b1d0c3a51f2bd972c27,Samuel Audet,2013-05-11T02:03:06Z,samuel.audet@gmail.com,Samuel Audet,2013-05-11T02:03:06Z,samuel.audet@gmail.com,50,22,28," * Fixed duplicate code getting generated when both specifying the output filename with ""-o <name>"" and using wildcards on packages containing nested classes"
,src/main/java/com/googlecode/javacpp/Pointer.java,455f8a6fe91eb1f44d014b1d0c3a51f2bd972c27,Samuel Audet,2013-05-11T02:03:06Z,samuel.audet@gmail.com,Samuel Audet,2013-05-11T02:03:06Z,samuel.audet@gmail.com,50,22,28," * Fixed duplicate code getting generated when both specifying the output filename with ""-o <name>"" and using wildcards on packages containing nested classes"
,src/main/java/com/googlecode/javacpp/Generator.java,3c130a66c6e5d62adfd5bb03c60407c8eac07d24,Samuel Audet,2013-04-20T10:42:30Z,samuel.audet@gmail.com,Samuel Audet,2013-04-20T10:42:30Z,samuel.audet@gmail.com,26,23,3," * Let arrays of primitive values be valid return arguments, mostly useful when used along with the `@StdVector` annotation, or some other custom adapter"
,src/main/java/com/googlecode/javacpp/Builder.java,1a5e78ae9510d1ba8408937e2cbdb1c3c24da346,Samuel Audet,2013-04-07T10:43:06Z,samuel.audet@gmail.com,Samuel Audet,2013-04-07T10:43:06Z,samuel.audet@gmail.com,36,19,17,Released version 0.5
,src/main/java/com/googlecode/javacpp/Loader.java,1a5e78ae9510d1ba8408937e2cbdb1c3c24da346,Samuel Audet,2013-04-07T10:43:06Z,samuel.audet@gmail.com,Samuel Audet,2013-04-07T10:43:06Z,samuel.audet@gmail.com,36,19,17,Released version 0.5
,src/main/java/com/googlecode/javacpp/Pointer.java,1a5e78ae9510d1ba8408937e2cbdb1c3c24da346,Samuel Audet,2013-04-07T10:43:06Z,samuel.audet@gmail.com,Samuel Audet,2013-04-07T10:43:06Z,samuel.audet@gmail.com,36,19,17,Released version 0.5
,src/main/java/com/googlecode/javacpp/BoolPointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/Builder.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/BytePointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/CLongPointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/CharPointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/DoublePointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/FloatPointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/FunctionPointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/Generator.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/IntPointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/Loader.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/LongPointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/Pointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/PointerPointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/ShortPointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/SizeTPointer.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/Adapter.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/Allocator.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/ArrayAllocator.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/ByPtrRef.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/Cast.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/Const.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/Index.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/NoDeallocator.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/NoException.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/NoOffset.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/Opaque.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/Platform.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/Raw.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/StdString.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/StdVector.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/ValueGetter.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/annotation/ValueSetter.java,3934c45285d7de75c7c827b3a104cbe89658d6aa,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,Samuel Audet,2013-03-24T01:33:42Z,samuel.audet@gmail.com,563,318,245," * Arguments of `Pointer` type now get handled as `char*` in cases when the `position` can be used for arithmetic
 * Worked around bug of `InputStream.available()` always returning 0 with the `http` protocol in `Loader.extractResource(URL)`"
,src/main/java/com/googlecode/javacpp/Generator.java,28832078f3c748b54b18cd120cfe84bb34762a78,Samuel Audet,2013-03-03T10:52:08Z,samuel.audet@gmail.com,Samuel Audet,2013-03-03T10:52:08Z,samuel.audet@gmail.com,19,12,7,"Released version 0.4
* Fixed potential problem with methods of `FunctionPointer` annotated with `@Cast(""const..."")`
* Upgraded references of the Android NDK to version r8d"
,src/main/java/com/googlecode/javacpp/BoolPointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/Builder.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/BytePointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/CLongPointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/CharPointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/DoublePointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/FloatPointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/FunctionPointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/Generator.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/IntPointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/Loader.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/LongPointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/Piper.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/Pointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/PointerPointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/ShortPointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/SizeTPointer.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Adapter.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Allocator.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/ArrayAllocator.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/ByPtr.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/ByPtrPtr.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/ByPtrRef.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/ByRef.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/ByVal.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Cast.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Const.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Convention.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Function.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Index.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/MemberGetter.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/MemberSetter.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Name.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Namespace.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/NoDeallocator.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/NoException.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/NoOffset.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Opaque.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Platform.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Properties.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/Raw.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/StdString.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/StdVector.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/ValueGetter.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/ValueSetter.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/annotation/package-info.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/package-info.java,a41cb1dcc6513133e9466331c1f73143dca5e422,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,Samuel Audet,2013-02-24T14:38:11Z,samuel.audet@gmail.com,1658,1562,96," * Fixed callbacks not working on Android anymore (issue #30)
 * Added some Javadoc to most of the code"
,src/main/java/com/googlecode/javacpp/Builder.java,d5d47a5d7b3d8488ca7d98e92c5e65334ec43208,Samuel Audet,2013-02-11T07:45:02Z,samuel.audet@gmail.com,Samuel Audet,2013-02-11T07:45:02Z,samuel.audet@gmail.com,37,24,13," * To help diagnose `UnsatisfiedLinkError` thrown by `Loader.load()`, they have been augmented with a potential cause originating from the ""preloading"" of libraries, whose premature deletion has also been fixed"
,src/main/java/com/googlecode/javacpp/Loader.java,d5d47a5d7b3d8488ca7d98e92c5e65334ec43208,Samuel Audet,2013-02-11T07:45:02Z,samuel.audet@gmail.com,Samuel Audet,2013-02-11T07:45:02Z,samuel.audet@gmail.com,37,24,13," * To help diagnose `UnsatisfiedLinkError` thrown by `Loader.load()`, they have been augmented with a potential cause originating from the ""preloading"" of libraries, whose premature deletion has also been fixed"
,src/main/java/com/googlecode/javacpp/Builder.java,21a7a204df4821a80b3dab14f0bf5066c85c7258,Samuel Audet,2013-02-07T13:42:27Z,samuel.audet@gmail.com,Samuel Audet,2013-02-07T13:42:27Z,samuel.audet@gmail.com,44,24,20,"Removed the need to provide a `@Platform(library=""..."")` name for enclosing but nested classes"
,src/main/java/com/googlecode/javacpp/Loader.java,21a7a204df4821a80b3dab14f0bf5066c85c7258,Samuel Audet,2013-02-07T13:42:27Z,samuel.audet@gmail.com,Samuel Audet,2013-02-07T13:42:27Z,samuel.audet@gmail.com,44,24,20,"Removed the need to provide a `@Platform(library=""..."")` name for enclosing but nested classes"
,src/main/java/com/googlecode/javacpp/Builder.java,18b642d647c22a353415fb66545dd5e66d4b53f5,Samuel Audet,2013-02-03T10:00:23Z,samuel.audet@gmail.com,Samuel Audet,2013-02-03T10:00:23Z,samuel.audet@gmail.com,96,66,30," * Provided new `@Platform(library=""..."")` annotation value to let users specify the name of the native library used by both `Builder` and `Loader`, where different classes with the same name get built together, which also works on nested classes (issue #29)"
,src/main/java/com/googlecode/javacpp/Generator.java,18b642d647c22a353415fb66545dd5e66d4b53f5,Samuel Audet,2013-02-03T10:00:23Z,samuel.audet@gmail.com,Samuel Audet,2013-02-03T10:00:23Z,samuel.audet@gmail.com,96,66,30," * Provided new `@Platform(library=""..."")` annotation value to let users specify the name of the native library used by both `Builder` and `Loader`, where different classes with the same name get built together, which also works on nested classes (issue #29)"
,src/main/java/com/googlecode/javacpp/Loader.java,18b642d647c22a353415fb66545dd5e66d4b53f5,Samuel Audet,2013-02-03T10:00:23Z,samuel.audet@gmail.com,Samuel Audet,2013-02-03T10:00:23Z,samuel.audet@gmail.com,96,66,30," * Provided new `@Platform(library=""..."")` annotation value to let users specify the name of the native library used by both `Builder` and `Loader`, where different classes with the same name get built together, which also works on nested classes (issue #29)"
,src/main/java/com/googlecode/javacpp/annotation/Platform.java,18b642d647c22a353415fb66545dd5e66d4b53f5,Samuel Audet,2013-02-03T10:00:23Z,samuel.audet@gmail.com,Samuel Audet,2013-02-03T10:00:23Z,samuel.audet@gmail.com,96,66,30," * Provided new `@Platform(library=""..."")` annotation value to let users specify the name of the native library used by both `Builder` and `Loader`, where different classes with the same name get built together, which also works on nested classes (issue #29)"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,69a706a342df67d80bcd028cf4c254526ef9ad76,Samuel Audet,2012-12-15T09:40:31Z,samuel.audet@gmail.com,Samuel Audet,2012-12-15T09:40:31Z,samuel.audet@gmail.com,17,15,2,"Fixed `BuildMojo` not working without specifying any class or package after last
change to `Builder` (fix #2)"
,src/main/java/com/googlecode/javacpp/Builder.java,c5e0d603e9cbbc89ced3bde64be0590bd14ef15f,Samuel Audet,2012-12-15T09:22:45Z,samuel.audet@gmail.com,Samuel Audet,2012-12-15T09:22:45Z,samuel.audet@gmail.com,18,9,9,Fixed `BuildMojo` not working without specifying any class or package after last change to `Builder`
,src/main/java/com/googlecode/javacpp/Generator.java,342553da4575bf89494cbf8de713a7b8da76b46e,Samuel Audet,2012-12-11T13:07:57Z,samuel.audet@gmail.com,Samuel Audet,2012-12-11T13:07:57Z,samuel.audet@gmail.com,5,3,2,Fixed compile error of `FunctionPointer` deallocator with `@Name`
,src/main/java/com/googlecode/javacpp/Builder.java,f5d5b10834173f870d4cd9ad1ef542bc17258c27,Samuel Audet,2012-12-10T12:19:09Z,samuel.audet@gmail.com,Samuel Audet,2012-12-10T12:19:09Z,samuel.audet@gmail.com,28,20,8," * Added the ability to change the name of the class of function objects created when defining a `FunctionPointer` with the `@Name` annotation
 * `Builder` would go on a compile spree when all classes specified on the command line could not be loaded"
,src/main/java/com/googlecode/javacpp/Generator.java,f5d5b10834173f870d4cd9ad1ef542bc17258c27,Samuel Audet,2012-12-10T12:19:09Z,samuel.audet@gmail.com,Samuel Audet,2012-12-10T12:19:09Z,samuel.audet@gmail.com,28,20,8," * Added the ability to change the name of the class of function objects created when defining a `FunctionPointer` with the `@Name` annotation
 * `Builder` would go on a compile spree when all classes specified on the command line could not be loaded"
,src/main/java/com/googlecode/javacpp/Builder.java,0ba284424e16758574e81ba4640a1826acca50a2,Samuel Audet,2012-11-20T14:10:47Z,samuel.audet@gmail.com,Samuel Audet,2012-11-20T14:10:47Z,samuel.audet@gmail.com,36,27,9," * Exported `Loader.isLoadLibraries()`, which always returns true, except when the `Builder` loads the classes
 * Made it possible to specify a nested class (with a '$' character in the name) on the command line
 * When `Pointer.limit == 0`, the methods `put()`, `zero()`, and `asBuffer()` now assume a size of 1"
,src/main/java/com/googlecode/javacpp/Loader.java,0ba284424e16758574e81ba4640a1826acca50a2,Samuel Audet,2012-11-20T14:10:47Z,samuel.audet@gmail.com,Samuel Audet,2012-11-20T14:10:47Z,samuel.audet@gmail.com,36,27,9," * Exported `Loader.isLoadLibraries()`, which always returns true, except when the `Builder` loads the classes
 * Made it possible to specify a nested class (with a '$' character in the name) on the command line
 * When `Pointer.limit == 0`, the methods `put()`, `zero()`, and `asBuffer()` now assume a size of 1"
,src/main/java/com/googlecode/javacpp/Pointer.java,0ba284424e16758574e81ba4640a1826acca50a2,Samuel Audet,2012-11-20T14:10:47Z,samuel.audet@gmail.com,Samuel Audet,2012-11-20T14:10:47Z,samuel.audet@gmail.com,36,27,9," * Exported `Loader.isLoadLibraries()`, which always returns true, except when the `Builder` loads the classes
 * Made it possible to specify a nested class (with a '$' character in the name) on the command line
 * When `Pointer.limit == 0`, the methods `put()`, `zero()`, and `asBuffer()` now assume a size of 1"
,src/main/java/com/googlecode/javacpp/Generator.java,b51e25dffc7a234b359476cae3797dc7c13e5b49,Samuel Audet,2012-11-10T00:54:31Z,samuel.audet@gmail.com,Samuel Audet,2012-11-10T00:54:31Z,samuel.audet@gmail.com,23,18,5, * Fixed compiler error on 32-bit Mac OS X
,src/main/java/com/googlecode/javacpp/Pointer.java,994d451bbf4ddad29d8dd0d0cf56139aa8b7cf18,Samuel Audet,2012-11-04T11:43:10Z,samuel.audet@gmail.com,Samuel Audet,2012-11-04T11:43:10Z,samuel.audet@gmail.com,5,3,2,Released version 0.3
,src/main/java/com/googlecode/javacpp/Generator.java,09e76232250ece004ef1eeaa465f4d3358b0725e,Samuel Audet,2012-11-03T05:10:30Z,samuel.audet@gmail.com,Samuel Audet,2012-11-03T05:10:30Z,samuel.audet@gmail.com,31,22,9,Fixed a few small things
,src/main/java/com/googlecode/javacpp/Pointer.java,09e76232250ece004ef1eeaa465f4d3358b0725e,Samuel Audet,2012-11-03T05:10:30Z,samuel.audet@gmail.com,Samuel Audet,2012-11-03T05:10:30Z,samuel.audet@gmail.com,31,22,9,Fixed a few small things
,src/main/java/com/googlecode/javacpp/BoolPointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/BytePointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/CLongPointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/CharPointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/DoublePointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/FloatPointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/Generator.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/IntPointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/Loader.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/LongPointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/Pointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/PointerPointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/ShortPointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/SizeTPointer.java,edc0de4d103d2a690db7ab5e3db224e7ef75d5d1,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,Samuel Audet,2012-11-02T14:35:19Z,samuel.audet@gmail.com,173,110,63," * Added `Pointer.withDeallocator(Pointer)` method to attach easily a custom `Deallocator` created out of a `static void deallocate(Pointer)` method in the subclass, including native ones such as `@Namespace @Name(""delete"") static void deallocate(Pointer)`"
,src/main/java/com/googlecode/javacpp/Generator.java,8d68946b734a7555a2d80b5c173f633b89ad1273,Samuel Audet,2012-11-01T13:33:41Z,samuel.audet@gmail.com,Samuel Audet,2012-11-01T13:33:41Z,samuel.audet@gmail.com,31,16,15," * A name starting with ""::"", for example `@Name(""::std::string"")` or `@Namespace(""::std"")`, now drops the remaining enclosing scope"
,src/main/java/com/googlecode/javacpp/Builder.java,c523018ddd9715c0ba937405c2afc2bdf8ad2688,Samuel Audet,2012-10-28T13:13:49Z,samuel.audet@gmail.com,Samuel Audet,2012-10-28T13:13:49Z,samuel.audet@gmail.com,128,75,53,Modified `Builder` to prevent requiring the `jvm` library for cases where linking has a high probability of failure
,src/main/java/com/googlecode/javacpp/Generator.java,c523018ddd9715c0ba937405c2afc2bdf8ad2688,Samuel Audet,2012-10-28T13:13:49Z,samuel.audet@gmail.com,Samuel Audet,2012-10-28T13:13:49Z,samuel.audet@gmail.com,128,75,53,Modified `Builder` to prevent requiring the `jvm` library for cases where linking has a high probability of failure
,src/main/java/com/googlecode/javacpp/Builder.java,e544f7c74edc2b34b125bf02dee6e7441a130224,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,803,418,385," * Removed confusing `cast` value of `@Adapter` instead relying on new `String[]` value of `@Cast` to order multiple casts
 * The `Builder` was not linking with the `jvm` library by default"
,src/main/java/com/googlecode/javacpp/Generator.java,e544f7c74edc2b34b125bf02dee6e7441a130224,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,803,418,385," * Removed confusing `cast` value of `@Adapter` instead relying on new `String[]` value of `@Cast` to order multiple casts
 * The `Builder` was not linking with the `jvm` library by default"
,src/main/java/com/googlecode/javacpp/Loader.java,e544f7c74edc2b34b125bf02dee6e7441a130224,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,803,418,385," * Removed confusing `cast` value of `@Adapter` instead relying on new `String[]` value of `@Cast` to order multiple casts
 * The `Builder` was not linking with the `jvm` library by default"
,src/main/java/com/googlecode/javacpp/annotation/Adapter.java,e544f7c74edc2b34b125bf02dee6e7441a130224,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,803,418,385," * Removed confusing `cast` value of `@Adapter` instead relying on new `String[]` value of `@Cast` to order multiple casts
 * The `Builder` was not linking with the `jvm` library by default"
,src/main/java/com/googlecode/javacpp/annotation/Cast.java,e544f7c74edc2b34b125bf02dee6e7441a130224,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,803,418,385," * Removed confusing `cast` value of `@Adapter` instead relying on new `String[]` value of `@Cast` to order multiple casts
 * The `Builder` was not linking with the `jvm` library by default"
,src/main/java/com/googlecode/javacpp/annotation/StdString.java,e544f7c74edc2b34b125bf02dee6e7441a130224,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,803,418,385," * Removed confusing `cast` value of `@Adapter` instead relying on new `String[]` value of `@Cast` to order multiple casts
 * The `Builder` was not linking with the `jvm` library by default"
,src/main/java/com/googlecode/javacpp/annotation/StdVector.java,e544f7c74edc2b34b125bf02dee6e7441a130224,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,Samuel Audet,2012-10-27T02:56:48Z,samuel.audet@gmail.com,803,418,385," * Removed confusing `cast` value of `@Adapter` instead relying on new `String[]` value of `@Cast` to order multiple casts
 * The `Builder` was not linking with the `jvm` library by default"
,src/main/java/com/googlecode/javacpp/Generator.java,37228aa780eae24c64e8011763d419151b6ee6d1,Samuel Audet,2012-10-21T11:37:52Z,samuel.audet@gmail.com,Samuel Audet,2012-10-21T11:37:52Z,samuel.audet@gmail.com,673,339,334," * Renamed various variables in `Generator` to make the generated code more readable
 * Fixed memory corruption when using `@ByRef` on a function that returns by value an `std::string` (issue #26)"
,src/main/java/com/googlecode/javacpp/Generator.java,d2765542855984ad68ce04c9846dbb5a083fc95e,Samuel Audet,2012-10-17T14:20:42Z,samuel.audet@gmail.com,Samuel Audet,2012-10-17T14:20:42Z,samuel.audet@gmail.com,69,40,29," * Fixed memory corruption when returning by value an `std::vector<>` using an adapter
 * Added `Pointer.zero()` method that calls `memset(0)` on the range
 * For easier memory management, more than one `Pointer` now allowed to share the `deallocator` when ""casting"" them"
,src/main/java/com/googlecode/javacpp/Pointer.java,d2765542855984ad68ce04c9846dbb5a083fc95e,Samuel Audet,2012-10-17T14:20:42Z,samuel.audet@gmail.com,Samuel Audet,2012-10-17T14:20:42Z,samuel.audet@gmail.com,69,40,29," * Fixed memory corruption when returning by value an `std::vector<>` using an adapter
 * Added `Pointer.zero()` method that calls `memset(0)` on the range
 * For easier memory management, more than one `Pointer` now allowed to share the `deallocator` when ""casting"" them"
,src/main/java/com/googlecode/javacpp/Generator.java,f179b014dbe1ddecb617c2d95efb6040a0908eda,Samuel Audet,2012-10-13T07:27:33Z,samuel.audet@gmail.com,Samuel Audet,2012-10-13T07:27:33Z,samuel.audet@gmail.com,11,6,5, * Fixed `@Cast` not working when attempting to `return` the argument
,src/main/java/com/googlecode/javacpp/Generator.java,c746a27404dc32f2e0376c492801b5f65e68d289,Samuel Audet,2012-10-08T02:07:14Z,samuel.audet@gmail.com,Samuel Audet,2012-10-08T02:07:14Z,samuel.audet@gmail.com,85,49,36,Fixed a few things related to named `FunctionPointer` callbacks
,src/main/java/com/googlecode/javacpp/BuildMojo.java,e8825ab479c2b8e92e8d63c846c5adb3269d14d2,Samuel Audet,2012-09-30T13:32:09Z,samuel.audet@gmail.com,Samuel Audet,2012-09-30T13:32:09Z,samuel.audet@gmail.com,383,253,130, * Added functionality to access `FunctionPointer` callbacks by their name from C/C++: We can annotate them with `@Name` and build with the new `-header` option to get their declarations in a header file
,src/main/java/com/googlecode/javacpp/Builder.java,e8825ab479c2b8e92e8d63c846c5adb3269d14d2,Samuel Audet,2012-09-30T13:32:09Z,samuel.audet@gmail.com,Samuel Audet,2012-09-30T13:32:09Z,samuel.audet@gmail.com,383,253,130, * Added functionality to access `FunctionPointer` callbacks by their name from C/C++: We can annotate them with `@Name` and build with the new `-header` option to get their declarations in a header file
,src/main/java/com/googlecode/javacpp/Generator.java,e8825ab479c2b8e92e8d63c846c5adb3269d14d2,Samuel Audet,2012-09-30T13:32:09Z,samuel.audet@gmail.com,Samuel Audet,2012-09-30T13:32:09Z,samuel.audet@gmail.com,383,253,130, * Added functionality to access `FunctionPointer` callbacks by their name from C/C++: We can annotate them with `@Name` and build with the new `-header` option to get their declarations in a header file
,src/main/java/com/googlecode/javacpp/Loader.java,e8825ab479c2b8e92e8d63c846c5adb3269d14d2,Samuel Audet,2012-09-30T13:32:09Z,samuel.audet@gmail.com,Samuel Audet,2012-09-30T13:32:09Z,samuel.audet@gmail.com,383,253,130, * Added functionality to access `FunctionPointer` callbacks by their name from C/C++: We can annotate them with `@Name` and build with the new `-header` option to get their declarations in a header file
,src/main/java/com/googlecode/javacpp/Generator.java,1de56e4043a85af4f85da3434eb10ae16fbc71de,Samuel Audet,2012-09-14T14:14:42Z,samuel.audet@gmail.com,Samuel Audet,2012-09-14T14:14:42Z,samuel.audet@gmail.com,27,16,11, * `Pointer.deallocator()` would needlessly enqueue `Deallocator` objects pointing to the native `NULL` address
,src/main/java/com/googlecode/javacpp/Pointer.java,1de56e4043a85af4f85da3434eb10ae16fbc71de,Samuel Audet,2012-09-14T14:14:42Z,samuel.audet@gmail.com,Samuel Audet,2012-09-14T14:14:42Z,samuel.audet@gmail.com,27,16,11, * `Pointer.deallocator()` would needlessly enqueue `Deallocator` objects pointing to the native `NULL` address
,src/main/java/com/googlecode/javacpp/FunctionPointer.java,ffaf80a124727efe953d83d60caa0ad173daa213,Samuel Audet,2012-09-02T03:56:08Z,samuel.audet@gmail.com,Samuel Audet,2012-09-02T03:56:08Z,samuel.audet@gmail.com,242,147,95," * Added support for C++ ""functors"" based on the `operator()`, which gets used when annotating a `FunctionPointer` method parameter with `@ByRef`
 * For convenience in Scala, added `apply()` as an acceptable method name within a `FunctionPointer`, in addition to `call()`"
,src/main/java/com/googlecode/javacpp/Generator.java,ffaf80a124727efe953d83d60caa0ad173daa213,Samuel Audet,2012-09-02T03:56:08Z,samuel.audet@gmail.com,Samuel Audet,2012-09-02T03:56:08Z,samuel.audet@gmail.com,242,147,95," * Added support for C++ ""functors"" based on the `operator()`, which gets used when annotating a `FunctionPointer` method parameter with `@ByRef`
 * For convenience in Scala, added `apply()` as an acceptable method name within a `FunctionPointer`, in addition to `call()`"
,src/main/java/com/googlecode/javacpp/Generator.java,4056ca045fc622d19cec6b3481404426173f042f,Samuel Audet,2012-08-19T03:16:39Z,samuel.audet@gmail.com,Samuel Audet,2012-08-19T03:16:39Z,samuel.audet@gmail.com,11,6,5, * Fixed `@Cast` not working along parameters with an `@Adapter`
,src/main/java/com/googlecode/javacpp/BoolPointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/BytePointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/CLongPointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/CharPointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/DoublePointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/FloatPointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/Generator.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/IntPointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/LongPointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/Pointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/PointerPointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/ShortPointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/SizeTPointer.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/annotation/StdString.java,c9c2ab8fd582f6920b30a7320a92293d07d3c74d,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,Samuel Audet,2012-08-18T13:49:37Z,samuel.audet@gmail.com,133,90,43," * `Generator` would ignore `Pointer.position()` in the case of `@ByPtrPtr` and `@ByPtrRef` parameters
 * Replaced hack to create a `Pointer` from a `Buffer` object with something more standard"
,src/main/java/com/googlecode/javacpp/Generator.java,6a57e944b4b66923bc1e91f9779bed155473ff17,Samuel Audet,2012-08-11T13:36:00Z,samuel.audet@gmail.com,Samuel Audet,2012-08-11T13:36:00Z,samuel.audet@gmail.com,393,260,133," * Fixed `Loader.sizeof(Pointer.class)` to return the `sizeof(void*)`
 * In addition to methods and parameters, we may now apply `@Adapter` to annotation types as well, allowing us to shorten expressions like `@Adapter(""VectorAdapter<int>"") int[]` to `@StdVector int[]`, to support `std::vector<int>`, and similarly for `@StdString` and `std::string`"
,src/main/java/com/googlecode/javacpp/annotation/Adapter.java,6a57e944b4b66923bc1e91f9779bed155473ff17,Samuel Audet,2012-08-11T13:36:00Z,samuel.audet@gmail.com,Samuel Audet,2012-08-11T13:36:00Z,samuel.audet@gmail.com,393,260,133," * Fixed `Loader.sizeof(Pointer.class)` to return the `sizeof(void*)`
 * In addition to methods and parameters, we may now apply `@Adapter` to annotation types as well, allowing us to shorten expressions like `@Adapter(""VectorAdapter<int>"") int[]` to `@StdVector int[]`, to support `std::vector<int>`, and similarly for `@StdString` and `std::string`"
,src/main/java/com/googlecode/javacpp/annotation/StdString.java,6a57e944b4b66923bc1e91f9779bed155473ff17,Samuel Audet,2012-08-11T13:36:00Z,samuel.audet@gmail.com,Samuel Audet,2012-08-11T13:36:00Z,samuel.audet@gmail.com,393,260,133," * Fixed `Loader.sizeof(Pointer.class)` to return the `sizeof(void*)`
 * In addition to methods and parameters, we may now apply `@Adapter` to annotation types as well, allowing us to shorten expressions like `@Adapter(""VectorAdapter<int>"") int[]` to `@StdVector int[]`, to support `std::vector<int>`, and similarly for `@StdString` and `std::string`"
,src/main/java/com/googlecode/javacpp/annotation/StdVector.java,6a57e944b4b66923bc1e91f9779bed155473ff17,Samuel Audet,2012-08-11T13:36:00Z,samuel.audet@gmail.com,Samuel Audet,2012-08-11T13:36:00Z,samuel.audet@gmail.com,393,260,133," * Fixed `Loader.sizeof(Pointer.class)` to return the `sizeof(void*)`
 * In addition to methods and parameters, we may now apply `@Adapter` to annotation types as well, allowing us to shorten expressions like `@Adapter(""VectorAdapter<int>"") int[]` to `@StdVector int[]`, to support `std::vector<int>`, and similarly for `@StdString` and `std::string`"
,src/main/java/com/googlecode/javacpp/FunctionPointer.java,2e230af078036823758a48e1bfc45083a8d47977,Samuel Audet,2012-08-10T12:55:44Z,samuel.audet@gmail.com,Samuel Audet,2012-08-10T12:55:44Z,samuel.audet@gmail.com,30,22,8," * Fixed callback parameter casting of primitive and `String` types
 * An empty `@Namespace` can now be used to let `Generator` know of entities that are not part of any scope, such as macros and operators
 * Turned `FunctionPointer` into an `abstract class` with `protected` constructors, but if users still try to use it as function parameters, `Generator` now logs a warning indicating that a subclass should be used (issue #23)"
,src/main/java/com/googlecode/javacpp/Generator.java,2e230af078036823758a48e1bfc45083a8d47977,Samuel Audet,2012-08-10T12:55:44Z,samuel.audet@gmail.com,Samuel Audet,2012-08-10T12:55:44Z,samuel.audet@gmail.com,30,22,8," * Fixed callback parameter casting of primitive and `String` types
 * An empty `@Namespace` can now be used to let `Generator` know of entities that are not part of any scope, such as macros and operators
 * Turned `FunctionPointer` into an `abstract class` with `protected` constructors, but if users still try to use it as function parameters, `Generator` now logs a warning indicating that a subclass should be used (issue #23)"
,src/main/java/com/googlecode/javacpp/annotation/Namespace.java,2e230af078036823758a48e1bfc45083a8d47977,Samuel Audet,2012-08-10T12:55:44Z,samuel.audet@gmail.com,Samuel Audet,2012-08-10T12:55:44Z,samuel.audet@gmail.com,30,22,8," * Fixed callback parameter casting of primitive and `String` types
 * An empty `@Namespace` can now be used to let `Generator` know of entities that are not part of any scope, such as macros and operators
 * Turned `FunctionPointer` into an `abstract class` with `protected` constructors, but if users still try to use it as function parameters, `Generator` now logs a warning indicating that a subclass should be used (issue #23)"
,src/main/java/com/googlecode/javacpp/Generator.java,cacf0d9977db7b5a5cc70a5e6db0f4b93197424b,Samuel Audet,2012-08-08T13:16:24Z,samuel.audet@gmail.com,Samuel Audet,2012-08-08T13:16:24Z,samuel.audet@gmail.com,120,73,47," * Removed the `out` value of the `@Adapter` annotation: All adapters are now ""out"" by default, unless `@Const` also appears on the same element"
,src/main/java/com/googlecode/javacpp/annotation/Adapter.java,cacf0d9977db7b5a5cc70a5e6db0f4b93197424b,Samuel Audet,2012-08-08T13:16:24Z,samuel.audet@gmail.com,Samuel Audet,2012-08-08T13:16:24Z,samuel.audet@gmail.com,120,73,47," * Removed the `out` value of the `@Adapter` annotation: All adapters are now ""out"" by default, unless `@Const` also appears on the same element"
,src/main/java/com/googlecode/javacpp/annotation/Const.java,cacf0d9977db7b5a5cc70a5e6db0f4b93197424b,Samuel Audet,2012-08-08T13:16:24Z,samuel.audet@gmail.com,Samuel Audet,2012-08-08T13:16:24Z,samuel.audet@gmail.com,120,73,47," * Removed the `out` value of the `@Adapter` annotation: All adapters are now ""out"" by default, unless `@Const` also appears on the same element"
,src/main/java/com/googlecode/javacpp/Generator.java,51f4daa13d618c6bd6a5556ff2096d0e834638cc,Samuel Audet,2012-08-04T07:39:12Z,samuel.audet@gmail.com,Samuel Audet,2012-08-04T07:39:12Z,samuel.audet@gmail.com,53,31,22," * Fixed `Pointer.equals(null)` throwing `NullPointerException` (issue #22)
 * `@NoOffset` would erroneously prevent `sizeof()` operations from getting generated"
,src/main/java/com/googlecode/javacpp/Pointer.java,51f4daa13d618c6bd6a5556ff2096d0e834638cc,Samuel Audet,2012-08-04T07:39:12Z,samuel.audet@gmail.com,Samuel Audet,2012-08-04T07:39:12Z,samuel.audet@gmail.com,53,31,22," * Fixed `Pointer.equals(null)` throwing `NullPointerException` (issue #22)
 * `@NoOffset` would erroneously prevent `sizeof()` operations from getting generated"
,src/main/java/com/googlecode/javacpp/Generator.java,fa409e4dd606be4b2b8a30c6adefb95dbbb919c0,Samuel Audet,2012-07-21T06:30:10Z,samuel.audet@gmail.com,Samuel Audet,2012-07-21T06:30:10Z,samuel.audet@gmail.com,10,6,4," * Fixed problems when trying to map `java.lang.String` to other native types than `char*`, such as `unsigned char*`"
,src/main/java/com/googlecode/javacpp/Generator.java,3fd6db7d5021e51e4beec97c7c5421229b82ac31,Samuel Audet,2012-07-09T13:31:57Z,samuel.audet@gmail.com,Samuel Audet,2012-07-09T13:31:57Z,samuel.audet@gmail.com,186,120,66," * JavaCPP now uses the `new (std::nothrow)` operator for allocation, which guarantees that allocation of primitive native arrays won't throw exceptions, making it possible to build C++ exception free JNI libraries"
,src/main/java/com/googlecode/javacpp/Generator.java,bb8584471547acdcfd6a9be768de38b9b1a7a029,Samuel Audet,2012-07-01T01:35:41Z,samuel.audet@gmail.com,Samuel Audet,2012-07-01T01:35:41Z,samuel.audet@gmail.com,115,73,42," * Added new `Pointer.limit` property, mainly useful to get the `size` of an output parameter, as returned by an adapter specified with the `@Adapter` annotation
 * Renamed the `capacity` field of an adapter to `size` as it now maps to both `Pointer.limit` and `Pointer.capacity` (the latter only for new allocations)"
,src/main/java/com/googlecode/javacpp/Pointer.java,bb8584471547acdcfd6a9be768de38b9b1a7a029,Samuel Audet,2012-07-01T01:35:41Z,samuel.audet@gmail.com,Samuel Audet,2012-07-01T01:35:41Z,samuel.audet@gmail.com,115,73,42," * Added new `Pointer.limit` property, mainly useful to get the `size` of an output parameter, as returned by an adapter specified with the `@Adapter` annotation
 * Renamed the `capacity` field of an adapter to `size` as it now maps to both `Pointer.limit` and `Pointer.capacity` (the latter only for new allocations)"
,src/main/java/com/googlecode/javacpp/Generator.java,f4ece2f34684e5995635932a383498d56aad87a0,Samuel Audet,2012-06-23T10:02:58Z,samuel.audet@gmail.com,Samuel Audet,2012-06-23T10:02:58Z,samuel.audet@gmail.com,60,48,12," * Added `Pointer.put(Pointer)` method, the counterpart of `Buffer.put(Buffer)`, to call the native `memcpy()` function on two `Pointer` objects"
,src/main/java/com/googlecode/javacpp/Pointer.java,f4ece2f34684e5995635932a383498d56aad87a0,Samuel Audet,2012-06-23T10:02:58Z,samuel.audet@gmail.com,Samuel Audet,2012-06-23T10:02:58Z,samuel.audet@gmail.com,60,48,12," * Added `Pointer.put(Pointer)` method, the counterpart of `Buffer.put(Buffer)`, to call the native `memcpy()` function on two `Pointer` objects"
,src/main/java/com/googlecode/javacpp/annotation/NoException.java,d524c1f8fb36aea69b6edb7ea27772abdba988f9,Samuel Audet,2012-06-16T00:21:42Z,samuel.audet@gmail.com,Samuel Audet,2012-06-16T00:21:42Z,samuel.audet@gmail.com,16,15,1,Added missing `NoException.java` source file
,src/main/java/com/googlecode/javacpp/Generator.java,5c5a58a12a6535b84d9c3fb8fe5f3226324e65de,Samuel Audet,2012-06-09T08:06:37Z,samuel.audet@gmail.com,Samuel Audet,2012-06-09T08:06:37Z,samuel.audet@gmail.com,146,78,68," * New `@NoException` annotation to reduce the size of generated code and optimize runtime performance of functions that are guaranteed not to throw exceptions, or for cases when we do not mind that the JVM may crash and burn
 * Trying to generate code for non-static native methods inside a class not extending `Pointer` now generates proper warning (issue #19)
 * Fixed regression where the `@Adapter` notation generates incorrect code for types other than `Pointer` (issue #20)"
,src/main/java/com/googlecode/javacpp/Generator.java,d7a1761a52869a2d45c9b1ae77766ec75fca30e9,Samuel Audet,2012-06-09T04:58:49Z,samuel.audet@gmail.com,Samuel Audet,2012-06-09T04:58:49Z,samuel.audet@gmail.com,13,7,6, * Fixed `@Adapter` generating incorrect code on primitive types
,src/main/java/com/googlecode/javacpp/Generator.java,f027143595ba196a0254957b5c15e6711c5477f2,Samuel Audet,2012-06-09T04:45:09Z,samuel.audet@gmail.com,Samuel Audet,2012-06-09T04:45:09Z,samuel.audet@gmail.com,68,24,44," * Trying to generate code for non-static native methods inside a class not extending `Pointer` now generates proper warning (issue #19)
 * Fixed regression where the `@Adapter` notation generates incorrect code for types other than `Pointer` (issue #20)"
,src/main/java/com/googlecode/javacpp/Builder.java,96cf838a9edde36105f9abad1945f84381882393,Samuel Audet,2012-05-26T12:01:40Z,samuel.audet@gmail.com,Samuel Audet,2012-05-26T12:01:40Z,samuel.audet@gmail.com,99,61,38," * Started using version numbers, friendly to tools like Maven, and placing packages in a sort of [Maven repository http://maven2.javacpp.googlecode.com/git/] (issue #10)
 * All files now get extracted into a temporary subdirectory, and with the appropriate platform-dependent linker options, or with libraries patched up after the fact with tools such as `install_name_tool` of Mac OS X, most native dynamic linkers can load dependent libraries from there
 * Changed the default value of the `@Index` annotation from 0 to 1, and fixed the `Generator` when it is used with member getters and setters
 * Renamed `mingw-*.properties` to `windows-*-mingw.properties` for consistency
 * Made the `Generator` allocate native heap memory for callback arguments passed `@ByVal` (in addition to `FunctionPointer`), rendering their behavior consistent with return `@ByVal` in the case of function calls (issue #16)
 * `Generator` now uses `std::runtime_error(std::string&)` instead of assuming that some nonstandard `std::exception(std::string&)` constructor exists (issue #17)
 * Fixed `Generator` producing incorrect code when applying invalid annotations such as `@ByVal` on a method that returns something else than a `Pointer` object (issue #18)"
,src/main/java/com/googlecode/javacpp/Generator.java,96cf838a9edde36105f9abad1945f84381882393,Samuel Audet,2012-05-26T12:01:40Z,samuel.audet@gmail.com,Samuel Audet,2012-05-26T12:01:40Z,samuel.audet@gmail.com,99,61,38," * Started using version numbers, friendly to tools like Maven, and placing packages in a sort of [Maven repository http://maven2.javacpp.googlecode.com/git/] (issue #10)
 * All files now get extracted into a temporary subdirectory, and with the appropriate platform-dependent linker options, or with libraries patched up after the fact with tools such as `install_name_tool` of Mac OS X, most native dynamic linkers can load dependent libraries from there
 * Changed the default value of the `@Index` annotation from 0 to 1, and fixed the `Generator` when it is used with member getters and setters
 * Renamed `mingw-*.properties` to `windows-*-mingw.properties` for consistency
 * Made the `Generator` allocate native heap memory for callback arguments passed `@ByVal` (in addition to `FunctionPointer`), rendering their behavior consistent with return `@ByVal` in the case of function calls (issue #16)
 * `Generator` now uses `std::runtime_error(std::string&)` instead of assuming that some nonstandard `std::exception(std::string&)` constructor exists (issue #17)
 * Fixed `Generator` producing incorrect code when applying invalid annotations such as `@ByVal` on a method that returns something else than a `Pointer` object (issue #18)"
,src/main/java/com/googlecode/javacpp/annotation/Index.java,96cf838a9edde36105f9abad1945f84381882393,Samuel Audet,2012-05-26T12:01:40Z,samuel.audet@gmail.com,Samuel Audet,2012-05-26T12:01:40Z,samuel.audet@gmail.com,99,61,38," * Started using version numbers, friendly to tools like Maven, and placing packages in a sort of [Maven repository http://maven2.javacpp.googlecode.com/git/] (issue #10)
 * All files now get extracted into a temporary subdirectory, and with the appropriate platform-dependent linker options, or with libraries patched up after the fact with tools such as `install_name_tool` of Mac OS X, most native dynamic linkers can load dependent libraries from there
 * Changed the default value of the `@Index` annotation from 0 to 1, and fixed the `Generator` when it is used with member getters and setters
 * Renamed `mingw-*.properties` to `windows-*-mingw.properties` for consistency
 * Made the `Generator` allocate native heap memory for callback arguments passed `@ByVal` (in addition to `FunctionPointer`), rendering their behavior consistent with return `@ByVal` in the case of function calls (issue #16)
 * `Generator` now uses `std::runtime_error(std::string&)` instead of assuming that some nonstandard `std::exception(std::string&)` constructor exists (issue #17)
 * Fixed `Generator` producing incorrect code when applying invalid annotations such as `@ByVal` on a method that returns something else than a `Pointer` object (issue #18)"
,src/main/java/com/googlecode/javacpp/Builder.java,8c13f85ab6ce4baa82916a54667d68e48107c3d6,Samuel Audet,2012-05-20T03:04:17Z,samuel.audet@gmail.com,Samuel Audet,2012-05-20T03:04:17Z,samuel.audet@gmail.com,210,133,77," * Before loading the JNI library, the `Loader` now also tries to extract and load libraries listed in the `@Platform(link={...}, preload={...})` annotation values, and to support library names with version numbers, each value has to follow the format ""libname@version"" (or ""libname@@version"" to have `Builder` use it for the compiler as well), where ""version"" is the version number found in the filename as required by the native dynamic linker, usually a short sequence of digits and dots, but it can be anything (e.g.: ""mylib@.4.2"" would map to ""libmylib.so.4.2"", ""libmylib.4.2.dylib"", and ""mylib.4.2.dll"" under Linux, Mac OS X, and Windows respectively)
 * Stopped using `java.net.URL` as hash key in `Loader` (very bad idea)"
,src/main/java/com/googlecode/javacpp/Loader.java,8c13f85ab6ce4baa82916a54667d68e48107c3d6,Samuel Audet,2012-05-20T03:04:17Z,samuel.audet@gmail.com,Samuel Audet,2012-05-20T03:04:17Z,samuel.audet@gmail.com,210,133,77," * Before loading the JNI library, the `Loader` now also tries to extract and load libraries listed in the `@Platform(link={...}, preload={...})` annotation values, and to support library names with version numbers, each value has to follow the format ""libname@version"" (or ""libname@@version"" to have `Builder` use it for the compiler as well), where ""version"" is the version number found in the filename as required by the native dynamic linker, usually a short sequence of digits and dots, but it can be anything (e.g.: ""mylib@.4.2"" would map to ""libmylib.so.4.2"", ""libmylib.4.2.dylib"", and ""mylib.4.2.dll"" under Linux, Mac OS X, and Windows respectively)
 * Stopped using `java.net.URL` as hash key in `Loader` (very bad idea)"
,src/main/java/com/googlecode/javacpp/BoolPointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/Builder.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/BytePointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/CLongPointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/CharPointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/DoublePointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/FloatPointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/Generator.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/IntPointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/Loader.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/LongPointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/Pointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/PointerPointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/ShortPointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/SizeTPointer.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/annotation/Adapter.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/annotation/Const.java,856ecd989f26cc3920de024dcdf3e9bcd9d892bd,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,Samuel Audet,2012-05-12T07:19:41Z,samuel.audet@gmail.com,390,260,130," * New `Loader.loadLibrary()` method similar to `System.loadLibrary()`, but before searching the library path, it tries to extract and load the librar
 * `Generator` now accepts `@Const` on `FunctionPointer` class declarations
 * Added new `@Adapter.cast()` value to cast explicitly the output of a C++ adapter object
 * Upgraded references of the Android NDK to version r8
 * Included new command line option ""-Xcompiler"" to pass options such as ""-Wl,-static"" directly to the compiler
 * Made other various minor changes and enhancements"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,50b05a53b842d92719ee58b793fe70df882a17a5,Samuel Audet,2012-04-30T10:59:47Z,samuel.audet@gmail.com,Samuel Audet,2012-04-30T10:59:47Z,samuel.audet@gmail.com,539,303,236," * Refactored `Builder` to remove the need of the `Builder.Main` class
 * Added CUDA properties for Windows and Mac OS X as well"
,src/main/java/com/googlecode/javacpp/Builder.java,50b05a53b842d92719ee58b793fe70df882a17a5,Samuel Audet,2012-04-30T10:59:47Z,samuel.audet@gmail.com,Samuel Audet,2012-04-30T10:59:47Z,samuel.audet@gmail.com,539,303,236," * Refactored `Builder` to remove the need of the `Builder.Main` class
 * Added CUDA properties for Windows and Mac OS X as well"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,2ff99db5e5d68b94e1d3620bbc6da0f1e3c3c3ab,Samuel Audet,2012-04-29T02:54:59Z,samuel.audet@gmail.com,Samuel Audet,2012-04-29T02:54:59Z,samuel.audet@gmail.com,167,104,63,"Added an `environmentVariables` configuration option to `BuildMojo`, along with some slight refactoring of `Builder.Main`"
,src/main/java/com/googlecode/javacpp/Builder.java,2ff99db5e5d68b94e1d3620bbc6da0f1e3c3c3ab,Samuel Audet,2012-04-29T02:54:59Z,samuel.audet@gmail.com,Samuel Audet,2012-04-29T02:54:59Z,samuel.audet@gmail.com,167,104,63,"Added an `environmentVariables` configuration option to `BuildMojo`, along with some slight refactoring of `Builder.Main`"
,src/main/java/com/googlecode/javacpp/Builder.java,6518d25f403a7b0d97ac9d2e5b66925460150a26,Samuel Audet,2012-04-28T03:49:56Z,samuel.audet@gmail.com,Samuel Audet,2012-04-28T03:49:56Z,samuel.audet@gmail.com,59,52,7," * Fixed syntax error in `VectorAdapter`, which GCC and Visual C++ would still happily compile
 * Added new `source.suffix` property to have the names of generated source files end with something else than `.cpp` and support frameworks like CUDA that require filenames with a `.cu` extension to compile properly, and also changed the `-cpp` command line option to `-nocompile`"
,src/main/java/com/googlecode/javacpp/Generator.java,6518d25f403a7b0d97ac9d2e5b66925460150a26,Samuel Audet,2012-04-28T03:49:56Z,samuel.audet@gmail.com,Samuel Audet,2012-04-28T03:49:56Z,samuel.audet@gmail.com,59,52,7," * Fixed syntax error in `VectorAdapter`, which GCC and Visual C++ would still happily compile
 * Added new `source.suffix` property to have the names of generated source files end with something else than `.cpp` and support frameworks like CUDA that require filenames with a `.cu` extension to compile properly, and also changed the `-cpp` command line option to `-nocompile`"
,src/main/java/com/googlecode/javacpp/BuildMojo.java,ae09bd7742742d054c5e2ba13e93a8708900c83a,Samuel Audet,2012-04-21T10:42:34Z,samuel.audet@gmail.com,Samuel Audet,2012-04-21T10:42:34Z,samuel.audet@gmail.com,412,245,167,Added `BuildMojo` class and made other adjustments for Maven (second attempt)
,src/main/java/com/googlecode/javacpp/Builder.java,ae09bd7742742d054c5e2ba13e93a8708900c83a,Samuel Audet,2012-04-21T10:42:34Z,samuel.audet@gmail.com,Samuel Audet,2012-04-21T10:42:34Z,samuel.audet@gmail.com,412,245,167,Added `BuildMojo` class and made other adjustments for Maven (second attempt)
,src/main/java/com/googlecode/javacpp/BuildMojo.java,39997aa3dd13aa18c043aa2c1c48c46b0730a7ad,Samuel Audet,2012-04-21T10:27:35Z,samuel.audet@gmail.com,Samuel Audet,2012-04-21T10:27:35Z,samuel.audet@gmail.com,196,196,0,Added `BuildMojo` class and made other adjustments for Maven
,src/main/java/com/googlecode/javacpp/Builder.java,6f15182e69f682b5c789cd974bb59573bffb6cad,Samuel Audet,2012-04-15T08:39:14Z,samuel.audet@gmail.com,Samuel Audet,2012-04-15T08:39:14Z,samuel.audet@gmail.com,128,71,57,Fixed Maven build and Mac OS X `-framework` option (issue #10) and other minor things
,src/main/java/com/googlecode/javacpp/Loader.java,6f15182e69f682b5c789cd974bb59573bffb6cad,Samuel Audet,2012-04-15T08:39:14Z,samuel.audet@gmail.com,Samuel Audet,2012-04-15T08:39:14Z,samuel.audet@gmail.com,128,71,57,Fixed Maven build and Mac OS X `-framework` option (issue #10) and other minor things
,src/main/java/com/googlecode/javacpp/BoolPointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/Builder.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/BytePointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/CLongPointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/CharPointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/DoublePointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/FloatPointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/FunctionPointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/Generator.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/IntPointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/Loader.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/LongPointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/Piper.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/Pointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/PointerPointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/ShortPointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/SizeTPointer.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Adapter.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Allocator.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/ArrayAllocator.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/ByPtr.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/ByPtrPtr.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/ByPtrRef.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/ByRef.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/ByVal.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Cast.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Const.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Convention.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Function.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Index.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/MemberGetter.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/MemberSetter.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Name.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Namespace.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/NoDeallocator.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/NoOffset.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Opaque.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Platform.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Properties.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/Raw.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/ValueGetter.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
,src/main/java/com/googlecode/javacpp/annotation/ValueSetter.java,c3248e6fd3c391ff4e5e6b1048d86a438c25191c,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,Samuel Audet,2012-04-08T08:41:11Z,samuel.audet@gmail.com,6627,6627,0,Initial commit
